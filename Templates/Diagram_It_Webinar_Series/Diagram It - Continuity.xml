<?xml version="1.0" encoding="UTF-8"?>
<project ref="diagram-it--continuity" name="Diagram It - Continuity" isSyncing="false" tags="" modelUpdated="2024-07-11 15:18:17" workflowState="New" locked="false">
  <desc/>
  <diagram draft="false">
    <schema></schema>
  </diagram>
  <trustZones>
    <trustZone ref="public-cloud" uuid="b61d6911-338d-46a8-9f39-8dcd24abfe91" name="Public Cloud" desc="Public cloud services" trustRating="60"/>
    <trustZone ref="datacenter" uuid="1f61aed0-800a-4ee3-a01a-cd98946c9549" name="DataCenter" desc="" trustRating="75"/>
  </trustZones>
  <questions/>
  <assets/>
  <settings>
    <issueTrackers>
      <jira>
        <fields/>
      </jira>
    </issueTrackers>
  </settings>
  <dataflows>
    <dataflow name="AWS EC2 Auto Scaling -&gt; AWS DynamoDB" ref="0fbe032d-9d8a-487f-ba02-455ae348a975" source="13a5a171-3d3f-4360-8d9e-419c2c8f088d" target="d303d3b1-d0bf-498b-b968-ebf067bd9e09">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS ELB (Elastic Load Balancer) -&gt; AWS EC2 Auto Scaling" ref="17cb7eb7-9947-4f71-8501-1993d2f61781" source="028a9259-ab7e-477e-a087-c10ebb03998e" target="0087981b-2050-44c3-844b-a540890ca6ff">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS DynamoDB -&gt; DyanamoDB Continuous Backup" ref="19211d86-c565-4d0d-85db-956b68e17a93" source="b8cad567-f753-4680-8199-f1d43aa4435b" target="19213ee7-f06a-4695-bea0-1fb7a3eabb16">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS EC2 Auto Scaling -&gt; AWS DynamoDB" ref="457cb55b-75d3-4ccf-b8dd-3b5eee9c096c" source="2138013b-51f6-4875-b870-5a1604bb154e" target="b8cad567-f753-4680-8199-f1d43aa4435b">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS ELB (Elastic Load Balancer) -&gt; AWS EC2 Auto Scaling" ref="4fb0d310-d73d-489d-a4dd-f480ad282dee" source="028a9259-ab7e-477e-a087-c10ebb03998e" target="4b4306bd-4d04-488a-b8d4-54ba23d40506">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS EC2 Auto Scaling -&gt; AWS EC2 Auto Scaling" ref="5697e5b6-c5da-4ccc-9f90-cf8fc1a93d56" source="0087981b-2050-44c3-844b-a540890ca6ff" target="51f33723-dffe-47d6-8875-f07fe6a109c9">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS Route 53 DNS Service -&gt; AWS ELB (Elastic Load Balancer)" ref="5d545a96-7818-49f1-92d1-75217d9cb2c5" source="f881c161-9a52-4808-8a67-f19292f93e96" target="028a9259-ab7e-477e-a087-c10ebb03998e">
      <assets/>
      <tags>
        <tag tag="https"/>
        <tag tag="TLS 1.2+"/>
      </tags>
    </dataflow>
    <dataflow name="AWS EC2 Auto Scaling -&gt; AWS EC2 Auto Scaling" ref="7196619c-5ef0-4acb-87b4-3bb0a62d2cf3" source="d85b7d1a-165f-49b1-a71b-d998bcb5edb3" target="0a2abea7-8c6f-4a76-988c-bc3439160cc7">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS DynamoDB -&gt; DyanamoDB Continuous Backup" ref="790527c7-cc32-47aa-8ba3-75fa23b51766" source="d303d3b1-d0bf-498b-b968-ebf067bd9e09" target="b121bca7-af45-4dc7-9131-4105c0330af2">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS EC2 Auto Scaling -&gt; AWS EC2 Auto Scaling" ref="b0425e05-9a1a-4a3d-99c3-b0d4deaa3f46" source="c9f38dcb-e6f8-469b-b027-3db87175608b" target="2138013b-51f6-4875-b870-5a1604bb154e">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS EC2 Auto Scaling -&gt; AWS DynamoDB" ref="badbbf33-633e-4872-a8a5-58e71f8ae1b1" source="0a2abea7-8c6f-4a76-988c-bc3439160cc7" target="b8cad567-f753-4680-8199-f1d43aa4435b">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS EC2 Auto Scaling -&gt; AWS EC2 Auto Scaling" ref="c30f1043-af4b-468a-810c-53c2b7e6383e" source="4b4306bd-4d04-488a-b8d4-54ba23d40506" target="13a5a171-3d3f-4360-8d9e-419c2c8f088d">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS EC2 Auto Scaling -&gt; AWS DynamoDB" ref="d316b358-53fe-4fa1-ad7c-e9ebf98ca865" source="51f33723-dffe-47d6-8875-f07fe6a109c9" target="d303d3b1-d0bf-498b-b968-ebf067bd9e09">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS Route 53 DNS Service -&gt; AWS ELB (Elastic Load Balancer)" ref="d6b3ded9-177f-4443-9fa5-405391e6c3da" source="f881c161-9a52-4808-8a67-f19292f93e96" target="1e88a75e-5403-4764-96da-46929c4c55dc">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS ELB (Elastic Load Balancer) -&gt; AWS EC2 Auto Scaling" ref="e349c43f-1891-4bda-92fd-586ce0696e21" source="1e88a75e-5403-4764-96da-46929c4c55dc" target="d85b7d1a-165f-49b1-a71b-d998bcb5edb3">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS DynamoDB -&gt; AWS DynamoDB" ref="e96ea4b0-efd7-442d-a61c-cd9a21a31459" source="d303d3b1-d0bf-498b-b968-ebf067bd9e09" target="b8cad567-f753-4680-8199-f1d43aa4435b">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS DynamoDB -&gt; AWS DynamoDB" ref="e9f4494e-2022-46e9-a8f0-e8796d029bca" source="b8cad567-f753-4680-8199-f1d43aa4435b" target="d303d3b1-d0bf-498b-b968-ebf067bd9e09">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS ELB (Elastic Load Balancer) -&gt; AWS EC2 Auto Scaling" ref="ec0f753b-0e42-45a1-ab17-9f57e806cc47" source="1e88a75e-5403-4764-96da-46929c4c55dc" target="c9f38dcb-e6f8-469b-b027-3db87175608b">
      <assets/>
      <tags/>
    </dataflow>
  </dataflows>
  <customFields>
    <customField ref="go-live-date" value=""/>
    <customField ref="project-epic-id" value=""/>
    <customField ref="project-manager" value="jrabe@iriusrisk.com"/>
  </customFields>
  <components>
    <component uuid="5e8e53ae-2c52-4d51-8088-d6ea6852c9d8" diagramComponentId="14e49d72-d846-4380-92d9-92b3ef111fd6" ref="fced5fe5-ffd5-4996-acf4-781167c3cbad" name="AWS Account Environment" desc="" library="Hydras-AWS-Foundation" parentComponentRef="" componentDefinitionRef="amazon-web-services-environment" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="AWS-Logging-3.3" name="Audit logs are accesible" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The audit logs are not encrypted and they can be accessed by attackers and obtain sensitive data
                        in clear text.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.005">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Monitoring-4.5" name="Brute force attempts on the Amazon management console cannot be detected" state="0" impact="100" issueId="" issueLink="">
          <desc>The failure connection attempts (brute force) must be audited and monitored and the
                        correspondent personnel must be alerted and informed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.656">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Monitoring-4.12" name="Changes in the network configuration cannot be detected" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The changes in the network configurations (NACLs, route and gateway tables) are not detected
                        because the monitorization and alerts of the network configuration are not configured to detect
                        these changes.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.656">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Monitoring-4.4" name="Changes in the security configurations can be not detected" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Monitoring and alerting for security configurations are not configured and changes cannot be
                        detected.&amp;nbsp;
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.656">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Monitoring-4.10" name="Changes in the security groups cannot be detected" state="0" impact="100" issueId="" issueLink="">
          <desc>The changes in the security groups must be audited and monitored and the correspondent
                        personnel must approve these changes. If the situation is not the correct, attackers can access
                        to security systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.655">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="cloudwatch-misconfig" name="Cloudwatch is misconfigured" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.656">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.2" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.290">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Monitoring-4.2" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.656">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.263">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.8" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Access to sensitive systems without using MFA to log into the systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.290">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Monitoring-4.3" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Login to the console without using the Multi-factor Authentication (MFA) and they are not
                        detected. The connection without the MFA must be audited and monitored, the correct security
                        group must be informed and they must validate this connection.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.656">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.290">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="LOST-SECURITY-ALERTS" name="Misconfigured Security contact details" state="0" impact="100" issueId="" issueLink="">
          <desc>The security contact details for the Azure subscription are not properly configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security
                            contact details&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fields are filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.290">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.2" name="Networks for Amazon resources are not properly segmented" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.264">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Logging-3.4" name="Non-auditable actions in the resources" state="0" impact="100" issueId="" issueLink="">
          <desc>The actions in the resources are not audited and not recorded in the logs.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.005">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Logging-3.1" name="Non-auditable API calls in all regions" state="0" impact="100" issueId="" issueLink="">
          <desc>The API call to the resources is not audited and the actions are not recorded into the logs.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.004">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Logging-3.8" name="Non-centrality audit logs" state="0" impact="100" issueId="" issueLink="">
          <desc>The audit logs are not stored in a central system. Therefore, the audit logs cannot be
                        exploited correctly by the security personnel.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.005">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-1.21" name="The access keys are generated when the setup of the users is started" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The system doesn't require additional steps to create access keys, the access keys are
                        generating when the process to create an user is starting. The problem is that these keys can be
                        in use somewhere in the organization and maybe these keys are not necessary for the user.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.290">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.8" name="The access to the routing tables are not restricted" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Being highly selective in peering routing tables is a very effective way of minimizing the
                        impact of breach as resources outside of these routes are inaccessible to the peered VPC.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.264">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.1" name="The Authentication Method for Administrator Accounts is not configured" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The authentication method &amp;quot;Multi-factor Authentication&amp;quot; for the Administrator
                        accounts are not configured.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.290">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-EXPIRATION-DATE" name="The password expiration is not established" state="0" impact="100" issueId="" issueLink="">
          <desc>The password expiration is not configured and users are not obliged to change their passwords.
                        Not change frequently the passwords gives facilities to attackers to obtain them.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.289">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="LOST-ACCESS-ROOT-01" name="The Root Account is mis-configured" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator account is not configured. The security question to recover or reset the
                        password and the authentication method are not configured.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.290">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.9" name="The security policies are exposed in the resources" state="0" impact="100" issueId="" issueLink="">
          <desc>The security policies are not configured and the security configurations are exposed for the
                        attackers.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.290">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.6" name="The User Account is not configured" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Key security settings such as the resetting of the password and other password controls are not configured.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.290">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Logging-3.7" name="Unaudited connections with the resources" state="0" impact="100" issueId="" issueLink="">
          <desc>The connections with the applications and with the databases cannot be audited and not
                        detected.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.005">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Logging-3.9" name="Unaudited resources changes" state="0" impact="100" issueId="" issueLink="">
          <desc>The changes in the applications and in the databases and these changes are not detected and
                        not audited.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.005">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="Hydras-AWS-IAM-2.7" name="Allocate privileges via groups or roles" issueId="" issueLink="" platform="" cost="1" risk="46" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>Granting least privilege ensures that users only have the permissions required to complete
                their jobs rather than additional privileges that are not required. Following this model ensures
                that, should an account be compromised, the blast radius of damage is limited.
                &lt;br /&gt;
                &lt;br /&gt;
                &lt;b&gt;Remediation:&lt;/b&gt;
                &lt;div&gt;
                &lt;ul&gt;
                &lt;li&gt;Allocate privileges via groups or roles via the recommendation in &amp;quot;Use RBAC
                with pre-defined policies added into groups or roles&amp;quot;.&lt;/li&gt;
                &lt;/ul&gt;
                &lt;/div&gt;
          </desc>
          <implementations/>
          <references>
            <reference name="AWS Lambda Permissions Model" url="https://docs.aws.amazon.com/lambda/latest/dg/intro-permission-model.html"/>
            <reference name="AWS Use API Gateway Lambda Authorizers" url="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-use-lambda-authorizer.html"/>
            <reference name="Configure Lambda Authorizer Using the API Gateway Console" url="https://docs.aws.amazon.com/apigateway/latest/developerguide/configure-api-gateway-lambda-authorization-with-console.html"/>
            <reference name="Security best practices in Amazon API Gateway" url="https://docs.aws.amazon.com/apigateway/latest/developerguide/security-best-practices.html"/>
            <reference name="Using Identity-Based Policies (IAM Policies) for AWS Lambda" url="https://docs.aws.amazon.com/lambda/latest/dg/access-control-identity-based.html"/>
            <reference name="Using Resource-Based Policies for AWS Lambda (Lambda Function Policies)" url="https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Follow the audit check in &amp;quot;Use RBAC with pre-defined policies added into
                            groups or roles&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Ensure the privileges granted to these groups or roles only give the user the
                            ability to perform their and no more.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.040">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.12" name="Apply an AWS Managed Config Rule for EIPs attached to EC2 instances within VPC" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  AWS Config provides you with a detailed inventory of your AWS resources and their current configuration, and continuously records configuration changes to these resources. You can evaluate these configurations and changes for compliance with ideal configurations as defined by AWS Config Rules. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create locally a json file (similar with the below sample) with the configuration of the Config Rule, and save it as /tmp/ConfigRule.json:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    "Description": "Checks whether all EIP addresses allocated to a VPC are attached to 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    EC2 instances or in-use ENIs.", 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    "ConfigRuleName": "eip-attached", 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    "Source": { 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    "Owner": "AWS", 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    "SourceIdentifier": "EIP_ATTACHED" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    }, 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    "Scope": { 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    "ComplianceResourceTypes": [ 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    "AWS::EC2::EIP" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    ] 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    } 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    } 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a Config Rule using the configuration saved earlier:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws configservice put-config-rule --config-rule file:///tmp/ConfigRule.json 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Describe config rules" url="https://docs.aws.amazon.com/cli/latest/reference/configservice/describe-config-rules.html"/>
            <reference name="Put config rule" url="https://docs.aws.amazon.com/cli/latest/reference/configservice/put-config-rule.html"/>
            <reference name="What is Config" url="https://docs.aws.amazon.com/config/latest/developerguide/WhatIsConfig.html"/>
          </references>
          <standards>
            <standard ref="5.12" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.12" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Search for a Config Rule that checks whether all EIP addresses allocated to a VPC are attached to EC2 instances or in-use ENIs:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws configservice describe-config-rules --query "ConfigRules[?Source.SourceIdentifier== 'EIP_ATTACHED']" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.160">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-2.3-2.4" name="Apply an IAM Role for Amazon EC2 Tier" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;b&gt;Description&lt;/b&gt;:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  An IAM role is similar to a user, in that it is an AWS identity with permission policies that determine what the identity can and cannot do in AWS. However, instead of being uniquely associated with one person, a role is intended to be assumable by anyone who needs it.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Also, a role does not have any credentials (password or access keys) associated with it. Instead, if a user is assigned to a role, access keys are created dynamically and provided to the user.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  You can use roles to delegate access to users, applications, or services that don't normally have access to your AWS resources. Applications must sign their API requests with AWS credentials. Therefore, if you are an application developer, you need a strategy for managing credentials for your applications that run on EC2 instances. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  IAM Roles for EC2 allow application running within an EC2 instance assume the role applied to the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation&lt;/b&gt;: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   *Note: references to Web tier are also applicable to App tier. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If doesn't exist, create an instance profile for Web tier instances:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   aws iam create-instance-profile --instance-profile-name &amp;lt;web_tier_instance_profile&amp;gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If doesn't exist, create an IAM role for the instance profile:&lt;/li&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Create a trust relationship policy document and save it locally as /tmp/TrustPolicy.json:&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      { 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      "Version": "2012-10-17", 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      "Statement": [ 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       { 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       "Effect": "Allow", 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       "Principal": { 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;blockquote&gt; 
     &lt;div&gt; 
      &lt;div&gt;
        "Service": "ec2.amazonaws.com" 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/blockquote&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       }, 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       "Action": "sts:AssumeRole" 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       } 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      ] 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      } 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Create the IAM role using the above trust policy:&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      aws iam create-role --role-name &amp;lt;web_tier_iam_role&amp;gt; --assume-role-policydocument file:///tmp/TrustPolicy.json 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Add the IAM role created to the Instance profile:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws iam add-role-to-instance-profile --role-name &amp;lt;web_tier_iam_role&amp;gt; --instanceprofile-name &amp;lt;web_tier_instance_profile&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Add role to instance profile" url="https://docs.aws.amazon.com/cli/latest/reference/iam/add-role-to-instance-profile.html"/>
            <reference name="Create instance profile" url="https://docs.aws.amazon.com/cli/latest/reference/iam/create-instance-profile.html"/>
            <reference name="Create role" url="https://docs.aws.amazon.com/cli/latest/reference/iam/create-role.html"/>
            <reference name="Describe instances" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html"/>
            <reference name="Get instance profile" url="https://docs.aws.amazon.com/cli/latest/reference/iam/get-instance-profile.html"/>
          </references>
          <standards>
            <standard ref="2.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="2.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="2.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="2.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List all the Web tier EC2 instances, check if and which IAM instance profile they have attached, and note the name of the instance profile:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-instances --filters Name=tag:&amp;lt;web_tier_tag&amp;gt;,Values=&amp;lt;web_tier_tag_value&amp;gt; --query "Reservations[*].Instances[*].{IamInstanceProfile:IamInstanceProfile, InstanceId:InstanceId}" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check and note the IAM role name used by the Web tier instance profile:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws iam get-instance-profile --instance-profile-name &amp;lt;web_tier_instance_profile&amp;gt; --query "InstanceProfile.Roles[*].RoleName" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.040">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-2.1-2.2" name="Apply IAM Policy for EC2 IAM Roles for tier" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;b&gt;Description&lt;/b&gt;:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  By default, IAM users, groups, and roles have no access to AWS resources. IAM policies are the means by which privileges are granted to users, groups, or roles defined with AWS Identity Access Management. An IAM policy is a document that formally states one or more permissions using the following structure:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Actions: what actions are allowed (each AWS service has its own set of actions)&lt;/li&gt; 
  &lt;li&gt;Resources: which resources will be affected by the action&lt;/li&gt; 
  &lt;li&gt;Effect: what effect will be when the subject (user/group/roles) requests access Policies are documents that are created using JSON. A policy consists of one or more statements, each of which describes one set of permissions.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;b&gt;Remediation&lt;/b&gt;: 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
  &lt;/div&gt; 
  &lt;div&gt;
    *Note: references to Web tier are also applicable to App tier 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
  &lt;/div&gt; 
  &lt;div&gt;
    Using the Amazon unified command line interface: 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;ul&gt; 
    &lt;li&gt;If doesn't exist, create an instance profile for Web tier instances:&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      aws iam create-instance-profile --instance-profile-name &amp;lt;web_tier_instance_profile&amp;gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;ul&gt; 
    &lt;li&gt;If doesn't exist, create an IAM role for the instance profile:&lt;/li&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Create a trust relationship policy document and save it locally as /tmp/TrustPolicy.json:&lt;/li&gt; 
    &lt;/ul&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      { 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      "Version": "2012-10-17", 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      "Statement": [ 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       { 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       "Effect": "Allow", 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       "Principal": { 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;blockquote&gt; 
     &lt;div&gt; 
      &lt;div&gt;
        "Service": "ec2.amazonaws.com" 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/blockquote&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       }, 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       "Action": "sts:AssumeRole" 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       } 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      ] 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     } 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Create the IAM role using the above trust policy:&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       aws iam create-role --role-name &amp;lt;web_tier_iam_role&amp;gt; --assume-role-policydocument file:///tmp/TrustPolicy.json 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Add the IAM role created to the Instance profile:&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      aws iam add-role-to-instance-profile --role-name &amp;lt;web_tier_iam_role&amp;gt; --instanceprofile-name &amp;lt;web_tier_instance_profile&amp;gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;ul&gt; 
    &lt;li&gt;If doesn't exist, create an IAM managed policy for Web tier instances, and note the policy ARN:&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      aws iam create-policy --policy-name &amp;lt;iam_policy_name&amp;gt; --policy-document file://policy 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Attach the IAM policy created to the Web tier IAM role:&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      aws iam attach-role-policy --policy-arn &amp;lt;iam_policy_arn&amp;gt; --rolename &amp;lt;web_tier_iam_role&amp;gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Add role to instance profile" url="https://docs.aws.amazon.com/cli/latest/reference/iam/add-role-to-instance-profile.html"/>
            <reference name="Attach role policy" url="https://docs.aws.amazon.com/cli/latest/reference/iam/attach-role-policy.html"/>
            <reference name="Create instance profile" url="https://docs.aws.amazon.com/cli/latest/reference/iam/create-instance-profile.html"/>
            <reference name="Create policy" url="https://docs.aws.amazon.com/cli/latest/reference/iam/create-policy.html"/>
            <reference name="Create role" url="https://docs.aws.amazon.com/cli/latest/reference/iam/create-role.html"/>
            <reference name="Get instance profile" url="https://docs.aws.amazon.com/cli/latest/reference/iam/get-instance-profile.html"/>
            <reference name="Get policy" url="https://docs.aws.amazon.com/cli/latest/reference/iam/get-policy.html"/>
            <reference name="Get policy version" url="https://docs.aws.amazon.com/cli/latest/reference/iam/get-policy-version.html"/>
            <reference name="List attached role policies" url="https://docs.aws.amazon.com/cli/latest/reference/iam/list-attached-role-policies.html"/>
          </references>
          <standards>
            <standard ref="2.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="2.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="2.2" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="2.2" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check and note the IAM role name used by the Web tier instance profile:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws iam get-instance-profile --instance-profile-name &amp;lt;web_tier_instance_profile&amp;gt; --query "InstanceProfile.Roles[*].RoleName" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check managed policies attached to the IAM role, and note the policies ARN:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws iam list-attached-role-policies --role-name &amp;lt;web_tier_iam_role&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check and note the version of the IAM policies attached to the IAM role:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws iam get-policy --policy-arn &amp;lt;iam_policy_arn&amp;gt; --query "Policy.DefaultVersionId" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check the document policy:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws iam get-policy-version --policy-arn &amp;lt;iam_policy_arn&amp;gt; --version-id &amp;lt;iam_policy_version&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.040">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-EC2-6.3" name="Apply IAM roles" issueId="" issueLink="" platform="" cost="1" risk="46" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Applications that run on an Amazon EC2/S3 instance need credentials in order to access other AWS services. To provide credentials to the application in a secure way, use IAM roles. A role is an entity that has its own set of permissions, but that isn't a user or group. Roles also don't have their own permanent set of credentials the way IAM users do. In the case of Amazon EC2/S3, IAM dynamically provides temporary credentials to the EC2/S3 instance, and these credentials are automatically rotated for you. 
&lt;br /&gt; 
&lt;br /&gt;When you launch an EC2/S3 instance, you can specify a role for the instance as a launch parameter. Applications that run on the EC2/S3 instance can use the role's credentials when they access AWS resources. The role's permissions determine what the application is allowed to do. It is recommended that all EC2/S3 instances are launched with a role, even if the role has no permissions (as they can be added later if desired). 
&lt;div&gt; 
 &lt;br /&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Login to the AWS Management Console.&lt;/li&gt; 
  &lt;li&gt;Select EC2/S3 from the services menu.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;Launch Instance&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Complete the wizard until step 3 at which point ensure an IAM role is selected for the &amp;quot;IAM role&amp;quot; option (note the role must already exist).&lt;/li&gt; 
  &lt;li&gt;Complete the wizard to launch the instance.&lt;/li&gt; 
 &lt;/ol&gt;NB: You cannot add a role to an instance that has been launched without one. In these cases create an AMI from an existing instance and launch a new instance, assigning an IAM role as detailed above. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; &lt;br /&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.18" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Login to the AWS Management Console.&lt;/li&gt;
                            &lt;li&gt;Select EC2/S3 from the services menu.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Instances&amp;quot; from the left hand menu.&lt;/li&gt;
                            &lt;li&gt;For each instance in the list:&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;select the instance&lt;/li&gt;
                            &lt;li&gt;in the preview pane confirm the instance has an &amp;quot;IAM Role&amp;quot;
                            assigned (if a hyphen &amp;quot;-&amp;quot; is shown then your instance has no role
                            assigned).&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.039">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.8" name="Apply RBAC with pre-defined policies added into groups or roles" issueId="" issueLink="" platform="" cost="1" risk="46" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Instead of defining permissions for individual IAM users, it's usually more convenient to create groups that relate to job functions (administrators, developers, accounting, etc.), define the relevant permissions for each group, and then assign IAM users to those groups. All the users in an IAM group inherit the permissions assigned to the group. That way, you can make changes for everyone in a group in just one place. As people move around in your company, you can simply change what IAM group their IAM user belongs to. This method is know as Role Based Access Control (RBAC). 
&lt;div&gt; 
 &lt;br /&gt; 
 &lt;b&gt;Remediation:&lt;br /&gt;&lt;/b&gt;Remove privilege granted directly to a user: 
 &lt;br /&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Sign in to the AWS Management Console (with IAM update privileges).&lt;/li&gt; 
  &lt;li&gt;Go to IAM Service on the AWS Console.&lt;/li&gt; 
  &lt;li&gt;Click on Users.&lt;/li&gt; 
  &lt;li&gt;For each user complete the following:&lt;/li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Select the user.&lt;/li&gt; 
   &lt;li&gt;Click on the Permissions tab.&lt;/li&gt; 
   &lt;li&gt;Expand &amp;quot;Managed Policies&amp;quot;.&lt;/li&gt; 
   &lt;li&gt;Click &amp;quot;Detach Policy&amp;quot;.&lt;/li&gt; 
   &lt;li&gt;Expand &amp;quot;Inline Policies&amp;quot;.&lt;/li&gt; 
   &lt;li&gt;Click &amp;quot;Remove Policy&amp;quot;.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ol&gt;Create a Group and add a user: 
 &lt;br /&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Sign in to the AWS Management Console (with IAM update privileges).&lt;/li&gt; 
  &lt;li&gt;Go to IAM Service on the AWS Console.&lt;/li&gt; 
  &lt;li&gt;Select Groups and click Create New Group.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;In the Group Name box, type the name of the group and click Next Step.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;In the list of policies, select the check box for each policy that you want to apply to all members of the group. Click Next Step.&lt;/li&gt; 
  &lt;li&gt;Click Create Group.&lt;/li&gt; 
  &lt;li&gt;Click the new Group and select the &amp;quot;Users&amp;quot; tab.&lt;/li&gt; 
  &lt;li&gt;Click &amp;quot;Add Users to Group&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Select the users and click &amp;quot;Add Users&amp;quot;.&lt;/li&gt; 
 &lt;/ol&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.15" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.15" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Obtain a list of IAM users by: aws iam list-users --query 'Users[*].UserName'
                            --output text&lt;/li&gt;
                            &lt;li&gt;Run the following to determine if they have policies directly attached:&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws iam list-attached-user-policies --user-name user
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws iam list-user-policies --user-name user
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.040">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.10" name="Apply setting MFA for sensitive API calls" issueId="" issueLink="" platform="" cost="1" risk="46" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>To the extent that it is practical consider enforcing MFA access for sensitive API calls. For example, you can require that a user has authenticated with an MFA device in order to be allowed to terminate an Amazon EC2 instance. This ensures that such high level changes to your AWS environment are protected with an extra layer of security thus helping to prevent accidental or malicious damage. 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt;The following is an example of how to create a policy that enforces MFA to terminate EC2 instances: 
 &lt;br&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Sign in to the AWS Management Console (with IAM update privileges).&lt;/li&gt; 
  &lt;li&gt;Go to IAM Service on the AWS Console.&lt;/li&gt; 
  &lt;li&gt;Select "Policies".&lt;/li&gt; 
  &lt;li&gt;Select "Create Policy".&lt;/li&gt; 
  &lt;li&gt;Select "Create your own policy".&lt;/li&gt; 
  &lt;li&gt;Provide a policy name and description.&lt;/li&gt; 
  &lt;li&gt;In the policy document add the following:&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;div&gt; 
  &lt;i&gt; {&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt; "Version": "2012-10-17",&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt; "Statement": [{&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt; "Effect": "Allow",&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt; "Action": [&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt; "ec2:StopInstances",&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt; "ec2:TerminateInstances"&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt; ],&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt; "Resource": ["*"],&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt; "Condition": {"Bool": {"aws:MultiFactorAuthPresent": "true"}}&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt; }]&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt;}&lt;/i&gt; 
 &lt;/div&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Click "Create policy".&lt;/li&gt; 
  &lt;li&gt;The policy may now be added to a group by following the outlines in "Use RBAC with pre-defined policies added into groups or roles".&lt;/li&gt; 
 &lt;/ul&gt; &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configuring MFA-Protected API Access" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_configure-api-require.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>The following checks that MFA is forced on a policy:
                            &lt;br /&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Sign in to the AWS Management Console (with IAM update privileges).&lt;/li&gt;
                            &lt;li&gt;Go to IAM Service on the AWS Console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Policies&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;In the filter select &amp;quot;Customer Managed Policies&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select the policy to check.&lt;/li&gt;
                            &lt;li&gt;In the policy document check for the presence of the line: &amp;quot;Condition&amp;quot;:
                            {&amp;quot;Bool&amp;quot;: {&amp;quot;aws:MultiFactorAuthPresent&amp;quot;: &amp;quot;true&amp;quot;}}&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.039">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.5" name="Avoid API keys for root account" issueId="" issueLink="" platform="" cost="1" risk="29" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>You use an access key (an access key ID and secret access key) to make programmatic requests to AWS. However, do not use your AWS account (root) access key. The access key for your AWS account gives full access to all your resources for all AWS services, including your billing information. You cannot restrict the permissions associated with your AWS account access key.&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Sign in to the AWS Management Console as Root.&lt;/li&gt; 
  &lt;li&gt;Click on Account Name at the top left and select Security Credentials.&lt;/li&gt; 
  &lt;li&gt;On the pop up screen Click on Continue to Security Credentials.&lt;/li&gt; 
  &lt;li&gt;Click on Access Keys.&lt;/li&gt; 
  &lt;li&gt;Under the Status column if there are any Keys which are "Active".&lt;/li&gt; 
  &lt;li&gt;Click on "Make Inactive" and click "Delete".&lt;/li&gt; 
 &lt;/ol&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.4" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.4" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="2.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="7.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Generate a credential report with the command: aws iam generate-credential-report&lt;/li&gt;
                            &lt;li&gt;Run the following command: aws iam get-credential-report --query 'Content'
                            --output text | base64 -D | egrep &amp;quot;root|access&amp;quot; | awk -F, '{print
                            $1,$9,$14}'&lt;/li&gt;
                            &lt;li&gt;For the &amp;lt;root_account&amp;gt; user ensure access_key_1_active and
                            access_key_2_active are false.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.040">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.3" name="Avoid publishing CloudTrail logs publicly" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Since cloudtrail logs capture all API calls for the AWS account they should be stored in an S3 bucket that is not accessible to the public. Applying the correct bucket policy helps ensure the confidentiality of the data. 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Sign in to the AWS Management Console (with s3 update privileges).&lt;/li&gt; 
  &lt;li&gt;Select s3 from the services list.&lt;/li&gt; 
  &lt;li&gt;Right-click on the bucket you have used for "cloudtrail" and click "Properties".&lt;/li&gt; 
  &lt;li&gt;In the Properties pane, click the Permissions tab.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Select the row that grants permission to "Everyone" or "Any Authenticated User".&lt;/li&gt; 
  &lt;li&gt;Uncheck all the permissions granted to Everyone or Any Authenticated User.&lt;/li&gt; 
  &lt;li&gt;Click Save to save the ACL.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;If the Edit bucket policy button is present, click it.&lt;/li&gt; 
  &lt;li&gt;Remove any Statement having an Effect set to Allow and a Principal set to *.&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.3" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="3.3" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Obtain the bucket name of the cloudtrail:&amp;nbsp;aws cloudtrail describe-trails
                            --query 'trailList[*].S3BucketName'&lt;/li&gt;
                            &lt;li&gt;Ensure &amp;quot;AllUsers&amp;quot; is not granted access to the bucket:&amp;nbsp;aws
                            s3api get-bucket-acl --bucket &amp;lt;bucket_name&amp;gt; --query
                            'Grants[?Grantee.URI==`http://acs.amazonaws.com/groups/global/AllUsers`]'&lt;/li&gt;
                            &lt;li&gt;Ensure &amp;quot;Authenticated Users&amp;quot; is not granted access to the
                            bucket: aws s3api get-bucket-acl --bucket &amp;lt;bucket_name&amp;gt; --query
                            'Grants[?Grantee.URI==`http://acs.amazonaws.com/groups/global/Authenticated Users`]'&lt;/li&gt;
                            &lt;li&gt;Validate the bucket policy does not grant access to all:&amp;nbsp;aws s3api
                            get-bucket-policy --bucket &amp;lt;bucket_name&amp;gt;&lt;/li&gt;
                            &lt;li&gt;Check that the above command does not provide a principal of *, with EFFECT set to
                            ALLOW.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.865">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.1" name="Avoid the use of the root account unless absolutely necessary" issueId="" issueLink="" platform="" cost="1" risk="29" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The root account is the one which was used to open the AWS account with Amazon. Therefore it has full unrestricted access to all resources within the account including billing information. Reducing the use of this account and instead using personalized accounts with restricted permissions ensures the principles of least privilege and can help prevent accidental disclosure of credentials or unintended changes. 
&lt;br&gt; 
&lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt;Follow the remediation in "Create Individual Accounts". 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt;
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.7" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.7" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;blockquote&gt;
                            aws iam create-credential-report
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            aws iam get-credential-report --query 'Content' --output text | base64 -D | cut -d,
                            -f1,5,11,16 | grep -B1 '&amp;lt;root_account&amp;gt;'&amp;nbsp;
                            &lt;/blockquote&gt;
                            &lt;ol&gt;
                            &lt;/ol&gt;From the above determine the &amp;quot;password_last_used&amp;quot; time In
                            addition to the above set up a metric filter as described elsewhere in this library to
                            determine ad-hoc use of root.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.039">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-2.5-2.6" name="Configure AutoScaling Group Launch Configuration for Tier to use a customer created IAM Role" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;An IAM role is similar to a user, in that it is an AWS identity with permission policies that determine what the identity can and cannot do in AWS. However, instead of being uniquely associated with one person, a role is intended to be assumable by anyone who needs it.&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  Also, a role does not have any credentials (password or access keys) associated with it. Instead, if a user is assigned to a role, access keys are created dynamically and provided to the user.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  You can use roles to delegate access to users, applications, or services that don't normally have access to your AWS resources. Applications must sign their API requests with AWS credentials. Therefore, if you are an application developer, you need a strategy for managing credentials for your applications that run on EC2 instances.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  IAM Roles for EC2 allow application running within an EC2 instance assume the role applied to the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  *Note: references to Web tier are also applicable to App tier. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create new launch configuration for the Web tier using the Web tier IAM instance profile :&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws autoscaling create-launch-configuration --launch-configurationname &amp;lt;web_tier_launch_config&amp;gt; --image-id &amp;lt;web_tier_ami&amp;gt; --key-name &amp;lt;your_key_pair&amp;gt; --security-groups &amp;lt;web_tier_security_group&amp;gt; --instance-type &amp;lt;desired_instance_type&amp;gt; --iam-instance-profile &amp;lt;web_tier_instance_profile&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-launch-configurations.html"/>
            <reference name="Create launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/create-launch-configuration.html"/>
            <reference name="Get instance profile" url="https://docs.aws.amazon.com/cli/latest/reference/iam/get-instance-profile.html"/>
          </references>
          <standards>
            <standard ref="2.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="2.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="2.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="2.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check if your Web tier autoscaling group is using a launch configuration with an IAM instance profile configured:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-launch-configurations --launch-configuration-names &amp;lt;web_tier_launch_config&amp;gt; --query "LaunchConfigurations[*].IamInstanceProfile" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check and note the IAM role name used by the Web tier instance profile:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws iam get-instance-profile --instance-profile-name &amp;lt;web_tier_instance_profile&amp;gt; --query "InstanceProfile.Roles[*].RoleName" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.040">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-IAM1" name="Configure contact email and telephone details on AWS accounts" issueId="" issueLink="" platform="" cost="0" risk="32" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensure contact email and telephone details for AWS accounts are current and map to more than one individual in your organization.&lt;/p&gt;&lt;p&gt;An AWS account supports a number of contact details, and AWS will use these to contact the account owner if activity judged to be in breach of Acceptable Use Policy or indicative of likely security compromise is observed by the AWS Abuse team. Contact details should not be for a single individual, as circumstances may arise where that individual is unavailable. Email contact details should point to a mail alias which forwards email to multiple individuals within the organization; where feasible, phone contact details should point to a PABX hunt group or other call-forwarding system.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;If an AWS account is observed to be behaving in a prohibited or suspicious manner, AWS will attempt to contact the account owner by email and phone using the contact details listed. If this is unsuccessful and the account behavior needs urgent mitigation, proactive measures may be taken, including throttling of traffic between the account exhibiting suspicious behavior and the AWS API endpoints and the Internet. This will result in impaired service to and from the account in question, so it is in both the customers' and AWS' best interests that prompt contact can be established. This is best achieved by setting AWS account contact details to point to resources which have multiple individuals as recipients, such as email aliases and PABX hunt groups.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;This activity can only be performed via the AWS Console, with a user who has permission to read and write Billing information (aws-portal:*Billing ).&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Sign in to the AWS Management Console and open the Billing and Cost Management console at https://console.aws.amazon.com/billing/home#/.&lt;/li&gt;&lt;li&gt;On the navigation bar, choose your account name, and then choose My Account.&lt;/li&gt;&lt;li&gt;On the Account Settings page, next to Account Settings, choose Edit.&lt;/li&gt;&lt;li&gt;Next to the field that you need to update, choose Edit.&lt;/li&gt;&lt;li&gt;After you have entered your changes, choose Save changes.&lt;/li&gt;&lt;li&gt;After you have made your changes, choose Done.&lt;/li&gt;&lt;li&gt;To edit your contact information, under Contact Information, choose Edit.&lt;/li&gt;&lt;li&gt;For the fields that you want to change, type your updated information, and then choose Update.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.1" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.1" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;This activity can only be performed via the AWS Console, with a user who has permission to read and write Billing information (aws-portal:*Billing )&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Sign in to the AWS Management Console and open the Billing and Cost Management console at https://console.aws.amazon.com/billing/home#/.&lt;/li&gt;&lt;li&gt;On the navigation bar, choose your account name, and then choose My Account.&lt;/li&gt;&lt;li&gt;On the Account Settings page, review and verify the current details.&lt;/li&gt;&lt;li&gt;Under Contact Information, review and verify the current details.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.036">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.11" name="Configure password expiration" issueId="" issueLink="" platform="" cost="1" risk="46" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Change access keys regularly, and make sure that all IAM users in your account do as well. That way, if an access key is compromised without your knowledge, you limit how long the credentials can be used to access your resources. Credential reports can be used to determine how long access keys have been active for. 
&lt;div&gt; 
 &lt;br /&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Sign in to the AWS Management Console (with IAM update privileges).&lt;/li&gt; 
  &lt;li&gt;Go to IAM Service on the AWS Console.&lt;/li&gt; 
  &lt;li&gt;Click on Users.&lt;/li&gt; 
  &lt;li&gt;Select the user you wish to rotate the key for.&lt;/li&gt; 
  &lt;li&gt;Under access keys click &amp;quot;Create Access Key&amp;quot; (do not touch the existing key yet).&lt;/li&gt; 
  &lt;li&gt;Click &amp;quot;Download credentials&amp;quot; or &amp;quot;Show credentials&amp;quot; so that you have a record of them.&lt;/li&gt; 
  &lt;li&gt;Update any applications with the new credentials and test (we recommend to leave a few days or a week for testing).&lt;/li&gt; 
  &lt;li&gt;Once complete complete 1-4 above and for the key which needs rotating click &amp;quot;Make Inactive | Delete&amp;quot; and click &amp;quot;Deactive&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Once you are confident you will no longer need the key (wait several more days) repeat 1-4 and select &amp;quot;Delete&amp;quot; for the inactive key.&lt;/li&gt; 
 &lt;/ol&gt; 
  &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.14" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.14" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Generate a credential report: aws iam generate-credential-report&lt;/li&gt;
                            &lt;li&gt;Check the access keys created time: aws iam get-credential-report --query
                            'Content' --output text | base64 -D | awk -F, '{print $1,$9,$10,$14,$15}'&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;For each access_key_1_active and access_key_9_active that is set to True ensure
                            the created date is within the last 90 days.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.039">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Gov-1.1" name="Configure the security challenge questions within the AWS Account" issueId="" issueLink="" platform="" cost="1" risk="29" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>When an AWS account is initially created it is configured with a top level account known as the &amp;quot;root&amp;quot; account that has full administration access to all resources. In the event that the password or MFA device associated with this account is lost AWS support may recover it by asking you to answer the security questions. 
&lt;div&gt; 
 &lt;br /&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Login to the AWS Account as root.&lt;/li&gt; 
  &lt;li&gt;Click account name on the top right of the management console.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;My Account&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Scroll down to &amp;quot;Configure Security Challenge Questions&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Click on Edit.&lt;/li&gt; 
  &lt;li&gt;For each question:&lt;/li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Select an appropriate question.&lt;/li&gt; 
   &lt;li&gt;Enter an appropriate answer.&lt;/li&gt; 
   &lt;li&gt;Follow the above process for all 3 questions.&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;li&gt;Click Update when complete.&lt;/li&gt; 
  &lt;li&gt;We recommend to store the questions and answers in a secure location such as a safe where they can be used in case recovery is required.&lt;/li&gt; 
 &lt;/ol&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.3" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.3" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Login to the AWS Account as root.&lt;/li&gt;
                            &lt;li&gt;Click account name on the top right of the management console.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;My Account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Scroll down to &amp;quot;Configure Security Challenge Questions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Confirm whether questions and answers have been saved.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.039">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-4.7" name="Create a Cloudwatch Alarm and its action for the &quot;VPC Flow Logs&quot; metric filter" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;b&gt;Description&lt;/b&gt;:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;div&gt;
   A Cloudwatch alarm watches a single metric over a time period you specify, and performs one or more actions based on the value of the metric relative to a given threshold over a number of time periods. The action is a notification sent to an Amazon SNS topic.&amp;nbsp; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   The Cloudwatch Alarm will trigger a notification being sent to the administrators every time the "REJECT packets" specified threshold is reached. The alarm should be created for the "VPC Flow Logs" metric, and the action should have a SNS topic configured.&amp;nbsp; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation&lt;/b&gt;: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a Cloudwatch alarm for the VPC Flow Logs metric, and configure an Alarm Action:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws cloudwatch put-metric-alarm --alarm-name &amp;lt;vpc_flow_log_alarm_name&amp;gt; --alarm-actions &amp;lt;sns_topic_arn&amp;gt; --metric-name &amp;lt;vpc_flow_log_metric_name&amp;gt; --namespace LogMetrics --statistic &amp;lt;desired_statistic&amp;gt; --period &amp;lt;desired_period&amp;gt; --evaluation-periods &amp;lt;desired_evaluation_periods&amp;gt; --threshold &amp;lt;desired_threshold&amp;gt; --comparison-operator &amp;lt;desired_operator&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Describe alarms" url="https://docs.aws.amazon.com/cli/latest/reference/cloudwatch/describe-alarms.html"/>
            <reference name="Put metric alarm" url="https://docs.aws.amazon.com/cli/latest/reference/cloudwatch/put-metric-alarm.html"/>
          </references>
          <standards>
            <standard ref="4.7" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="4.7" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List all the Cloudwatch alarms configured for the VPC Flow Logs metric, and check if an Alarm Action is configured:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudwatch describe-alarms --query "MetricAlarms[?MetricName =='&amp;lt;vpc_flow_log_metric_name&amp;gt;'].{MetricName:MetricName,AlarmActions:AlarmActions,AlarmName:AlarmName}" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.865">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-4.6" name="Create a log metric filter for the Cloudwatch group assigned to the &quot;VPC Flow Logs&quot;" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Description:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  This recommendation builds upon the Foundation benchmark recommendation: "Ensure VPC Flow Logging is Enabled in all Applicable Regions"&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  VPC flow logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. Flow log data is stored using Amazon CloudWatch Logs. VPC flow logs can capture accepted traffic, rejected traffic, or all traffic.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Metric filters can be used to express how the service would extract metric observations from ingested events and transform them to data points in a CloudWatch metric. Metric filters are assigned to log groups, and all of the filters assigned to a log group are applied to their log streams.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A metric filter should be created for counting how many IP packets are rejected in the VPC flow logs.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a metric filter for the Cloudwatch Log group assigned to the "VPC Flow Logs":&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws logs put-metric-filter --log-group-name &amp;lt;vpc_flow_log_group_name&amp;gt; --filter-name &amp;lt;vpc_flow_log_filter_name&amp;gt; --filter-pattern "{ $.errorCode =\"AccessDenied\" }" --metric-transformations metricName= &amp;lt;vpc_flow_log_metric_name&amp;gt;,metricNamespace=LogMetrics,metricValue=1 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Describe metric filter" url="https://docs.aws.amazon.com/cli/latest/reference/logs/describe-metric-filters.html"/>
            <reference name="Filter log events" url="https://docs.aws.amazon.com/cli/latest/reference/logs/filter-log-events.html"/>
            <reference name="Put metric filter" url="https://docs.aws.amazon.com/cli/latest/reference/logs/put-metric-filter.html"/>
          </references>
          <standards>
            <standard ref="4.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="4.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface to check if the log metric filter: 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;div&gt;
   aws logs describe-metric-filters --region &amp;lt;application_region&amp;gt; --log-group-name &amp;lt;vpc_flow_log_group_name&amp;gt; 
 &lt;/div&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.865">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-2.7" name="Create an IAM group for administration purposes" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;b&gt;Description&lt;/b&gt;: 
&lt;div&gt; 
 &lt;br&gt; 
  An IAM group is a collection of IAM users. You can use groups to specify permissions for a collection of users, which can make those permissions easier to manage for those users. For example, you could have a group called Admins and give that group the types of permissions that administrators typically need. Any user in that group automatically has the permissions that are assigned to the group. If a new user joins your organization and should have administrator privileges, you can assign the appropriate permissions by adding the user to that group. Similarly, if a person changes jobs in your organization, instead of editing that user's permissions, you can remove him or her from the old groups and add him or her to the appropriate new groups. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a new IAM group for administration purposes:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws iam create-group --group-name &amp;lt;iam_admin_group_name&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Attach the Admin policy to the administration IAM group:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws iam attach-group-policy --policy-arn &amp;lt;admin_policy_arn&amp;gt; --group-name &amp;lt;iam_admin_group_name&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Impact&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The name of the IAM admin group name should be known prior to auditing this recommendation. For a sample admin policy arn see recommendation 2.1. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Attach group policy" url="https://docs.aws.amazon.com/cli/latest/reference/iam/attach-group-policy.html"/>
            <reference name="Create groups" url="https://docs.aws.amazon.com/cli/latest/reference/iam/create-group.html"/>
            <reference name="List groups" url="https://docs.aws.amazon.com/cli/latest/reference/iam/list-groups.html"/>
          </references>
          <standards>
            <standard ref="2.7" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="2.7" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the IAM groups created for administration purposes:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws iam list-groups --query "Groups[?GroupName == '&amp;lt;iam_admin_group_name&amp;gt;']" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.040">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-2.8" name="Create an IAM policy that allows admin privileges for all services used" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;b&gt;Description&lt;/b&gt;:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  A policy is a document that formally states one or more permissions.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Managed policies are standalone policies that you can attach to multiple users, groups, and roles in your AWS account. Managed policies apply only to identities (users, groups, and roles) - not resources. You must ensure that you have an IAM managed policy created with admin permissions for all the AWS services used by the application. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation&lt;/b&gt;: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create an IAM managed admin policy for all AWS services used:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws iam create-policy --policy-name &amp;lt;admin_policy_name&amp;gt; --policy-document file://policy 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;b&gt;Impact&lt;/b&gt;:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  The admin policy should be defined prior to auditing and remediating this recommendation. For a sample admin policy see recommendation 2.1. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create policy" url="https://docs.aws.amazon.com/cli/latest/reference/iam/create-policy.html"/>
            <reference name="Get policy" url="https://docs.aws.amazon.com/cli/latest/reference/iam/get-policy.html"/>
            <reference name="List policies" url="https://docs.aws.amazon.com/cli/latest/reference/iam/list-policies.html"/>
          </references>
          <standards>
            <standard ref="2.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="2.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the IAM admin policies and note the policy ARN and DefaultVersionId:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws iam list-policies --query "Policies[?PolicyName == '&amp;lt;admin_policy_name&amp;gt;']" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;If the policy exists, check the policy document:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws iam get-policy-version --policy-arn &amp;lt;admin_policy_arn&amp;gt; --version-id &amp;lt;admin_policy_version&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.040">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-1.20" name="Create an IAM role for managing incidents with AWS" issueId="" issueLink="" platform="" cost="1" risk="46" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>WS provides a support center that can be used for incident notification and response, as well as technical support and customer services. Create an IAM Role to allow authorized users to manage incidents with AWS Support. 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;b&gt;Remediation:&lt;/b&gt; 
&lt;br /&gt;Using the Amazon unified command line interface, create an IAM role for managing incidents with AWS: 
&lt;br /&gt; 
&lt;br /&gt;Create a trust relationship policy document that allows &amp;lt;iam_user&amp;gt; to manage AWS incidents, and save it locally as /tmp/TrustPolicy.json: 
&lt;br /&gt; 
&lt;br /&gt;{ 
&lt;br /&gt;&amp;quot;Version&amp;quot;: &amp;quot;2012-10-17&amp;quot;, 
&lt;br /&gt;&amp;quot;Statement&amp;quot;: [{ 
&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;quot;Effect&amp;quot;: &amp;quot;Allow&amp;quot;, 
&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;quot;Principal&amp;quot;: { 
&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;quot;AWS&amp;quot;: &amp;quot;&amp;lt;iam_user&amp;gt;&amp;quot; 
&lt;br /&gt;&amp;nbsp; }, 
&lt;br /&gt;&amp;nbsp; &amp;quot;Action&amp;quot;: &amp;quot;sts:AssumeRole&amp;quot; 
&lt;br /&gt;&amp;nbsp; }] 
&lt;br /&gt;} 
&lt;br /&gt; 
&lt;br /&gt;Create the IAM role using the above trust policy: 
&lt;br /&gt; 
&lt;br /&gt;aws iam create-role --role-name &amp;lt;aws_support_iam_role&amp;gt; --assume-role-policy-document file:///tmp/TrustPolicy.json 
&lt;br /&gt; 
&lt;br /&gt;Attach 'AWSSupportAccess' managed policy to the created IAM role: 
&lt;br /&gt; 
&lt;br /&gt;aws iam attach-role-policy --policy-arn &amp;lt;iam_policy_arn&amp;gt; --role-name &amp;lt;aws_support_iam_role&amp;gt; 
&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: list entities for policy" url="https://docs.aws.amazon.com/cli/latest/reference/iam/list-entities-for-policy.html"/>
            <reference name="Amazon docs: managed policies and inline policies" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html"/>
            <reference name="Attach role policy" url="https://docs.aws.amazon.com/cli/latest/reference/iam/attach-role-policy.html"/>
            <reference name="List policies" url="https://docs.aws.amazon.com/cli/latest/reference/iam/list-policies.html"/>
          </references>
          <standards>
            <standard ref="1.17" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.17" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Using the Amazon unified command line interface: 
            &lt;br /&gt; 
            &lt;div&gt; 
             &lt;ul&gt; 
              &lt;li&gt;List IAM policies, filter for the 'AWSSupportAccess' managed policy, and note the &amp;quot;Arn&amp;quot; element value: &lt;/li&gt; 
             &lt;/ul&gt; 
            &lt;/div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; aws iam list-policies --query &amp;quot;Policies[?PolicyName == 'AWSSupportAccess']&amp;quot; 
            &lt;br /&gt; 
            &lt;div&gt; 
             &lt;ul&gt; 
              &lt;li&gt;Check if the 'AWSSupportAccess' is attached to any IAM user, group or role: &lt;/li&gt; 
             &lt;/ul&gt; 
            &lt;/div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; aws iam list-entities-for-policy --policy-arn &amp;lt;iam_policy_arn&amp;gt; 
            &lt;span style=" , Arial;"&gt;&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.039">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.6" name="Create a Password Policy enforcing strong passwords" issueId="" issueLink="" platform="" cost="1" risk="32" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Enforcing a strong password policy increases resiliency and reduces the chances of the password being compromised either through brute force attempts, keystroke logging tools or stolen credentials amongst others.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to AWS Console (ensure you have permissions to update IAM).&lt;/li&gt;&lt;li&gt;Go to IAM Service on the AWS Console.&lt;/li&gt;&lt;li&gt;Click on Account Settings.&lt;/li&gt;&lt;li&gt;Set "Minimum password length" to 14 or greater.&lt;/li&gt;&lt;li&gt;Check "Require at least one uppercase letter".&lt;/li&gt;&lt;li&gt;Check "Require at least one lowercase letter".&lt;/li&gt;&lt;li&gt;Check "Require at least one number".&lt;/li&gt;&lt;li&gt;Check "Require at least one non-alphanumeric character"&lt;/li&gt;&lt;li&gt;Check "Enable password expiration" and set the period to at least 90 days.&lt;/li&gt;&lt;li&gt;Check "Prevent password reuse" and set the number to at least 10.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.8" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.8" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="1.9" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.9" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="8.2.6" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="8.3.6" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="8.3.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="8.3.9" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Validate that mechanisms exist to ensure that created passwords are strong enough.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.040">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.9" name="Create AWS Config configuration change alerts" issueId="" issueLink="" platform="" cost="1" risk="40" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
                        to identify suspicious API activity. One such activity that should be monitored is AWS Config
                        changes. AWS config tracks configuration changes within the environment and is a useful change
                        management tool. Therefore alerting on config changes ensures the continued visibility of AWS
                        configuration items.
                        &lt;div&gt;
                        &amp;nbsp;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a metric filter that checks for AWS Config changes:&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        aws logs put-metric-filter&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --log-group-name &amp;lt;group&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --filter-name &amp;lt;name&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --metric- transformations &amp;lt;value&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --filter-pattern '{($.eventSource = config.amazonaws.com) &amp;amp;&amp;amp;
                        (($.eventName=StopConfigurationRecorder)||($.eventName=DeleteDeliveryChannel)||($.even
                        tName=PutDeliveryChannel)||($.eventName=PutConfigurationRecorder))}'&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create an SNS topic for notifications: aws sns create-topic --name &amp;lt;topic_name&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
                        &amp;lt;topic_arn&amp;gt; --protocol email --notification-endpoint &amp;lt;email@example.com&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an alarm based on the above steps:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        aws cloudwatch put-metric-alarm&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --alarm-name &amp;lt;value&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --metric-name &amp;lt;metric_filter_name&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --statistic Sum&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --period 300&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --threshold 1&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --comparison-operator GreaterThanOrEqualToThreshold&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --evaluation-periods 1&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --namespace &amp;lt;CloudTrailMetrics&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --alarm-actions &amp;lt;topic_arn&amp;gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.9" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws
                            logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;quot;filterPattern&amp;quot;: &amp;quot;{($.eventSource = config.amazonaws.com) &amp;amp;&amp;amp;
                            (($.eventName=StopConfigurationRecorder)||($.eventName=DeleteDeliveryChannel)||($.even
                            tName=PutDeliveryChannel)||($.eventName=PutConfigurationRecorder))}&amp;quot;&amp;nbsp;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
                            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.461">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-Monitoring-3" name="Create AWS Organizations change alerts" issueId="" issueLink="" platform="" cost="0" risk="37" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established for AWS Organizations changes made in the master AWS Account.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Monitoring AWS Organizations changes can help you prevent any unwanted, accidental or intentional modifications that may lead to unauthorized access or other security breaches. This monitoring technique helps you to ensure that any unexpected changes performed within your AWS Organizations can be investigated and any unwanted changes can be rolled back.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;Perform the following to setup the metric filter, alarm, SNS topic, and subscription:&lt;/p&gt;&lt;p&gt;1. Create a metric filter based on filter pattern provided which checks for AWS Organizations changes and the &amp;lt;cloudtrail_log_group_name&amp;gt; taken from audit step 1:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws logs put-metric-filter --log-group-name &amp;lt;cloudtrail_log_group_name&amp;gt; --filter-name `&amp;lt;organizations_changes&amp;gt;` --metric-transformations metricName= `&amp;lt;organizations_changes&amp;gt;` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.eventSource = organizations.amazonaws.com) &amp;amp;&amp;amp; (($.eventName = "AcceptHandshake") || ($.eventName = "AttachPolicy") || ($.eventName = "CreateAccount") || ($.eventName = "CreateOrganizationalUnit") || ($.eventName = "CreatePolicy") || ($.eventName = "DeclineHandshake") || ($.eventName = "DeleteOrganization") || ($.eventName = "DeleteOrganizationalUnit") || ($.eventName = "DeletePolicy") || ($.eventName = "DetachPolicy") || ($.eventName = "DisablePolicyType") || ($.eventName = "EnablePolicyType") || ($.eventName = "InviteAccountToOrganization") || ($.eventName = "LeaveOrganization") || ($.eventName = "MoveAccount") || ($.eventName = "RemoveAccountFromOrganization") || ($.eventName = "UpdatePolicy") || ($.eventName = "UpdateOrganizationalUnit")) }'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.&lt;/p&gt;&lt;p&gt;2. Create an SNS topic that the alarm will notify:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws sns create-topic --name &amp;lt;sns_topic_name&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note: you can execute this command once and then re-use the same topic for all monitoring alarms.&lt;/p&gt;&lt;p&gt;3. Create an SNS subscription to the topic created in step 2:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws sns subscribe --topic-arn &amp;lt;sns_topic_arn&amp;gt; --protocol &amp;lt;protocol_for_sns&amp;gt; --notification-endpoint &amp;lt;sns_subscription_endpoints&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.&lt;/p&gt;&lt;p&gt;4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudwatch put-metric-alarm --alarm-name `&amp;lt;organizations_changes&amp;gt;` --metric-name `&amp;lt;organizations_changes&amp;gt;` --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions &amp;lt;sns_topic_arn&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.15" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="4.15" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured:&lt;/p&gt;&lt;p&gt;1. Identify the log group name configured for use with active multi-region CloudTrail:&lt;/p&gt;&lt;p&gt;List all CloudTrails:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudtrail describe-trails&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Identify Multi region Cloudtrails: Trails with "IsMultiRegionTrail" set to true&lt;/p&gt;&lt;p&gt;From value associated with CloudWatchLogsLogGroupArn note &amp;lt;cloudtrail_log_group_name&amp;gt;&lt;/p&gt;&lt;p&gt;Example: for CloudWatchLogsLogGroupArn that looks like arn:aws:logs:&amp;lt;region&amp;gt;:&amp;lt;aws_account_number&amp;gt;:log-group:NewGroup:*, &amp;lt;cloudtrail_log_group_name&amp;gt; would be NewGroup&lt;/p&gt;&lt;p&gt;Ensure Identified Multi region CloudTrail is active&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudtrail get-trail-status --name &amp;lt;Name of a Multi-region CloudTrail&amp;gt; ensure IsLogging is set to TRUE&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure identified Multi-region Cloudtrail captures all Management Events&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudtrail get-event-selectors --trail-name &amp;lt;trailname shown in describe-trails&amp;gt; Ensure there is at least one Event Selector for a Trail with IncludeManagementEvents set to true and ReadWriteType set to All&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. Get a list of all associated metric filters for this &amp;lt;cloudtrail_log_group_name&amp;gt;:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws logs describe-metric-filters --log-group-name "&amp;lt;cloudtrail_log_group_name&amp;gt;"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;3. Ensure the output from the above command contains the following:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;"Filter = {(($.errorCode="*UnauthorizedOperation") || ($.errorCode="AccessDenied*")) &amp;amp;&amp;amp; (($.sourceIPAddress!="delivery.logs.amazonaws.com") &amp;amp;&amp;amp; ($.eventName!="HeadBucket"))}"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;4. Note the &amp;lt;unauthorized_api_calls_metric&amp;gt; value associated with the filterPattern found in step 3.&lt;/p&gt;&lt;p&gt;5. Get a list of CloudWatch alarms and filter on the &amp;lt;unauthorized_api_calls_metric&amp;gt; captured in step 4.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName== `&amp;lt;unauthorized_api_calls_metric&amp;gt;`]'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;6. Note the AlarmActions value - this will provide the SNS topic ARN value.&lt;/p&gt;&lt;p&gt;7. Ensure there is at least one active subscriber to the SNS topic&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws sns list-subscriptions-by-topic --topic-arn &amp;lt;sns_topic_arn&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;at least one subscription should have "SubscriptionArn" with valid aws ARN.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Example of valid "SubscriptionArn": "arn:aws:sns:&amp;lt;region&amp;gt;:&amp;lt;aws_account_number&amp;gt;:&amp;lt;SnsTopicName&amp;gt;:&amp;lt;SubscriptionID&amp;gt;"&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.461">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-4.8" name="Create billing alerts to identify unusual spend" issueId="" issueLink="" platform="" cost="1" risk="40" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>By setting billing alarms you can monitor your AWS spend and be alerted if it exceeds certain thresholds thus protecting you from accruing unnecessary charges. 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Sign in to the AWS Management Console and open the Billing and Cost Management console at https://console.aws.amazon.com/billing/home#/.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;On the navigation pane, choose Preferences.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Select the Receive Billing Alerts check box.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Choose Save preferences.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;If necessary, change the region on the navigation bar to US East (N. Virginia). The billing metric data is stored in this region, even for resources in other regions.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;On the navigation pane, under "Metrics", choose "Billing".&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;In the list of billing metrics, select the check box next to Currency USD, for the metric named EstimatedCharges. Define the alarm as follows:&lt;/li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If you want the alarm to trigger as soon as you go over the free tier, set "When my total AWS charges for the month exceed" to $.01. This means that you'll receive a notification as soon as you incur a charge. Otherwise, set it to the amount you want to trigger the alarm, and you will be notified when you go over that amount.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;Choose the "New list" link next to the "send a notification to" box.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;When prompted, enter your email address or choose your Amazon SNS notification from the drop down.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;Choose "Create Alarm".&amp;nbsp;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;li&gt;In the "Confirm new email addresses" dialog box, confirm the email address or choose "I will do it later". If you don't confirm the email address now, the alarm remains in the Pending confirmation status until you do so, and does not send an alert. To view the status of your alarm, choose "Alarms" in the navigation panel.&lt;/li&gt; 
 &lt;/ol&gt; &lt;br&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="4.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Sign in to the AWS Management Console and open the Billing and Cost Management
                            console at https://console.aws.amazon.com/billing/home#/.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;On the navigation pane, choose Preferences.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the &amp;quot;Receive Billing Alerts&amp;quot; check box is checked.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;If necessary, change the region on the navigation bar to US East (N. Virginia).
                            The billing metric data is stored in this region, even for resources in other regions.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;On the navigation pane, under &amp;quot;Alarms&amp;quot;, check for one called
                            &amp;quot;Billing&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click on the alert if it exists and select the checkbox in the first column.&lt;/li&gt;
                            &lt;li&gt;In the preview pane check that the &amp;quot;EstimatedCharges&amp;quot; threshold
                            is set to the correct value and that the &amp;quot;Actions&amp;quot; is send an alarm to a
                            valid email address.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.462">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.4" name="Create cloudtrail configuration changes alerts" issueId="" issueLink="" platform="" cost="1" risk="40" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
                        to identify suspicious API activity. One such activity that should be monitored is changes to
                        cloudtrail. Since cloudtrail is the actual utility logging API calls it's security is paramount
                        to ensuring that this continues. Therefore alerting on changes to cloudtrail activity can
                        prevent a malicious user switching off the logging in order to carry out untracked activities.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&amp;nbsp;&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                        &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;:&amp;nbsp;aws
                        logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Ensure the output contains the following: &amp;quot;filterPattern&amp;quot;: &amp;quot;{
                        ($.eventName = CreateTrail) || ($.eventName = UpdateTrail) || ($.eventName = DeleteTrail) ||
                        ($.eventName = StartLogging) || ($.eventName = StopLogging) }&amp;quot;&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4: aws
                        cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                        &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                        list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.5" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="4.5" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws
                            logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following:&amp;nbsp;&amp;quot;filterPattern&amp;quot;:
                            &amp;quot;{ ($.eventName = CreateTrail) || ($.eventName = UpdateTrail) || ($.eventName =
                            DeleteTrail) || ($.eventName = StartLogging) || ($.eventName = StopLogging) }&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
                            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.461">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.4-5.5" name="Create Cloudwatch Log Group for tier" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;b&gt;Description&lt;/b&gt;:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  AWS CloudWatch Log groups define groups of log streams that share the same retention, monitoring, and access control settings. Each log stream has to belong to one log group.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Note:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;You can also use any third party log management tools (like Splunk, Loggly, AlertLogic Log Manager, etc.) as long as the recommendation goal is achieved.&lt;/li&gt; 
  &lt;li&gt;The below Audit and Remediation steps need to be modified for your specific log management tool, as they are provided in the benchmark only for Amazon Cloudwatch&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation&lt;/b&gt;: 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   *Note: references to Web tier are also applicable to App tier. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a Cloudwatch log group for the Web tier:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws logs create-log-group --log-group-name &amp;lt;web_tier_log_group&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create log groups" url="https://docs.aws.amazon.com/cli/latest/reference/logs/create-log-group.html"/>
            <reference name="Describe log groups" url="https://docs.aws.amazon.com/cli/latest/reference/logs/describe-log-groups.html"/>
          </references>
          <standards>
            <standard ref="5.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="5.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Search for your Web tier Cloudwatch log group:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws logs describe-log-groups --query "logGroups[?logGroupName =='&amp;lt;web_tier_log_group&amp;gt;']" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.462">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.6" name="Create IAM Policy change alerts" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried to identify suspicious API activity. One such activity that should be monitored is management IAM policy changes. IAM manages authorization and authentication controls with AWS and therefore it is vital that unauthorized changes are detected. Enabling monitoring of these changes ensures that these policies remain intact and as desired. 
&lt;div&gt; 
 &lt;br /&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Create a metric filter that checks for IAM policy changes: aws logs put-metric-filter --log-group-name &amp;lt;group&amp;gt; --filter-name &amp;lt;name&amp;gt; --metric- transformations &amp;lt;value&amp;gt; --filter-pattern '{($.eventName=DeleteGroupPolicy)||($.eventName=DeleteRolePolicy)||($.eventName=Delete UserPolicy)||($.eventName=PutGroupPolicy)||($.eventName=PutRolePolicy)||($.eventName=P utUserPolicy)||($.eventName=CreatePolicy)||($.eventName=DeletePolicy)||($.eventName=Cr eatePolicyVersion)||($.eventName=DeletePolicyVersion)||($.eventName=AttachRolePolicy)| |($.eventName=DetachRolePolicy)||($.eventName=AttachUserPolicy)||($.eventName=DetachUs erPolicy)||($.eventName=AttachGroupPolicy)||($.eventName=DetachGroupPolicy)}'&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Create an SNS topic for notifications: aws sns create-topic --name &amp;lt;topic_name&amp;gt;&lt;/li&gt; 
  &lt;li&gt;Create an SNS subscription to the topic created above:aws sns subscribe --topic-arn &amp;lt;topic_arn&amp;gt; --protocol email --notification-endpoint &amp;lt;email@example.com&amp;gt;&lt;/li&gt; 
  &lt;li&gt;Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name &amp;lt;value&amp;gt; --metric-name &amp;lt;metric_filter_name&amp;gt; --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace &amp;lt;CloudTrailMetrics&amp;gt; --alarm-actions &amp;lt;topic_arn&amp;gt;&lt;/li&gt; 
 &lt;/ol&gt; &lt;br /&gt; 
 &lt;br /&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.4" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="4.4" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws
                            logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following: &amp;quot;filterPattern&amp;quot;: &amp;quot;{($.eventSource
                            = kms.amazonaws.com) &amp;amp;&amp;amp;
                            (($.eventName=DisableKey)||($.eventName=ScheduleKeyDeletion))} }&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
                            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.461">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.3" name="Create Individual Accounts" issueId="" issueLink="" platform="" cost="1" risk="29" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>By creating individual IAM users for people accessing your account, you can give each IAM user a unique set of security credentials. You can also grant different permissions to each IAM user. If necessary, you can change or revoke an IAM user's permissions any time. (If you give out your AWS root credentials, it can be difficult to revoke them, and it is impossible to restrict their permissions.). 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Login to the AWS Management Console as an administrator.&lt;/li&gt; 
  &lt;li&gt;Select IAM.&lt;/li&gt; 
  &lt;li&gt;Select Users.&lt;/li&gt; 
  &lt;li&gt;Click "Create New Users".&lt;/li&gt; 
  &lt;li&gt;Complete the required information.&lt;/li&gt; 
  &lt;li&gt;Uncheck "Create access key for users".&lt;/li&gt; 
  &lt;li&gt;Click "Create".&lt;/li&gt; 
  &lt;li&gt;Select the user.&lt;/li&gt; 
  &lt;li&gt;Click "Manage Password".&lt;/li&gt; 
  &lt;li&gt;Select the required options and click "apply".&lt;/li&gt; 
  &lt;li&gt;Select "Show User Security Credentials".&lt;/li&gt; 
  &lt;li&gt;Securely supply the password to your user.&lt;/li&gt; 
 &lt;/ol&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that each user has got the corresponding account with the corresponding
                            credentials.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.040">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.3" name="Create management console login alerts when MFA is not used" issueId="" issueLink="" platform="" cost="1" risk="40" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
                        to identify suspicious API activity. One such activity that should be monitored is login on the
                        console without MFA. Since logging on at the console should be restricted to only those users
                        with an active MFA this alert will highlight those with password only access. This helps to
                        capture weaker login procedures (password only) as they occur.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Create a metric filter that checks for console login without MFA: aws logs
                        put-metric-filter --log-group-name &amp;lt;cloudwatch-logs-group&amp;gt; --filter-name &amp;lt;name&amp;gt;
                        --metric- transformations &amp;lt;value&amp;gt; --filter-pattern '{
                        $.userIdentity.sessionContext.attributes.mfaAuthenticated != &amp;quot;true&amp;quot; }'&lt;/li&gt;
                        &lt;li&gt;Create an SNS topic for notifications: aws sns create-topic --name &amp;lt;topic_name&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
                        &amp;lt;topic_arn&amp;gt; --protocol email --notification-endpoint &amp;lt;email@example.com&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name
                        &amp;lt;value&amp;gt; --metric-name &amp;lt;metric_filter_name&amp;gt; --statistic Sum --period
                        300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1
                        --namespace &amp;lt;CloudTrailMetrics&amp;gt; --alarm-actions &amp;lt;topic_arn&amp;gt;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.2" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="4.2" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;:&amp;nbsp;
                            aws logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following:&amp;nbsp;&amp;quot;filterPattern&amp;quot;:
                            &amp;quot;{ $.userIdentity.sessionContext.attributes.mfaAuthenticated != &amp;quot;true&amp;quot;
                            }&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:&amp;nbsp;aws
                            cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.461">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.5" name="Create management console login failure alerts" issueId="" issueLink="" platform="" cost="1" risk="40" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
                        to identify suspicious API activity. One such activity that should be monitored is management
                        console login failures. The management console is the AWS account GUI where administration
                        activity is performed and is therefore a primary target for brute force attempts. To identify
                        these attempts alerts for login failures should be enabled as this can highlight suspicious
                        activity.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;br /&gt;&lt;/b&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Create a metric filter that checks for console login failures: aws logs
                        put-metric-filter --log-group-name &amp;lt;group&amp;gt; --filter-name &amp;lt;name&amp;gt;
                        --metric- transformations &amp;lt;value&amp;gt; --filter-pattern '{ ($.eventName = ConsoleLogin)
                        &amp;amp;&amp;amp; ($.errorMessage = &amp;quot;Failed authentication&amp;quot;) }'&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Create an SNS topic for notifications: aws sns create-topic --name &amp;lt;topic_name&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
                        &amp;lt;topic_arn&amp;gt; --protocol email --notification-endpoint &amp;lt;email@example.com&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name
                        &amp;lt;value&amp;gt; --metric-name &amp;lt;metric_filter_name&amp;gt; --statistic Sum --period
                        300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1
                        --namespace &amp;lt;CloudTrailMetrics&amp;gt; --alarm-actions &amp;lt;topic_arn&amp;gt;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.6" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws
                            logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following:&amp;nbsp;&amp;quot;filterPattern&amp;quot;:
                            &amp;quot;{ ($.eventName = ConsoleLogin) &amp;amp;&amp;amp; ($.errorMessage = \&amp;quot;Failed
                            authentication\&amp;quot;) }&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
                            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.461">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-Monitoring-2" name="Create network gateways change alerts" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. Network gateways are required to send/receive traffic to a destination outside of a VPC. It is recommended that a metric filter and alarm be established for changes to network gateways.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Monitoring changes to network gateways will help ensure that all ingress/egress traffic traverses the VPC border via a controlled path.&lt;/p&gt;&lt;p&gt;Perform the following to setup the metric filter, alarm, SNS topic, and subscription:&lt;/p&gt;&lt;p&gt;1. Create a metric filter based on filter pattern provided which checks for network gateways changes and the &amp;lt;cloudtrail_log_group_name&amp;gt; taken from audit step 1.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws logs put-metric-filter --log-group-name &amp;lt;cloudtrail_log_group_name&amp;gt; --filter-name `&amp;lt;network_gw_changes_metric&amp;gt;` --metric-transformations metricName= `&amp;lt;network_gw_changes_metric&amp;gt;` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.eventName = CreateCustomerGateway) || ($.eventName = DeleteCustomerGateway) || ($.eventName = AttachInternetGateway) ||($.eventName = CreateInternetGateway) || ($.eventName = DeleteInternetGateway) || ($.eventName = DetachInternetGateway) }'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.&lt;/p&gt;&lt;p&gt;2. Create an SNS topic that the alarm will notify&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws sns create-topic --name &amp;lt;sns_topic_name&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note: you can execute this command once and then re-use the same topic for all monitoring alarms.&lt;/p&gt;&lt;p&gt;3. Create an SNS subscription to the topic created in step 2&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws sns subscribe --topic-arn &amp;lt;sns_topic_arn&amp;gt; --protocol &amp;lt;protocol_for_sns&amp;gt; --notification-endpoint &amp;lt;sns_subscription_endpoints&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.&lt;/p&gt;&lt;p&gt;4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudwatch put-metric-alarm --alarm-name `&amp;lt;network_gw_changes_alarm&amp;gt;` --metric-name `&amp;lt;network_gw_changes_metric&amp;gt;` --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions &amp;lt;sns_topic_arn&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.12" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="4.12" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured:&lt;/p&gt;&lt;p&gt;1. Identify the log group name configured for use with active multi-region CloudTrail:&lt;/p&gt;&lt;p&gt;List all CloudTrails:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudtrail describe-trails&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Identify Multi region Cloudtrails: Trails with "IsMultiRegionTrail" set to true&lt;/p&gt;&lt;p&gt;From value associated with CloudWatchLogsLogGroupArn note &amp;lt;cloudtrail_log_group_name&amp;gt;&lt;/p&gt;&lt;p&gt;Example: for CloudWatchLogsLogGroupArn that looks like arn:aws:logs:&amp;lt;region&amp;gt;:&amp;lt;aws_account_number&amp;gt;:log-group:NewGroup:*, &amp;lt;cloudtrail_log_group_name&amp;gt; would be NewGroup&lt;/p&gt;&lt;p&gt;Ensure Identified Multi region CloudTrail is active&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudtrail get-trail-status --name &amp;lt;Name of a Multi-region CloudTrail&amp;gt; ensure IsLogging is set to TRUE&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure identified Multi-region Cloudtrail captures all Management Events&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudtrail get-event-selectors --trail-name &amp;lt;trailname shown in describe-trails&amp;gt; Ensure there is at least one Event Selector for a Trail with IncludeManagementEvents set to true and ReadWriteType set to All&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. Get a list of all associated metric filters for this &amp;lt;cloudtrail_log_group_name&amp;gt;:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws logs describe-metric-filters --log-group-name "&amp;lt;cloudtrail_log_group_name&amp;gt;"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;3. Ensure the output from the above command contains the following:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;"Filter = {(($.errorCode="*UnauthorizedOperation") || ($.errorCode="AccessDenied*")) &amp;amp;&amp;amp; (($.sourceIPAddress!="delivery.logs.amazonaws.com") &amp;amp;&amp;amp; ($.eventName!="HeadBucket"))}"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;4. Note the &amp;lt;unauthorized_api_calls_metric&amp;gt; value associated with the filterPattern found in step 3.&lt;/p&gt;&lt;p&gt;5. Get a list of CloudWatch alarms and filter on the &amp;lt;unauthorized_api_calls_metric&amp;gt; captured in step 4.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName== `&amp;lt;unauthorized_api_calls_metric&amp;gt;`]'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;6. Note the AlarmActions value - this will provide the SNS topic ARN value.&lt;/p&gt;&lt;p&gt;7. Ensure there is at least one active subscriber to the SNS topic&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws sns list-subscriptions-by-topic --topic-arn &amp;lt;sns_topic_arn&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;at least one subscription should have "SubscriptionArn" with valid aws ARN.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Example of valid "SubscriptionArn": "arn:aws:sns:&amp;lt;region&amp;gt;:&amp;lt;aws_account_number&amp;gt;:&amp;lt;SnsTopicName&amp;gt;:&amp;lt;SubscriptionID&amp;gt;"&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.460">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.2" name="Create root account usage alerts" issueId="" issueLink="" platform="" cost="1" risk="40" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
                        to identify suspicious API activity. One such activity that should be monitored is usage of the
                        root account. This account should not be used on a day to day basis due to its full unrestricted
                        privilege therefore usage should be by exception. Monitoring this usage should capture any
                        suspicious activity used on the account.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                        &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                        &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws logs
                        describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&lt;/li&gt;
                        &lt;li&gt;Ensure the output contains the following: &amp;quot;filterPattern&amp;quot;: &amp;quot;{
                        $.userIdentity.type = \&amp;quot;Root\&amp;quot; &amp;amp;&amp;amp; $.userIdentity.invokedBy NOT
                        EXISTS &amp;amp;&amp;amp; $.eventType != \&amp;quot;AwsServiceEvent\&amp;quot; } &amp;quot;&lt;/li&gt;
                        &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4: aws
                        cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                        &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                        list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.3" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="4.3" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="7.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws
                            logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following: &amp;quot;filterPattern&amp;quot;: &amp;quot;{
                            $.userIdentity.type = \&amp;quot;Root\&amp;quot; &amp;amp;&amp;amp; $.userIdentity.invokedBy
                            NOT EXISTS &amp;amp;&amp;amp; $.eventType != \&amp;quot;AwsServiceEvent\&amp;quot; } &amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:&amp;nbsp;aws
                            cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.461">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.8" name="Create s3 bucket policy change alerts" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried to identify suspicious API activity. One such activity that should be monitored is S3 bucket policy changes. S3 bucket policies are a resource based policy that provide authorizations on S3 buckets. 
&lt;div&gt; 
 &lt;br /&gt; 
  Making sure that their integrity remains intact is vital in ensuring the data within the S3 bucket remains secure and authorizations intact. Therefore s3 bucket policy changes should be alerted upon 
 &lt;br /&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a metric filter that checks for S3 Bucket policy changes:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws logs put-metric-filter --log-group-name &amp;lt;group&amp;gt; --filter-name &amp;lt;value&amp;gt; --metric- transformations &amp;lt;value&amp;gt; --filter-pattern '{ ($.eventSource = s3.amazonaws.com) &amp;amp;&amp;amp; (($.eventName = PutBucketAcl) || ($.eventName = PutBucketPolicy) || ($.eventName = PutBucketCors) || ($.eventName = PutBucketLifecycle) || ($.eventName = PutBucketReplication) || ($.eventName = DeleteBucketPolicy) || ($.eventName = DeleteBucketCors) || ($.eventName = DeleteBucketLifecycle) || ($.eventName = DeleteBucketReplication)) }' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create an SNS topic for notifications:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws sns create-topic --name &amp;lt;topic_name&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create an SNS subscription to the topic created above&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws sns subscribe --topic-arn &amp;lt;topic_arn&amp;gt; --protocol email --notification-endpoint &amp;lt;email@example.com&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create an alarm based on the above steps:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudwatch put-metric-alarm --alarm-name &amp;lt;value&amp;gt; --metric-name &amp;lt;metric_filter_name&amp;gt; --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace &amp;lt;CloudTrailMetrics&amp;gt; --alarm-actions &amp;lt;topic_arn&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;div&gt; 
  &lt;br /&gt; 
 &lt;/div&gt; 
&lt;/blockquote&gt; 
&lt;div&gt;
  &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.8" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="4.8" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;:&amp;nbsp;
                            aws logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following: &amp;quot;filterPattern&amp;quot;: &amp;quot;{
                            ($.eventSource = s3.amazonaws.com) &amp;amp;&amp;amp; (($.eventName = PutBucketAcl) ||
                            ($.eventName = PutBucketPolicy) || ($.eventName = PutBucketCors) || ($.eventName =
                            PutBucketLifecycle) || ($.eventName = PutBucketReplication) || ($.eventName =
                            DeleteBucketPolicy) || ($.eventName = DeleteBucketCors) || ($.eventName =
                            DeleteBucketLifecycle) || ($.eventName = DeleteBucketReplication)) }&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
                            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.461">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.10" name="Create security group change alerts" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried to identify suspicious API activity. One such activity that should be monitored is security group changes. Security groups are analogous to firewalls and therefore protect inbound and outbound access to &amp;amp; from AWS resources such as ec2 instances and RDS databases (amongst other things. Therefore alerting on changes to security groups helps ensure that the resources protected by them are not exposed.&amp;nbsp; 
&lt;div&gt;
  &amp;nbsp; 
 &lt;br /&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Create a metric filter that checks for security group changes: aws logs put-metric-filter --log-group-name &amp;lt;group&amp;gt; --filter-name &amp;lt;name&amp;gt; --metric- transformations &amp;lt;value&amp;gt; --filter-pattern '{ ($.eventName = AuthorizeSecurityGroupIngress) || ($.eventName = AuthorizeSecurityGroupEgress) || ($.eventName = RevokeSecurityGroupIngress) || ($.eventName = RevokeSecurityGroupEgress) || ($.eventName = CreateSecurityGroup) || ($.eventName = DeleteSecurityGroup)}'&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Create an SNS topic for notifications: aws sns create-topic --name &amp;lt;topic_name&amp;gt;&lt;/li&gt; 
  &lt;li&gt;Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn &amp;lt;topic_arn&amp;gt; --protocol email --notification-endpoint &amp;lt;email@example.com&amp;gt;&lt;/li&gt; 
  &lt;li&gt;Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name &amp;lt;value&amp;gt; --metric-name &amp;lt;metric_filter_name&amp;gt; --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace &amp;lt;CloudTrailMetrics&amp;gt; --alarm-actions &amp;lt;topic_arn&amp;gt;&lt;/li&gt; 
 &lt;/ol&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.10" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws
                            logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following: &amp;quot;filterPattern&amp;quot;: &amp;quot;{
                            ($.eventName = AuthorizeSecurityGroupIngress) || ($.eventName =
                            AuthorizeSecurityGroupEgress) || ($.eventName = RevokeSecurityGroupIngress) || ($.eventName
                            = RevokeSecurityGroupEgress) || ($.eventName = CreateSecurityGroup) || ($.eventName =
                            DeleteSecurityGroup)}&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
                            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.461">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-Monitoring-1" name="Create unauthorized API calls alerts" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established for unauthorized API calls.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Monitoring unauthorized API calls will help reveal application errors and may reduce time to detect malicious activity.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;This alert may be triggered by normal read-only console activities that attempt to opportunistically gather optional information, but gracefully fail if they don't have permissions.&lt;/p&gt;&lt;p&gt;If an excessive number of alerts are being generated then an organization may wish to consider adding read access to the limited IAM user permissions simply to quiet the alerts.&lt;/p&gt;&lt;p&gt;In some cases doing this may allow the users to actually view some areas of the system - any additional access given should be reviewed for alignment with the original limited IAM user intent.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;Perform the following to setup the metric filter, alarm, SNS topic, and subscription:&lt;/p&gt;&lt;p&gt;1. Create a metric filter based on filter pattern provided which checks for unauthorized API calls and the &amp;lt;cloudtrail_log_group_name&amp;gt; taken from audit step 1.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws logs put-metric-filter --log-group-name &amp;lt;cloudtrail_log_group_name&amp;gt; --filter-name `&amp;lt;unauthorized_api_calls_metric&amp;gt;` --metric-transformations metricName= `&amp;lt;unauthorized_api_calls_metric&amp;gt;` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.errorCode = "*UnauthorizedOperation") || ($.errorCode = "AccessDenied*") || ($.sourceIPAddress!="delivery.logs.amazonaws.com") || ($.eventName!="HeadBucket") }'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.&lt;/p&gt;&lt;p&gt;2. Create an SNS topic that the alarm will notify&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws sns create-topic --name &amp;lt;sns_topic_name&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note: you can execute this command once and then re-use the same topic for all monitoring alarms.&lt;/p&gt;&lt;p&gt;3. Create an SNS subscription to the topic created in step 2&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws sns subscribe --topic-arn &amp;lt;sns_topic_arn&amp;gt; --protocol &amp;lt;protocol_for_sns&amp;gt; --notification-endpoint &amp;lt;sns_subscription_endpoints&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.&lt;/p&gt;&lt;p&gt;4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudwatch put-metric-alarm --alarm-name `&amp;lt;unauthorized_api_calls_alarm&amp;gt;` --metric-name `&amp;lt;unauthorized_api_calls_metric&amp;gt;` --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions &amp;lt;sns_topic_arn&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.1" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="4.1" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured:&lt;/p&gt;&lt;p&gt;1. Identify the log group name configured for use with active multi-region CloudTrail:&lt;/p&gt;&lt;p&gt;List all CloudTrails:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudtrail describe-trails&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Identify Multi region Cloudtrails: Trails with "IsMultiRegionTrail" set to true&lt;/p&gt;&lt;p&gt;From value associated with CloudWatchLogsLogGroupArn note &amp;lt;cloudtrail_log_group_name&amp;gt;&lt;/p&gt;&lt;p&gt;Example: for CloudWatchLogsLogGroupArn that looks like arn:aws:logs:&amp;lt;region&amp;gt;:&amp;lt;aws_account_number&amp;gt;:log-group:NewGroup:*, &amp;lt;cloudtrail_log_group_name&amp;gt; would be NewGroup&lt;/p&gt;&lt;p&gt;Ensure Identified Multi region CloudTrail is active&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudtrail get-trail-status --name &amp;lt;Name of a Multi-region CloudTrail&amp;gt; ensure IsLogging is set to TRUE&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure identified Multi-region Cloudtrail captures all Management Events&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudtrail get-event-selectors --trail-name &amp;lt;trailname shown in describe-trails&amp;gt; Ensure there is at least one Event Selector for a Trail with IncludeManagementEvents set to true and ReadWriteType set to All&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. Get a list of all associated metric filters for this &amp;lt;cloudtrail_log_group_name&amp;gt;:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws logs describe-metric-filters --log-group-name "&amp;lt;cloudtrail_log_group_name&amp;gt;"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;3. Ensure the output from the above command contains the following:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;"Filter = {(($.errorCode="*UnauthorizedOperation") || ($.errorCode="AccessDenied*")) &amp;amp;&amp;amp; (($.sourceIPAddress!="delivery.logs.amazonaws.com") &amp;amp;&amp;amp; ($.eventName!="HeadBucket"))}"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;4. Note the &amp;lt;unauthorized_api_calls_metric&amp;gt; value associated with the filterPattern found in step 3.&lt;/p&gt;&lt;p&gt;5. Get a list of CloudWatch alarms and filter on the &amp;lt;unauthorized_api_calls_metric&amp;gt; captured in step 4.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName== `&amp;lt;unauthorized_api_calls_metric&amp;gt;`]'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;6. Note the AlarmActions value - this will provide the SNS topic ARN value.&lt;/p&gt;&lt;p&gt;7. Ensure there is at least one active subscriber to the SNS topic&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws sns list-subscriptions-by-topic --topic-arn &amp;lt;sns_topic_arn&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;at least one subscription should have "SubscriptionArn" with valid aws ARN.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Example of valid "SubscriptionArn": "arn:aws:sns:&amp;lt;region&amp;gt;:&amp;lt;aws_account_number&amp;gt;:&amp;lt;SnsTopicName&amp;gt;:&amp;lt;SubscriptionID&amp;gt;"&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.459">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.13" name="Create VPC gateway change alerts" issueId="" issueLink="" platform="" cost="1" risk="37" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
                        to identify suspicious API activity. One such activity that should be monitored is VPC gateway
                        changes. VPC gateways are used as a means of sending traffic outside of a VPC (ie to the
                        internet) and are vital in ensuring traffic flows to the correct destination. Therefore alerting
                        on changes to VPC gateways ensuring traffic continues to flow as expected via the correct
                        gateway.&amp;nbsp;
                        &lt;div&gt;
                        &amp;nbsp;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Create a metric filter that checks for VPC gateway changes: aws logs put-metric-filter
                        --log-group-name &amp;lt;group&amp;gt; --filter-name &amp;lt;name&amp;gt; --metric-
                        transformations &amp;lt;value&amp;gt; --filter-pattern '{ ($.eventName = CreateCustomerGateway)
                        || ($.eventName = DeleteCustomerGateway) || ($.eventName = AttachInternetGateway) ||
                        ($.eventName = CreateInternetGateway) || ($.eventName = DeleteInternetGateway) || ($.eventName =
                        DetachInternetGateway) }'&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Create an SNS topic for notifications: aws sns create-topic --name &amp;lt;topic_name&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
                        &amp;lt;topic_arn&amp;gt; --protocol email --notification-endpoint &amp;lt;email@example.com&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name
                        &amp;lt;value&amp;gt; --metric-name &amp;lt;metric_filter_name&amp;gt; --statistic Sum --period
                        300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1
                        --namespace &amp;lt;CloudTrailMetrics&amp;gt; --alarm-actions &amp;lt;topic_arn&amp;gt;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.14" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="4.14" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws
                            logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following: &amp;quot;filterPattern&amp;quot;: &amp;quot;{
                            ($.eventName = CreateCustomerGateway) || ($.eventName = DeleteCustomerGateway) ||
                            ($.eventName = AttachInternetGateway) || ($.eventName = CreateInternetGateway) ||
                            ($.eventName = DeleteInternetGateway) || ($.eventName = DetachInternetGateway) }&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
                            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.461">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.11" name="Create VPC NACL change alerts" issueId="" issueLink="" platform="" cost="1" risk="37" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
                        to identify suspicious API activity. One such activity that should be monitored is VPC NACL
                        changes. Network Access Control Lists (NACLS) control inbound and outbound access to &amp;amp;
                        from AWS subnets and work like packet filters to protect the network. Therefore alerting on
                        changes to NACLS helps ensure that the subnets protected by them are not exposed.&amp;nbsp;
                        &lt;div&gt;
                        &amp;nbsp;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Create a metric filter that checks for NACL changes: aws logs put-metric-filter
                        --log-group-name &amp;lt;group&amp;gt; --filter-name &amp;lt;name&amp;gt; --metric-
                        transformations &amp;lt;value&amp;gt; --filter-pattern '{ ($.eventName = CreateNetworkAcl) ||
                        ($.eventName = CreateNetworkAclEntry) || ($.eventName = DeleteNetworkAcl) || ($.eventName =
                        DeleteNetworkAclEntry) || ($.eventName = ReplaceNetworkAclEntry) || ($.eventName =
                        ReplaceNetworkAclAssociation) }'&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Create an SNS topic for notifications: aws sns create-topic --name &amp;lt;topic_name&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
                        &amp;lt;topic_arn&amp;gt; --protocol email --notification-endpoint &amp;lt;email@example.com&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name
                        &amp;lt;value&amp;gt; --metric-name &amp;lt;metric_filter_name&amp;gt; --statistic Sum --period
                        300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1
                        --namespace &amp;lt;CloudTrailMetrics&amp;gt; --alarm-actions &amp;lt;topic_arn&amp;gt;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.11" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws
                            logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following:&amp;nbsp;&amp;quot;filterPattern&amp;quot;:
                            &amp;quot;{ ($.eventName = CreateNetworkAcl) || ($.eventName = CreateNetworkAclEntry) ||
                            ($.eventName = DeleteNetworkAcl) || ($.eventName = DeleteNetworkAclEntry) || ($.eventName =
                            ReplaceNetworkAclEntry) || ($.eventName = ReplaceNetworkAclAssociation) }&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
                            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.461">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.12" name="Create VPC route table change alerts" issueId="" issueLink="" platform="" cost="1" risk="37" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
                        to identify suspicious API activity. One such activity that should be monitored is VPC route
                        table changes. VPC route tables provide a means of routing network traffic between subnets and
                        via gateways and ensures traffic flows via the correct path. Therefore alerting on changes to
                        route tables ensuring traffic continues to flow as expected.&amp;nbsp;
                        &lt;div&gt;
                        &amp;nbsp;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;br /&gt;&lt;/b&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Create a metric filter that checks for VPC route table changes: aws logs
                        put-metric-filter --log-group-name &amp;lt;group&amp;gt; --filter-name &amp;lt;name&amp;gt;
                        --metric- transformations &amp;lt;value&amp;gt; --filter-pattern '{ ($.eventName = CreateRoute)
                        || ($.eventName = CreateRouteTable) || ($.eventName = ReplaceRoute) || ($.eventName =
                        ReplaceRouteTableAssociation) || ($.eventName = DeleteRouteTable) || ($.eventName = DeleteRoute)
                        || ($.eventName = DisassociateRouteTable) }'&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Create an SNS topic for notifications: aws sns create-topic --name &amp;lt;topic_name&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
                        &amp;lt;topic_arn&amp;gt; --protocol email --notification-endpoint &amp;lt;email@example.com&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name
                        &amp;lt;value&amp;gt; --metric-name &amp;lt;metric_filter_name&amp;gt; --statistic Sum --period
                        300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1
                        --namespace &amp;lt;CloudTrailMetrics&amp;gt; --alarm-actions &amp;lt;topic_arn&amp;gt;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.13" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="4.13" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws
                            logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following:&amp;nbsp;&amp;quot;filterPattern&amp;quot;:
                            &amp;quot;{ ($.eventName = CreateRoute) || ($.eventName = CreateRouteTable) || ($.eventName
                            = ReplaceRoute) || ($.eventName = ReplaceRouteTableAssociation) || ($.eventName =
                            DeleteRouteTable) || ($.eventName = DeleteRoute) || ($.eventName = DisassociateRouteTable) }&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:&amp;nbsp;aws
                            cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.461">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.6-5.7" name="Define a retention period for Cloudwatch log group in tier" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;b&gt;Description&lt;/b&gt;:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  Retention period should be used to specify how long log events are kept in CloudWatch Logs. Expired log events get deleted automatically. Just like metric filters, retention settings are also assigned to log groups, and the retention assigned to a log group is applied to their log streams.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Note:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;You can also use any third party log management tools (like Splunk, Loggly, AlertLogic Log Manager, etc.) as long as the recommendation goal is achieved.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;The below Audit and Remediation steps need to be modified for your specific log management tool, as they are provided in the benchmark only for Amazon Cloudwatch&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;b&gt;Remediation&lt;/b&gt;:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   *Note: references to Web tier are also applicable to App tier. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Put a retention policy for your Web tier Cloudwatch log group:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws logs put-retention-policy --log-group-name &amp;lt;web_tier_log_group&amp;gt; --retention-indays &amp;lt;log_retention_period&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;b&gt;Impact&lt;/b&gt;:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  If the retention period is not configured then logs will be retained indefinitely with increasing cost. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Describe log groups" url="https://docs.aws.amazon.com/cli/latest/reference/logs/describe-log-groups.html"/>
            <reference name="Put retention policy" url="https://docs.aws.amazon.com/cli/latest/reference/logs/put-retention-policy.html"/>
          </references>
          <standards>
            <standard ref="5.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="5.7" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.7" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Using the Amazon unified command line interface:&amp;nbsp; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Search for your Web tier Cloudwatch log group, and check for the presence of "retentionInDays" element:&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws logs describe-log-groups --query "logGroups[?logGroupName == 
   &lt;/div&gt; 
   &lt;div&gt;
     '&amp;lt;web_tier_log_group&amp;gt;']" 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.462">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-IAM2" name="Disable credentials unused after 45 days" issueId="" issueLink="" platform="" cost="0" risk="32" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;AWS IAM users can access AWS resources using different types of credentials, such as passwords or access keys. It is recommended that all credentials that have been unused in 45 or greater days be deactivated or removed.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Disabling or removing unnecessary credentials will reduce the window of opportunity for credentials associated with a compromised or abandoned account to be used.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Console:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Perform the following to manage Unused Password (IAM user console access)&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to the AWS Management Console:&lt;/li&gt;&lt;li&gt;Click Services&lt;/li&gt;&lt;li&gt;Click IAM&lt;/li&gt;&lt;li&gt;Click on Users&lt;/li&gt;&lt;li&gt;Click on Security Credentials&lt;/li&gt;&lt;li&gt;Select user whose Console last sign-in is greater than 45 days&lt;/li&gt;&lt;li&gt;Click Security credentials&lt;/li&gt;&lt;li&gt;In section Sign-in credentials, Console password click Manage&lt;/li&gt;&lt;li&gt;Under Console Access select Disable 10.Click Apply&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Perform the following to deactivate Access Keys:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to the AWS Management Console:&lt;/li&gt;&lt;li&gt;Click Services&lt;/li&gt;&lt;li&gt;Click IAM&lt;/li&gt;&lt;li&gt;Click on Users&lt;/li&gt;&lt;li&gt;Click on Security Credentials&lt;/li&gt;&lt;li&gt;Select any access keys that are over 45 days old and that have been used and&lt;ol&gt;&lt;li&gt;Click on Make Inactive&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Select any access keys that are over 45 days old and that have not been used and&lt;ol&gt;&lt;li&gt;Click the X to Delete&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.12" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.12" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="8.2.6" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform the following to determine if unused credentials exist:&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Console:&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to the AWS Management Console&lt;/li&gt;&lt;li&gt;Click Services&lt;/li&gt;&lt;li&gt;Click IAM&lt;/li&gt;&lt;li&gt;Click on Users&lt;/li&gt;&lt;li&gt;Click the Settings (gear) icon.&lt;/li&gt;&lt;li&gt;Select Console last sign-in, Access key last used, and Access Key Id&lt;/li&gt;&lt;li&gt;Click on Close&lt;/li&gt;&lt;li&gt;Check and ensure that Console last sign-in is less than 45 days ago.&lt;ol&gt;&lt;li&gt;Note - Never means the user has never logged in.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Check and ensure that Access key age is less than 45 days and that Access key last used does not say None&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;If the user hasn't signed into the Console in the last 45 days or Access keys are over 45 days old refer to the remediation.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Command Line:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Download Credential Report:&lt;/p&gt;&lt;p&gt;1. Run the following commands:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws iam generate-credential-report&amp;nbsp;&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;aws iam get-credential-report --query 'Content' --output text | base64 -d | cut -d, -f1,4,5,6,9,10,11,14,15,16&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure unused credentials do not exist:&lt;/p&gt;&lt;p&gt;2. For each user having password_enabled set to TRUE , ensure password_last_used_date is less than 45 days ago.&lt;/p&gt;&lt;p&gt;When password_enabled is set to TRUE and password_last_used is set to No_Information , ensure password_last_changed is less than 45 days ago.&lt;/p&gt;&lt;p&gt;3. For each user having an access_key_1_active or access_key_2_active to TRUE , ensure the corresponding access_key_n_last_used_date is less than 45 days ago.&lt;/p&gt;&lt;p&gt;When a user having an access_key_x_active (where x is 1 or 2) to TRUE and corresponding access_key_x_last_used_date is set to N/A', ensure access_key_x_last_rotated` is less than 45 days ago.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.039">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-1.21" name="Do not setup access keys during initial user setup for all IAM users that have a console password" issueId="" issueLink="" platform="" cost="1" risk="46" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>AWS console defaults the checkbox for creating access keys to enabled. This results in many access keys being generated unnecessarily. In addition to unnecessary credentials, it also generates unnecessary management work in auditing and rotating these keys. 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;b&gt;Remediation: &lt;/b&gt; 
&lt;br /&gt;Perform the following to delete access keys that do not pass the audit. 
&lt;br /&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;ol&gt; 
 &lt;li&gt;Login to the AWS Management Console.Click Services.&lt;/li&gt; 
 &lt;li&gt;Click IAM&lt;/li&gt; 
 &lt;li&gt;Click on Users.Click on Security Credentials.&lt;/li&gt; 
 &lt;li&gt;As an Administrator.&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Click on Delete for keys that were created at the same time as the user profile but have not been used.&lt;br /&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; As an IAM User&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Click on Delete for keys that were created at the same time as the user profile but have not been used.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;Via CLI:&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;aws iam delete-access-key&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/ol&gt; 
&lt;span style="font-weight: bold;"&gt;&lt;/span&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.11" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.11" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Perform the following to determine if access keys are rotated as prescribed: 
            &lt;br /&gt; 
            &lt;ol&gt; 
             &lt;li&gt;Login to the AWS Management Console&lt;/li&gt; 
             &lt;li&gt;Click Services&lt;/li&gt; 
             &lt;li&gt;Click IAM&lt;/li&gt; 
             &lt;li&gt;Click on a User&lt;/li&gt; 
             &lt;li&gt;Compare the user creation date to the key 1 creation date.&lt;/li&gt; 
             &lt;li&gt;For any that match, the key was created during initial user setup.&lt;/li&gt; 
            &lt;/ol&gt;Keys that were created at the same time as the user profile and do not have a last used date should be deleted. 
            &lt;br /&gt; 
            &lt;br /&gt;Via the CLI: 
            &lt;br /&gt; 
            &lt;ul&gt; 
             &lt;li&gt;Run the following command (OSX/Linux/UNIX) to generate a list of all IAM users along with their access keys utilization:&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;blockquote&gt; 
             &lt;blockquote&gt;
               aws iam generate-credential-report 
             &lt;/blockquote&gt; 
            &lt;/blockquote&gt; 
            &lt;br /&gt; 
            &lt;blockquote&gt; 
             &lt;blockquote&gt;
               aws iam get-credential-report --query 'Content' --output text | base64 -d | cut -d, -f1,4,9,11,14,16 
             &lt;/blockquote&gt; 
            &lt;/blockquote&gt; 
            &lt;ul&gt; 
             &lt;li&gt;The output of this command will produce a table similar to the following:&amp;nbsp;&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;blockquote&gt; 
             &lt;blockquote&gt;
               user,password_enabled,access_key_1_active,access_key_1_last_used_date,access_ 
             &lt;/blockquote&gt; 
             &lt;blockquote&gt;
               key_2_active,access_key_2_last_used_date 
             &lt;/blockquote&gt; 
             &lt;blockquote&gt;
               elise,false,true,2015-04-16T15:14:00+00:00,false,N/A 
             &lt;/blockquote&gt; 
             &lt;blockquote&gt;
               brandon,true,true,N/A,false,N/A 
             &lt;/blockquote&gt; 
             &lt;blockquote&gt;
               rakesh,false,false,N/A,false,N/A 
             &lt;/blockquote&gt; 
             &lt;blockquote&gt;
               helene,false,true,2015-11-18T17:47:00+00:00,false,N/A 
             &lt;/blockquote&gt; 
             &lt;blockquote&gt;
               paras,true,true,2016-08-28T12:04:00+00:00,true,2016-03-04T10:11:00+00:00 
             &lt;/blockquote&gt; 
             &lt;blockquote&gt;
               anitha,true,true,2016-06-08T11:43:00+00:00,true,N/A 
             &lt;/blockquote&gt; 
            &lt;/blockquote&gt; 
            &lt;ul&gt; 
             &lt;li&gt;For any user having access_key_last_used_date set to N/A , ensure that access key is deleted&lt;/li&gt; 
            &lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.039">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.9" name="Enable AWS Config across all regions" issueId="" issueLink="" platform="" cost="1" risk="37" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>AWS Config tracks configuration changes to resources as they occur and is therefore a good
                        source of identifying whether unintentional or malicious changes have occurred to resources with
                        the AWS account.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Sign in to the AWS Management Console (with Config update permissions).&lt;/li&gt;
                        &lt;li&gt;Select Config from the services menu.&lt;/li&gt;
                        &lt;li&gt;Define which resources you want to record in the selected region.&lt;/li&gt;
                        &lt;li&gt;Choose to include global resources (IAM resources).&lt;/li&gt;
                        &lt;li&gt;Specify an S3 bucket.&lt;/li&gt;
                        &lt;li&gt;Create an SNS Topic&amp;nbsp;&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;br /&gt;&amp;nbsp;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10.3.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="12.10.5" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.5" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Sign in to the AWS Management Console (with Config update permissions)&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select Config from the services menu&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;If presented with Setup AWS Config follow the procedure highlighted in the
                            remediation section&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;On the Resource inventory page, Click on &amp;quot;edit&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure 1 or both check-boxes under &amp;quot;All Resources&amp;quot; is checked.&amp;nbsp;&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Include global resources related to IAM resources&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;which needs to be enabled in 1 region only.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;li&gt;Ensure the correct S3 bucket has been defined.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the correct SNS topic has been defined.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Repeat steps 2 to 7 for each region (you'll need to change region in the top right
                            corner of the AWS management console to do this).&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.865">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.1" name="Enable Cloudtrail in all regions" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Cloudtrail records events of all API calls made within a AWS account. This enables security
                        analysis, resource change tracking, and compliance auditing. Cloudtrail should be enabled in all
                        regions, even if they are not being used, to identify unintended or accidental changes.
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation&lt;/b&gt;:
                        &lt;br /&gt;Create a global trail using a previously created S3 bucket:
                        &lt;br /&gt;
                        &lt;blockquote&gt;
                        aws cloudtrail create-trail --name &amp;lt;trail_name&amp;gt; --s3-bucket-name &amp;lt;s3-bucket-name&amp;gt;
                        --is-multi-region-trail
                        &lt;/blockquote&gt;
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;br /&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.5" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.6" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.1" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="3.1" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Run: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Ensure &amp;quot;IsMultiRegionTrail&amp;quot; = TRUE&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.864">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.2" name="Enable CloudTrail log file validation" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Enabling log file validation will provide additional integrity checking of CloudTrail as it
                        creates a digest for each log file it writes to S3. These digests can then be used to determine
                        if a log has been modified since being written
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;br /&gt;&lt;/b&gt;
                        &lt;blockquote&gt;
                        aws cloudtrail update-trail --name &amp;lt;trail_name&amp;gt; --enable-log-file-validation
                        &lt;/blockquote&gt;
                        &lt;br /&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10.3.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.3.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.2" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;blockquote&gt;
                            aws cloudtrail describe-trails&amp;nbsp;
                            &lt;/blockquote&gt;Ensure LogFileValidationEnabled = true (for each trail)
                            &lt;ol&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.864">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-IAM6" name="Enable IAM Access Analyzer for all regions" issueId="" issueLink="" platform="" cost="0" risk="32" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable IAM Access analyzer for IAM policies about all resources in each region.&lt;/p&gt;&lt;p&gt;IAM Access Analyzer is a technology introduced at AWS reinvent 2019. After the Analyzer is enabled in IAM, scan results are displayed on the console showing the accessible resources. Scans show resources that other accounts and federated users can access, such as KMS keys and IAM roles. So the results allow you to determine if an unintended user is allowed, making it easier for administrators to monitor least privileges access. Access Analyzer analyzes only policies that are applied to resources in the same AWS Region.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;AWS IAM Access Analyzer helps you identify the resources in your organization and accounts, such as Amazon S3 buckets or IAM roles, that are shared with an external entity. This lets you identify unintended access to your resources and data. Access Analyzer identifies resources that are shared with external principals by using logic-based reasoning to analyze the resource-based policies in your AWS environment. IAM Access Analyzer continuously monitors all policies for S3 bucket, IAM roles, KMS(Key Management Service) keys, AWS Lambda functions, and Amazon SQS(Simple Queue Service) queues.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Console:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Perform the following to enable IAM Access analyzer for IAM policies:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Open the IAM console at https://console.aws.amazon.com/iam/.&lt;/li&gt;&lt;li&gt;Choose Access analyzer.&lt;/li&gt;&lt;li&gt;Choose Create analyzer.&lt;/li&gt;&lt;li&gt;On the Create analyzer page, confirm that the Region displayed is the Region where you want to enable Access Analyzer.&lt;/li&gt;&lt;li&gt;Enter a name for the analyzer. Optional as it will generate a name for you automatically.&lt;/li&gt;&lt;li&gt;Add any tags that you want to apply to the analyzer. Optional.&lt;/li&gt;&lt;li&gt;Choose Create Analyzer.&lt;/li&gt;&lt;li&gt;Repeat these step for each active region&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;From Command Line:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws accessanalyzer create-analyzer --analyzer-name &amp;lt;NAME&amp;gt; --type &amp;lt;ACCOUNT|ORGANIZATION&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Repeat this command above for each active region. Note: The IAM Access Analyzer is successfully configured only when the account you use has the necessary permissions.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.20" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.20" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Console:&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Open the IAM console at https://console.aws.amazon.com/iam/&lt;/li&gt;&lt;li&gt;Choose Access analyzer&lt;/li&gt;&lt;li&gt;Click 'Analyzers'&lt;/li&gt;&lt;li&gt;Ensure that at least one analyzer is present&lt;/li&gt;&lt;li&gt;Ensure that the STATUS is set to Active&lt;/li&gt;&lt;li&gt;Repeat these step for each active region&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;From Command Line:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1. Run the following command:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws accessanalyzer list-analyzers | grep status&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. Ensure that at least one Analyzer the status is set to ACTIVE&lt;/p&gt;&lt;p&gt;3. Repeat the steps above for each active region.&lt;/p&gt;&lt;p&gt;If an Access analyzer is not listed for each region or the status is not set to active refer to the remediation procedure below.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.039">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.4" name="Enable MFA for IAM console users" issueId="" issueLink="" platform="" cost="1" risk="32" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>Using a multi-factor authentication (MFA) device enhances the security of the login process. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for all console login accounts is to use MFA to increase the level of security of the login process. 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
   &lt;b&gt;Remediation:&lt;/b&gt; 
   &lt;br&gt; 
   &lt;ol&gt; 
    &lt;li&gt;Login to the AWS Management Console as an administrator.&lt;/li&gt; 
    &lt;li&gt;Select IAM.&lt;/li&gt; 
    &lt;li&gt;Select Users.&lt;/li&gt; 
    &lt;li&gt;For each user:&lt;/li&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Select the user.&lt;/li&gt; 
     &lt;li&gt;Under "Sign-In Credentials" if "Password" is set to "Yes".&lt;/li&gt; 
     &lt;li&gt;Select "Manage MFA Device".&lt;/li&gt; 
     &lt;li&gt;Choose the type of MFA.&lt;/li&gt; 
     &lt;li&gt;Either scan the code or enter your device secret key.&lt;/li&gt; 
     &lt;li&gt;Enter the Authentication code in "Authentication Code 1" box.&lt;/li&gt; 
     &lt;li&gt;Wait for the code to change and enter the next code in "Authentication Code 2" box.&lt;/li&gt; 
     &lt;li&gt;Click Activate MFA.&lt;/li&gt; 
    &lt;/ul&gt; 
   &lt;/ol&gt;
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.10" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.10" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="8.4.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Generate a credential report with the command: aws iam generate-credential-report&lt;/li&gt;
                            &lt;li&gt;The following command displays a list of all IAM users along with their password
                            and MFA status: aws iam get-credential-report --output text | base64 -D | cut - d, -f1,4,8&lt;/li&gt;
                            &lt;li&gt;For any column having password_enabled set to true ensure mfa_active is also set
                            to true.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.040">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.2" name="Enable MFA for root accounts" issueId="" issueLink="" platform="" cost="1" risk="29" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>Root is highly privileged and therefore using a multi-factor authentication (MFA) device enhances the security of the login process. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for the root account is to use a hardware based device as it has a smaller attack surface and cannot be duplicated. 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Login to the AWS Management Console as root.&lt;/li&gt; 
  &lt;li&gt;Select "Dashboard" and under "Security Status" choose "Activate MFA" on your root account.&lt;/li&gt; 
  &lt;li&gt;Select Activate MFA".&lt;/li&gt; 
  &lt;li&gt;In the wizard, choose "A hardware MFA" device and then select Next Step.&lt;/li&gt; 
  &lt;li&gt;In the Serial Number box, enter the serial number that is found on the back of the MFA device.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;In the Authentication Code 1 box, enter the six-digit number displayed by the MFA device.&lt;/li&gt; 
  &lt;li&gt;Wait until the device refreshes the code, and then enter the next six-digit number into the Authentication Code 2 box.&lt;/li&gt; 
  &lt;li&gt;Select "Next Step".&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt;The MFA device is now associated with the AWS account.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
 &lt;br&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.5" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.5" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="1.6" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="8.4.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Run: aws iam get-account-summary&lt;/li&gt;
                            &lt;li&gt;Ensure the AccountMFAEnabled property is 1.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.040">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.6" name="Enable S3 Bucket logging" issueId="" issueLink="" platform="" cost="1" risk="37" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>S3 Bucket Access Logging generates log files that contain access records for each request made
                        to an S3 bucket. By enabling this it is possible to capture events relating to the objects
                        within that bucket thus helping to capture potential security issues or identifying threats. It
                        is recommended to enable S3 bucket logging on any S3 bucket that contains sensitive data and
                        stored the logs in a separate bucket for security analysis.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;br /&gt;&lt;/b&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Sign in to the AWS Management Console (with S3 update access).&lt;/li&gt;
                        &lt;li&gt;Select S3 from the services menu.&lt;/li&gt;
                        &lt;li&gt;Under All Buckets click on the S3 bucket you wish to enable logging.&lt;/li&gt;
                        &lt;li&gt;Click on Properties in the top right of the console.&lt;/li&gt;
                        &lt;li&gt;Under Bucket:&amp;lt;bucket_name&amp;gt; click on Logging.&lt;/li&gt;
                        &lt;li&gt;Click on the &amp;quot;Enabled&amp;quot; checkbox.&lt;/li&gt;
                        &lt;li&gt;Select a &amp;quot;Target Bucket&amp;quot; to store the logs.&lt;/li&gt;
                        &lt;li&gt;Select a &amp;quot;Target Prefix&amp;quot; for the logs.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;Save&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.6" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="3.6" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Sign in to the AWS Management Console (with S3 update access).&lt;/li&gt;
                            &lt;li&gt;Select S3 from the services menu.&lt;/li&gt;
                            &lt;li&gt;Under All Buckets click on the S3 bucket you wish to enable logging.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click on Properties in the top right of the console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Under Bucket:&amp;lt;bucket_name&amp;gt; click on Logging.&lt;/li&gt;
                            &lt;li&gt;Ensure &amp;quot;Enabled&amp;quot; is checked.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.865">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.7" name="Enable VPC flow logs" issueId="" issueLink="" platform="" cost="1" risk="37" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>VPC Flow logs enable the capture of IP traffic that traverses the network interfaces within a
                        VPC. These logs are captured and sent to cloudtrail logs enabling you to detect security
                        incidents that may be occurring across the network.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Sign into the management console.&lt;/li&gt;
                        &lt;li&gt;Select VPC from the services menu.&lt;/li&gt;
                        &lt;li&gt;In the left pane click &amp;quot;Your VPCs&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Select a VPC.&lt;/li&gt;
                        &lt;li&gt;Select the Flow Logs tab from the preview panel.&lt;/li&gt;
                        &lt;li&gt;Select &amp;quot;Create Flow Log&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Choose a role (note this must be pre-created. Follow the link provided in the text
                        underneath &amp;quot;Role&amp;quot; for help).&lt;/li&gt;
                        &lt;li&gt;Select a &amp;quot;Destination Log Group&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;Create flow Log&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.9" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Sign into the management console.&lt;/li&gt;
                            &lt;li&gt;Select VPC from the services menu.&lt;/li&gt;
                            &lt;li&gt;In the left pane click &amp;quot;Your VPCs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select a VPC.&lt;/li&gt;
                            &lt;li&gt;Select the Flow Logs tab from the preview panel.&lt;/li&gt;
                            &lt;li&gt;Ensure a Log Flow exists that has Active in the Status column.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.865">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.5" name="Encrypt CloudTrail logs using KMS" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>By default, the log files delivered by CloudTrail to your bucket are encrypted by Amazon
                        server-side encryption with Amazon S3-managed encryption keys (SSE-S3). To provide a security
                        layer that is directly manageable, you can instead use server-side encryption with AWS
                        KMS-managed
                        keys (SSE-KMS) for your CloudTrail log files. This provides several advantages:
                        &lt;br /&gt;
                        &lt;ul&gt;
                        &lt;li&gt;You can create and manage the CMK encryption keys yourself.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;You can use a single CMK to encrypt and decrypt log files for multiple accounts across
                        all regions.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;You have control over who can use your key for encrypting and decrypting CloudTrail
                        log files.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;You can assign permissions for the key to the users in your organization according to
                        your requirements.&lt;/li&gt;
                        &lt;li&gt;You have enhanced security. With this feature, in order to read log files, you now
                        need to meet two conditions:&amp;nbsp;&lt;/li&gt;
                        &lt;ol&gt;
                        &lt;li&gt;you must have S3 read permission on the bucket, and&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;you must be granted decrypt permission by the CMK policy.&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ul&gt;Because S3 automatically decrypts the log files for requests from users authorized to
                        use the CMK, SSE-KMS encryption for CloudTrail log files is backward compatible with existing
                        applications that read CloudTrail log data.&amp;nbsp;
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;&amp;nbsp;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Sign in to the AWS Management Console (with cloudtrail update permissions).&lt;/li&gt;
                        &lt;li&gt;Select CloudTrail from the services menu.&lt;/li&gt;
                        &lt;li&gt;Select &amp;quot;Trails&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on a Trail.&lt;/li&gt;
                        &lt;li&gt;Under the S3 section click on the edit button.&lt;/li&gt;
                        &lt;li&gt;Click Advanced.&lt;/li&gt;
                        &lt;li&gt;Set &amp;quot;Encrypt Log Files&amp;quot; to &amp;quot;Yes&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Set &amp;quot;Create a new KMS key&amp;quot; to &amp;quot;Yes&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;In &amp;quot;KMS key&amp;quot; type a name for your key.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;Save&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt; 
                        &lt;br /&gt;
                        &lt;br /&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.5.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="3.7" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;blockquote&gt;
                            aws cloudtrail describe-trails
                            &lt;/blockquote&gt;Check that KMS is enabled if the &amp;quot;KmsKeyId&amp;quot; property is
                            set.
                            &lt;ol&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.865">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.9" name="Enforce employee lifecycle policies" issueId="" issueLink="" platform="" cost="1" risk="32" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Regular reviews of accounts on the system should be conducted to ensure that stale accounts
                        cannot be abused either by those former employees using them or compromised by attackers.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;&amp;nbsp;
                        &lt;br /&gt;At least every 90 days complete the following:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Sign in to the AWS Management Console (with IAM update privileges).&lt;/li&gt;
                        &lt;li&gt;Go to IAM Service on the AWS Console.&lt;/li&gt;
                        &lt;li&gt;Click on Users.&lt;/li&gt;
                        &lt;li&gt;For any user that should no longer exist:&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;select the user,&lt;/li&gt;
                        &lt;li&gt;click &amp;quot;User Actions&amp;quot;,&lt;/li&gt;
                        &lt;li&gt;click &amp;quot;Delete&amp;quot;.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Obtain a list of IAM users by: aws iam list-users --query 'Users[*].UserName'
                            --output text&lt;/li&gt;
                            &lt;li&gt;Ensure all users are valid users.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.040">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-IAM4" name="Ensure IAM policies that allow full &quot;*:*&quot; administrative privileges are not attached" issueId="" issueLink="" platform="" cost="0" risk="32" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;IAM policies are the means by which privileges are granted to users, groups, or roles. It is recommended and considered a standard security advice to grant least privilege -that is, granting only the permissions required to perform a task. Determine what users need to do and then craft policies for them that let the users perform only those tasks, instead of allowing full administrative privileges.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;It's more secure to start with a minimum set of permissions and grant additional permissions as necessary, rather than starting with permissions that are too lenient and then trying to tighten them later.&lt;/p&gt;&lt;p&gt;Providing full administrative privileges instead of restricting to the minimum set of permissions that the user is required to do exposes the resources to potentially unwanted actions.&lt;/p&gt;&lt;p&gt;IAM policies that have a statement with "Effect": "Allow" with "Action": "*" over "Resource": "*" should be removed.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Console:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Perform the following to detach the policy that has full administrative privileges:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Sign in to the AWS Management Console and open the IAM console at https://console.aws.amazon.com/iam/.&lt;/li&gt;&lt;li&gt;In the navigation pane, click Policies and then search for the policy name found in the audit step.&lt;/li&gt;&lt;li&gt;Select the policy that needs to be deleted.&lt;/li&gt;&lt;li&gt;In the policy action menu, select first Detach&lt;/li&gt;&lt;li&gt;Select all Users, Groups, Roles that have this policy attached&lt;/li&gt;&lt;li&gt;Click Detach Policy&lt;/li&gt;&lt;li&gt;In the policy action menu, select Detach&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;From Command Line:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Perform the following to detach the policy that has full administrative privileges as found in the audit step:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Lists all IAM users, groups, and roles that the specified managed policy is attached to. aws iam list-entities-for-policy --policy-arn &amp;lt;policy_arn&amp;gt;&lt;/li&gt;&lt;li&gt;Detach the policy from all IAM Users: aws iam detach-user-policy --user-name &amp;lt;iam_user&amp;gt; --policy-arn &amp;lt;policy_arn&amp;gt;&lt;/li&gt;&lt;li&gt;Detach the policy from all IAM Groups: aws iam detach-group-policy --group-name &amp;lt;iam_group&amp;gt; --policy-arn &amp;lt;policy_arn&amp;gt;&lt;/li&gt;&lt;li&gt;Detach the policy from all IAM Roles: aws iam detach-role-policy --role-name &amp;lt;iam_role&amp;gt; --policy-arn &amp;lt;policy_arn&amp;gt;&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.16" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.16" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="7.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform the following to determine what policies are created: From Command Line:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Run the following to get a list of IAM policies: aws iam list-policies --only-attached --output text&lt;/li&gt;&lt;li&gt;For each policy returned, run the following command to determine if any policies is allowing full administrative privileges on the account: aws iam get-policy-version --policy-arn &amp;lt;policy_arn&amp;gt; --version-id &amp;lt;version&amp;gt;&lt;/li&gt;&lt;li&gt;In output ensure policy should not have any Statement block with "Effect": "Allow" and Action set to "*" and Resource set to "*"&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.039">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-Network-1" name="Ensure no Network ACLs allow ingress from 0.0.0.0/0 to remote server administration ports" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The Network Access Control List (NACL) function provide stateless filtering of ingress and egress network traffic to AWS resources. It is recommended that no NACL allows unrestricted ingress access to remote server administration ports, such as SSH to port 22 and RDP to port 3389.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Public access to remote server administration ports, such as 22 and 3389, increases resource attack surface and unnecessarily raises the risk of resource compromise.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Console:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Perform the following:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home&lt;/li&gt;&lt;li&gt;In the left pane, click Network ACLs&lt;/li&gt;&lt;li&gt;For each network ACL to remediate, perform the following:&lt;ol&gt;&lt;li&gt;Select the network ACL&lt;/li&gt;&lt;li&gt;Click the Inbound Rules tab&lt;/li&gt;&lt;li&gt;Click Edit inbound rules&lt;/li&gt;&lt;li&gt;Either A) update the Source field to a range other than 0.0.0.0/0, or, B) Click Delete to remove the offending inbound rule&lt;/li&gt;&lt;li&gt;Click Save&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.1" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="5.1" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Console:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Perform the following to determine if the account is configured as prescribed:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home&lt;/li&gt;&lt;li&gt;In the left pane, click Network ACLs&lt;/li&gt;&lt;li&gt;For each network ACL, perform the following:&lt;ol&gt;&lt;li&gt;Select the network ACL&lt;/li&gt;&lt;li&gt;Click the Inbound Rules tab&lt;/li&gt;&lt;li&gt;Ensure no rule exists that has a port range that includes port 22, 3389, or other remote server administration ports for your environment and has a Source of 0.0.0.0/0 and shows ALLOW&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Note: A Port value of ALL or a port range such as 0-1024 are inclusive of port 22, 3389, and other remote server administration ports&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.159">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-IAM3" name="Ensure there is only one active access key available for any single IAM user" issueId="" issueLink="" platform="" cost="0" risk="32" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Access keys are long-term credentials for an IAM user or the AWS account 'root' user. You can use access keys to sign programmatic requests to the AWS CLI or AWS API (directly or using the AWS SDK)&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Access keys are long-term credentials for an IAM user or the AWS account 'root' user. You can use access keys to sign programmatic requests to the AWS CLI or AWS API. One of the best ways to protect your account is to not allow users to have multiple access keys.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Console:&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Sign in to the AWS Management Console and navigate to IAM dashboard at https://console.aws.amazon.com/iam/.&lt;/li&gt;&lt;li&gt;In the left navigation panel, choose Users.&lt;/li&gt;&lt;li&gt;Click on the IAM user name that you want to examine.&lt;/li&gt;&lt;li&gt;On the IAM user configuration page, select Security Credentials tab.&lt;/li&gt;&lt;li&gt;In Access Keys section, choose one access key that is less than 90 days old. This should be the only active key used by this IAM user to access AWS resources programmatically. Test your application(s) to make sure that the chosen access key is working.&lt;/li&gt;&lt;li&gt;In the same Access Keys section, identify your non-operational access keys (other than the chosen one) and deactivate it by clicking the Make Inactive link.&lt;/li&gt;&lt;li&gt;If you receive the Change Key Status confirmation box, click Deactivate to switch off the selected key.&lt;/li&gt;&lt;li&gt;Repeat steps no. 3 - 7 for each IAM user in your AWS account.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;From Command Line:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1. Using the IAM user and access key information provided in the Audit CLI, choose one access key that is less than 90 days old. This should be the only active key used by this IAM user to access AWS resources programmatically. Test your application(s) to make sure that the chosen access key is working.&lt;/p&gt;&lt;p&gt;2. Run the update-access-key command below using the IAM user name and the non-operational access key IDs to deactivate the unnecessary key(s). Refer to the Audit section to identify the unnecessary access key ID for the selected IAM user&lt;/p&gt;&lt;p&gt;Note - the command does not return any output:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws iam update-access-key --access-key-id &amp;lt;access-key-id&amp;gt; --status Inactive --user-name &amp;lt;user-name&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;3. To confirm that the selected access key pair has been successfully deactivated run the list-access-keys audit command again for that IAM User:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws iam list-access-keys --user-name &amp;lt;user-name&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The command output should expose the metadata for each access key associated with the IAM user. If the non-operational key pair(s) Status is set to Inactive, the key has been successfully deactivated and the IAM user access configuration adheres now to this recommendation.&lt;/p&gt;&lt;p&gt;4. Repeat steps no. 1 - 3 for each IAM user in your AWS account.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.13" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.13" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Console:&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Sign in to the AWS Management Console and navigate to IAM dashboard at https://console.aws.amazon.com/iam/.&lt;/li&gt;&lt;li&gt;In the left navigation panel, choose Users.&lt;/li&gt;&lt;li&gt;Click on the IAM user name that you want to examine.&lt;/li&gt;&lt;li&gt;On the IAM user configuration page, select Security Credentials tab.&lt;/li&gt;&lt;li&gt;Under Access Keys section, in the Status column, check the current status for each access key associated with the IAM user. If the selected IAM user has more than one access key activated then the users access configuration does not adhere to security best practices and the risk of accidental exposures increases.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Repeat steps no. 3 - 5 for each IAM user in your AWS account.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Command Line:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1. Run list-users command to list all IAM users within your account:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws iam list-users --query "Users[*].UserName"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The command output should return an array that contains all your IAM user names.&lt;/p&gt;&lt;p&gt;2. Run list-access-keys command using the IAM user name list to return the current status of each access key associated with the selected IAM user:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws iam list-access-keys --user-name &amp;lt;user-name&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The command output should expose the metadata ("Username", "AccessKeyId", "Status", "CreateDate") for each access key on that user account.&lt;/p&gt;&lt;p&gt;3. Check the Status property value for each key returned to determine each keys current state. If the Status property value for more than one IAM access key is set to Active, the user access configuration does not adhere to this recommendation, refer to the remediation below.&lt;/p&gt;&lt;p&gt;Repeat steps no. 2 and 3 for each IAM user in your AWS account.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.039">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.8" name="Export EC2 OS logs to cloudwatch logs" issueId="" issueLink="" platform="" cost="1" risk="37" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Cloudwatch logs is an AWS service that allows you to send logs from an EC2 instance to
                        cloudwatch via an agent installed locally on the machine. The logs are then stored centrally
                        within cloudwatch logs and metric alerts can be configured so that security incidents can be
                        reported to the security team. It is recommended to enable cloudwatch log monitoring on all EC2
                        servers.
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;br /&gt;&lt;/b&gt;Follow the directions provided in &amp;quot;http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/EC2NewInstanceCWL.html&amp;quot;
                        to install and enable Cloudwatch Logs on a new EC2 instance.
                        &lt;br /&gt;
                        &lt;br /&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Sign into the management console.&lt;/li&gt;
                            &lt;li&gt;Select Cloudwatch from the services menu.&amp;nbsp;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the left pane click &amp;quot;Logs&amp;quot;.&amp;nbsp;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click on your log group.&lt;/li&gt;
                            &lt;li&gt;Click on your log stream.&lt;/li&gt;
                            &lt;li&gt;Ensure event data is being captured as per the logs on your machine.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.865">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.8-5.9" name="Install an agent for AWS Cloudwatch Logs within AutoScaling Group for tier" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  You can use CloudWatch Logs to monitor, store and access log files from an Amazon EC2 instance (application or system data). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  With CloudWatch Logs, you can monitor your logs, in near real-time, for specific phrases, values or patterns (metrics). For example, you could set an alarm on the number of errors that occur in your system logs or view graphs of web request latency from your application logs. Log data can be stored and accessed for as long as you need using highly durable, lowcost storage so you don't have to worry about filling up hard drives. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A Cloudwatch agent needs to run within the Guest Operating System of each EC2 instance you wish to ship logs from. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Note: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;You can also use any third party log management tools (like Splunk, Loggly, AlertLogic Log Manager, etc.) as long as the recommendation goal is achieved.&lt;/li&gt; 
  &lt;li&gt;The below Audit and Remediation steps need to be modified for your specific log management tool, as they are provided in the benchmark only for Amazon Cloudwatch&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   *Note: references to Web tier are also applicable to App tier. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a sample agent configuration file for Amazon Linux and save it as a text file (for example, awslogs.cfg) either on the AMI's filesystem, in a publicly accessible http/https location, or an Amazon S3 location (for example, s3://&amp;lt;s3_bucket_name&amp;gt;/&amp;lt;cloudwatch_agent_config_file&amp;gt;):&lt;/li&gt; 
 &lt;/ul&gt; 
  [general] 
  state_file = /var/awslogs/state/agent-state 
  [/var/log/messages] 
  file = /var/log/messages 
  log_group_name = /var/log/messages 
  log_stream_name = {instance_id} 
  datetime_format = %b %d %H:%M:%S 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a new Web tier Autoscaling Launch Configuration with UserData populated for installing Cloudwatch Logs agent:&lt;/li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create and save locally a file containing the UserData, for example /tmp/UserData.txt:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt;
     #!/bin/bashcurl https://s3.amazonaws.com/awscloudwatch/downloads/latest/awslogs-agent-setup.py -Ochmod +x ./awslogs-agentsetup.py./awslogs-agent-setup.py -n -r us-east-1 -c s3://&amp;lt;s3_bucket_name&amp;gt;/&amp;lt;cloudwatch_agent_config_file&amp;gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Note: You can install the CloudWatch Logs agent by specifying the us-east-1, uswest-1, us-west-2, eu-west-1, eu-central-1, ap-southeast-1, ap-southeast-2, ap-northeast-1, or sa-east-1 regions.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt;
     aws autoscaling create-launch-configuration --launch-configurationname &amp;lt;web_tier_launch_config&amp;gt; --image-id &amp;lt;web_tier_ami&amp;gt; --key-name &amp;lt;your_key_pair&amp;gt; --security-groups &amp;lt;web_tier_security_group&amp;gt; --instance-type &amp;lt;desired_instance_type&amp;gt; --iam-instance-profile &amp;lt;web_tier_instance_profile&amp;gt; -- user-data file:///tmp/UserData.txt 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-launch-configurations.html"/>
            <reference name="Create launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/create-launch-configuration.html"/>
            <reference name="EC2 New Instance CWL" url="https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/EC2NewInstanceCWL.html"/>
          </references>
          <standards>
            <standard ref="5.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="5.9" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.9" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check if the Cloudwatch Logs agent is installed through UserData in the Web tier Autoscaling Launch Configuration:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-launch-configurations --launch-configuration-names &amp;lt;web_tier_launch_config&amp;gt;--query "LaunchConfigurations[*].UserData" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Output should be similar with:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    #!/bin/bash 
  &lt;/div&gt; 
  &lt;div&gt;
    curl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -Ochmod +x ./awslogs-agent-setup.py ./awslogs-agent-setup.py -n -r us-east-1 -c s3://&amp;lt;s3_bucket_name&amp;gt;/&amp;lt;cloudwatch_agent_config_file&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.462">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.4" name="Integrate the CloudTrail logs into CloudWatch logs" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>One way to work with cloudtrail logs is to send them to cloudwatch logs which allows you to
                        define metric filters for alerting and monitoring. This allows you to take immediate action if a
                        certain threshold has been met. Enabling this provides the opportunity to monitor for sensitive
                        account activity.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Sign in to the AWS Management Console (with cloudtrail update permission).&lt;/li&gt;
                        &lt;li&gt;Select Cloudtrail from the services list.&lt;/li&gt;
                        &lt;li&gt;Under All Buckets select the target bucket you want to check.&lt;/li&gt;
                        &lt;li&gt;Select &amp;quot;Properties&amp;quot; then &amp;quot;Trails&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on each trail where no CloudWatch Logs are defined.&lt;/li&gt;
                        &lt;li&gt;Go to the &amp;quot;CloudWatch Logs&amp;quot; section and click on &amp;quot;Configure&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Define a new or select an existing log group and click &amp;quot;Continue&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Configure the IAM Role which will deliver CloudTrail events to CloudWatch Logs.&lt;/li&gt;
                        &lt;li&gt;Create/Select an IAM Role and Policy Name.&lt;/li&gt;
                        &lt;li&gt;Click Allow.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;br /&gt;&amp;nbsp;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10.3.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.4" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="3.4" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;blockquote&gt;
                            aws cloudtrail get-trail-status --name &amp;lt;trail_name&amp;gt;
                            &lt;/blockquote&gt;Ensure the &amp;quot;LatestcloudwatchLogdDeliveryTime&amp;quot; property
                            is set to a recent time (ie within the latest day or so).</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.865">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-EC2-6.1" name="Launch EC2 instances into a VPC" issueId="" issueLink="" platform="" cost="1" risk="39" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;AWS virtual private cloud is the de-facto standard for networking AWS as it provides additional security controls such as Security Groups, Network Access Control Lists (NACLs) and routing. However, the use of VPC is not compulsory and resources such as EC2 can be created outside of VPC (usingEC2 Classic). It is recommended to make all resources a member of a VPC if possible to benefit from the increased security controls they offer and reduce undue network exposure. &amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Log in to the AWS Management Console.&lt;/li&gt;&lt;li&gt;Select EC2 from the services menu.&lt;/li&gt;&lt;li&gt;Select "Launch Instance".&lt;/li&gt;&lt;li&gt;Complete the wizard until step 3. At this point, ensure a VPC ID is selected for the "Network" option, choose an appropriate "Subnet" and "Auto-assign Public IP" option.&lt;/li&gt;&lt;li&gt;Complete the wizard to launch the instance.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;NB: If you want to migrate an already running instance you will need to convert the image into an AMI and then launch a new instance using the AMI and placing in a VPC, as per the steps above&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Log in to the AWS Management Console.&lt;/li&gt;&lt;li&gt;Select EC2 from the services menu.&lt;/li&gt;&lt;li&gt;Select "Instances" from the left hand menu.&lt;/li&gt;&lt;li&gt;For each instance in the list:&lt;ul&gt;&lt;li&gt;select the instance&lt;/li&gt;&lt;li&gt;in the preview pane confirm the instance has a "VPC ID". If a hyphen "-" is shown then your instance is running in EC2-Classic mode.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.159">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-IAM7" name="Manage IAM users centrally via identity federation or AWS Organizations for multi-account environments" issueId="" issueLink="" platform="" cost="0" risk="32" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In multi-account environments, IAM user centralization facilitates greater user control. User access beyond the initial account is then provided via role assumption. Centralization of users can be accomplished through federation with an external identity provider or through the use of AWS Organizations.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Centralizing IAM user management to a single identity store reduces complexity and thus the likelihood of access management errors.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;The remediation procedure will vary based on the individual organization's implementation of identity federation and/or AWS Organizations with the acceptance criteria that no non-service IAM users, and non-root accounts, are present outside the account providing centralized IAM user management.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.21" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;For multi-account AWS environments with an external identity provider...&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Determine the master account for identity federation or IAM user management&lt;/li&gt;&lt;li&gt;Login to that account through the AWS Management Console&lt;/li&gt;&lt;li&gt;Click Services&lt;/li&gt;&lt;li&gt;Click IAM&lt;/li&gt;&lt;li&gt;Click Identity providers&lt;/li&gt;&lt;li&gt;Verify the configuration&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Then..., determine all accounts that should not have local users present. For each account...&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Determine all accounts that should not have local users present&lt;/li&gt;&lt;li&gt;Log into the AWS Management Console&lt;/li&gt;&lt;li&gt;Switch role into each identified account&lt;/li&gt;&lt;li&gt;Click Services&lt;/li&gt;&lt;li&gt;Click IAM&lt;/li&gt;&lt;li&gt;Click Users&lt;/li&gt;&lt;li&gt;Confirm that no IAM users representing individuals are present&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;For multi-account AWS environments implementing AWS Organizations without an external identity provider...&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Determine all accounts that should not have local users present&lt;/li&gt;&lt;li&gt;Log into the AWS Management Console&lt;/li&gt;&lt;li&gt;Switch role into each identified account&lt;/li&gt;&lt;li&gt;Click Services&lt;/li&gt;&lt;li&gt;Click IAM&lt;/li&gt;&lt;li&gt;Click Users&lt;/li&gt;&lt;li&gt;Confirm that no IAM users representing individuals are present&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.039">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.8" name="Reduce routing tables entries for VPC peering" issueId="" issueLink="" platform="" cost="1" risk="39" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Once a VPC peering connection is established, routing tables must be updated to establish any connections between the peered VPCs. These routes can be as specific as desired - even peering a VPC to only a single host on the other side of the connection. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
  Being highly selective in peering routing tables is a very effective way of minimizing the impact of breach as resources outside of these routes are inaccessible to the peered VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation: &lt;/b&gt; 
  Remove and add route table entries to ensure that the least number of subnets or hosts as is required to accomplish the purpose for peering are routable. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Via CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;For each &amp;lt;route_table_id&amp;gt; containing routes non compliant with your routing policy (which grants more than desired ""least access""), delete the non compliant route:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 delete-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidr-block &amp;lt;non_compliant_destination_CIDR&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a new compliant route:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidr-block &amp;lt;compliant_destination_CIDR&amp;gt; --vpc-peering-connection-id &amp;lt;peering_connection_id&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configurations with Specific Routes" url="https://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/peering-configurations-partial-access.html"/>
          </references>
          <standards>
            <standard ref="5.4" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review routing tables of peered VPCs for whether they route
                            all subnets of each VPC and whether that is necessary to accomplish the intended purposes
                            for peering the VPCs.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Via CLI:&lt;/b&gt;&lt;br /&gt;List all
                            the route tables from a VPC and check if &amp;quot;GatewayId&amp;quot; is pointing to a
                            &amp;lt;peering_connection_id&amp;gt; (e.g. pcx-1a2b3c4d) and if &amp;quot;DestinationCidrBlock&amp;quot;
                            is as specific as desired.&lt;br /&gt;
                            &lt;blockquote&gt;
                            aws ec2 describe-route-tables --filter &amp;quot;Name=vpc-id,Values=&amp;lt;vpc_id&amp;gt;&amp;quot;
                            --query &amp;quot;RouteTables[*].{RouteTableId:RouteTableId, VpcId:VpcId, Routes:Routes,
                            AssociatedSubnets:Associations[*].SubnetId}&amp;quot;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.160">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Gov-1.2" name="Register a Security contact for your AWS account" issueId="" issueLink="" platform="" cost="1" risk="29" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>AWS will occasionally send security advisories and alerts to the account holder. By default this will go to the email address that the account is registered under. However if a security contact is specified these alerts will be sent here instead. Therefore this provides the means of ensuring these advisories are routed to the security team, especially if a distribution email address is used.&amp;nbsp; 
&lt;div&gt;
  &amp;nbsp; 
 &lt;br /&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Login to the AWS Account as root.&lt;/li&gt; 
  &lt;li&gt;Click account name on the top right of the management console.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;My Account&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Scroll down to &amp;quot;Alternate Contacts&amp;quot; section.&lt;/li&gt; 
  &lt;li&gt;Click on Edit.&lt;/li&gt; 
  &lt;li&gt;In the &amp;quot;Security&amp;quot; section complete the requested contact information.&lt;/li&gt; 
  &lt;li&gt;Click update when complete.&lt;/li&gt; 
 &lt;/ol&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.2" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.2" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Login to the AWS Account as root.&lt;/li&gt;
                            &lt;li&gt;Click account name on the top right of the management console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;My Account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Scroll down to &amp;quot;Alternate Contacts&amp;quot; section.&lt;/li&gt;
                            &lt;li&gt;Confirm whether a contact has been set for &amp;quot;Security&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.039">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-IAM5" name="Remove expired SSL/TLS certificates stored in AWS IAM" issueId="" issueLink="" platform="" cost="0" risk="32" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To enable HTTPS connections to your website or application in AWS, you need an SSL/TLS server certificate. You can use ACM or IAM to store and deploy server certificates. Use IAM as a certificate manager only when you must support HTTPS connections in a region that is not supported by ACM. IAM securely encrypts your private keys and stores the encrypted version in IAM SSL certificate storage. IAM supports deploying server certificates in all regions, but you must obtain your certificate from an external provider for use with AWS. You cannot upload an ACM certificate to IAM. Additionally, you cannot manage your certificates from the IAM Console.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Removing expired SSL/TLS certificates eliminates the risk that an invalid certificate will be deployed accidentally to a resource such as AWS Elastic Load Balancer (ELB), which can damage the credibility of the application/website behind the ELB. As a best practice, it is recommended to delete expired certificates.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Console:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Removing expired certificates via AWS Management Console is not currently supported. To delete SSL/TLS certificates stored in IAM via the AWS API use the Command Line Interface (CLI).&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Command Line:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;To delete Expired Certificate run following command by replacing &amp;lt;CERTIFICATE_NAME&amp;gt; with the name of the certificate to delete:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws iam delete-server-certificate --server-certificate-name &amp;lt;CERTIFICATE_NAME&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;When the preceding command is successful, it does not return any output.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.19" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.19" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Console:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Getting the certificates expiration information via AWS Management Console is not currently supported. To request information about the SSL/TLS certificates stored in IAM via the AWS API use the Command Line Interface (CLI).&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Command Line:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Run list-server-certificates command to list all the IAM-stored server certificates:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws iam list-server-certificates&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The command output should return an array that contains all the SSL/TLS certificates currently stored in IAM and their metadata (name, ID, expiration date, etc):&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;{ "ServerCertificateMetadataList": [ { "ServerCertificateId": "EHDGFRW7EJFYTE88D", "ServerCertificateName": "MyServerCertificate", "Expiration": "2018-07-10T23:59:59Z", "Path": "/", "Arn": "arn:aws:iam::012345678910:server-certificate/MySSLCertificate", "UploadDate": "2018-06-10T11:56:08Z" } ] }&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Verify the ServerCertificateName and Expiration parameter value (expiration date) for each SSL/TLS certificate returned by the list-server-certificates command and determine if there are any expired server certificates currently stored in AWS IAM. If so, use the AWS API to remove them. If this command returns:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;{ { "ServerCertificateMetadataList": [] }&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;This means that there are no expired certificates, It DOES NOT mean that no certificates exist.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:19.039">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.2" name="Separate VPC into zones by function" issueId="" issueLink="" platform="" cost="1" risk="39" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>AWS virtual private cloud is the de-facto standard for networking AWS as it provides additional security controls such as Security Groups, Network Access Control Lists (NACL's) and routing. It is recommended that resources be placed into VPC's according to use case (ie dev/test/prod) and that appropriate security levels be set on these VPC's. Placing such resources accordingly ensures that a resource of a higher security level is not exposed by the security settings of a lower labeled VPC.&amp;nbsp; 
&lt;div&gt;
  &amp;nbsp; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Identify the resources that exist within an incorrect VPC.&lt;/li&gt; 
  &lt;li&gt;Migrate or move them to the correct VPC.&lt;/li&gt; 
 &lt;/ol&gt; 
   &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that each AWS resource added to a VPC is isolated according to its designation (ie
                            test/dev/prod).</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.160">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.1" name="Use AWS VPC for networking" issueId="" issueLink="" platform="" cost="1" risk="39" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>AWS virtual private cloud is the de-facto standard for networking AWS as it provides additional security controls such as Security Groups, Network Access Control Lists (NACL's) and routing. 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  However the use of VPC is not compulsory and resources such as EC2 can be created outside of VPC (usingEC2 Classic). It is the recommendation to make all resources a member of a VPC if possible to benefit from the increased security controls they offer and reduce undue network exposure.&amp;nbsp; 
 &lt;div&gt;
   &amp;nbsp; 
  &lt;br&gt; 
  &lt;b&gt;Remediation:&lt;br&gt;&lt;/b&gt;Move or migrate the resources to a VPC. 
 &lt;/div&gt; 
  
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that each AWS resource you own that is able to exist in a VPC does so.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:18.160">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="VIRTUAL PRIVATE CLOUD (VPC) NETWORK" name="Virtual Private Cloud (VPC) Network" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Network-5.1" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.2">
                  <countermeasures>
                    <countermeasure ref="AWS-Network-1" mitigation="16"/>
                    <countermeasure ref="Hydras-AWS-EC2-6.1" mitigation="16"/>
                    <countermeasure ref="Hydras-AWS-Network-5.2" mitigation="16"/>
                    <countermeasure ref="aws-tier-5.12" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.8">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Network-5.8" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-Network-1" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-EC2-6.1" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-Network-5.1" mitigation="20"/>
                <countermeasure ref="Hydras-AWS-Network-5.2" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-Network-5.8" mitigation="16"/>
                <countermeasure ref="aws-tier-5.12" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="CLOUDWATCH METRIC ALERTS" name="Cloudwatch Metric Alerts" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-ACCESS-NETWORK-AWS" issueId="" issueLink="" name="Sensitive data is compromised through undetected network access" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;div&gt;
                                Attackers gain undetected access to the network systems and the changes of the attackers
                                could not be audited or detected.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Monitoring-4.12">
                  <countermeasures>
                    <countermeasure ref="AWS-Monitoring-1" mitigation="16"/>
                    <countermeasure ref="AWS-Monitoring-2" mitigation="16"/>
                    <countermeasure ref="AWS-Monitoring-3" mitigation="16"/>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.11" mitigation="20"/>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.12" mitigation="16"/>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.13" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-Monitoring-1" mitigation="16"/>
                <countermeasure ref="AWS-Monitoring-2" mitigation="16"/>
                <countermeasure ref="AWS-Monitoring-3" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-Monitoring-4.11" mitigation="20"/>
                <countermeasure ref="Hydras-AWS-Monitoring-4.12" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-Monitoring-4.13" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="UNAUTHORIZED-ACCESS-SECURITY-SYSTEMS-AWS" issueId="" issueLink="" name="Attackers gain undetected access to the security system configurations" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers gain undetected access to the security configurations and changes made by the attackers are undetected and unaudited.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Monitoring-4.10">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.10" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Monitoring-4.4">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.6" mitigation="33"/>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.8" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-Monitoring-4.10" mitigation="34"/>
                <countermeasure ref="Hydras-AWS-Monitoring-4.6" mitigation="33"/>
                <countermeasure ref="Hydras-AWS-Monitoring-4.8" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="UNAUTHORIZED_ACCESS_SYSTEMS_AWS" issueId="" issueLink="" name="Attackers access to the systems without being detected" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;div&gt;
                                Attackers gain access to the systems and they are not detected and the changes of the
                                attackers could not be detected and audited.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Monitoring-4.2">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.2" mitigation="12"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Monitoring-4.3">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.3" mitigation="11"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Monitoring-4.4">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.4" mitigation="11"/>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.9" mitigation="11"/>
                    <countermeasure ref="aws-tier-4.8" mitigation="11"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Monitoring-4.5">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.5" mitigation="11"/>
                  </countermeasures>
                </weakness>
                <weakness ref="cloudwatch-misconfig">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.4-5.5" mitigation="11"/>
                    <countermeasure ref="aws-tier-5.6-5.7" mitigation="11"/>
                    <countermeasure ref="aws-tier-5.8-5.9" mitigation="11"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-Monitoring-4.2" mitigation="12"/>
                <countermeasure ref="Hydras-AWS-Monitoring-4.3" mitigation="11"/>
                <countermeasure ref="Hydras-AWS-Monitoring-4.4" mitigation="11"/>
                <countermeasure ref="Hydras-AWS-Monitoring-4.5" mitigation="11"/>
                <countermeasure ref="Hydras-AWS-Monitoring-4.9" mitigation="11"/>
                <countermeasure ref="aws-tier-4.8" mitigation="11"/>
                <countermeasure ref="aws-tier-5.4-5.5" mitigation="11"/>
                <countermeasure ref="aws-tier-5.6-5.7" mitigation="11"/>
                <countermeasure ref="aws-tier-5.8-5.9" mitigation="11"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHENTICATION" name="Authentication" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOST-ACCESS-ROOT" issueId="" issueLink="" name="Attackers gain unauthorized access to the root account due to the lack of configuration of the account" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;div&gt;
                                Attackers could gain unauthorized access to the administrator account due to the lack of
                                the account and its security mechanisms, like modifying credentials and adding/removing
                                user accounts.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.1">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.2" mitigation="16"/>
                    <countermeasure ref="Hydras-AWS-IAM-2.5" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-IAM-2.2">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.1" mitigation="16"/>
                    <countermeasure ref="Hydras-AWS-IAM-2.3" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="LOST-ACCESS-ROOT-01">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Gov-1.1" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="LOST-SECURITY-ALERTS">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Gov-1.2" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-Gov-1.1" mitigation="20"/>
                <countermeasure ref="Hydras-AWS-Gov-1.2" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-IAM-2.1" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-IAM-2.2" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-IAM-2.3" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-IAM-2.5" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="AWS-LOST-ACCESS-USER" issueId="" issueLink="" name="Attackers gain unauthorized access to the user account due to the lack of configuration of the account" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to a lack of configuration of the account, such as an incorrect configuration of the security question to reset the password.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.2">
                  <countermeasures>
                    <countermeasure ref="AWS-IAM5" mitigation="10"/>
                    <countermeasure ref="AWS-IAM6" mitigation="10"/>
                    <countermeasure ref="AWS-IAM7" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-IAM-2.6">
                  <countermeasures>
                    <countermeasure ref="AWS-IAM2" mitigation="10"/>
                    <countermeasure ref="AWS-IAM3" mitigation="10"/>
                    <countermeasure ref="AWS-IAM4" mitigation="10"/>
                    <countermeasure ref="Hydras-AWS-IAM-2.6" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-IAM-2.8">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.4" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-IAM-2.9">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.9" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="LOST-SECURITY-ALERTS">
                  <countermeasures>
                    <countermeasure ref="AWS-IAM1" mitigation="10"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-IAM1" mitigation="10"/>
                <countermeasure ref="AWS-IAM2" mitigation="10"/>
                <countermeasure ref="AWS-IAM3" mitigation="10"/>
                <countermeasure ref="AWS-IAM4" mitigation="10"/>
                <countermeasure ref="AWS-IAM5" mitigation="10"/>
                <countermeasure ref="AWS-IAM6" mitigation="10"/>
                <countermeasure ref="AWS-IAM7" mitigation="10"/>
                <countermeasure ref="Hydras-AWS-IAM-2.4" mitigation="10"/>
                <countermeasure ref="Hydras-AWS-IAM-2.6" mitigation="10"/>
                <countermeasure ref="Hydras-AWS-IAM-2.9" mitigation="10"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-EXPIRATION-DATE">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.11" mitigation="8"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-IAM-1.21">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-1.21" mitigation="8"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-EC2-6.3" mitigation="12"/>
                    <countermeasure ref="Hydras-AWS-IAM-1.20" mitigation="8"/>
                    <countermeasure ref="Hydras-AWS-IAM-2.7" mitigation="8"/>
                    <countermeasure ref="Hydras-AWS-IAM-2.8" mitigation="8"/>
                    <countermeasure ref="aws-tier-2.1-2.2" mitigation="8"/>
                    <countermeasure ref="aws-tier-2.3-2.4" mitigation="8"/>
                    <countermeasure ref="aws-tier-2.5-2.6" mitigation="8"/>
                    <countermeasure ref="aws-tier-2.7" mitigation="8"/>
                    <countermeasure ref="aws-tier-2.8" mitigation="8"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-IAM-2.8">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.10" mitigation="8"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-EC2-6.3" mitigation="12"/>
                <countermeasure ref="Hydras-AWS-IAM-1.20" mitigation="8"/>
                <countermeasure ref="Hydras-AWS-IAM-1.21" mitigation="8"/>
                <countermeasure ref="Hydras-AWS-IAM-2.10" mitigation="8"/>
                <countermeasure ref="Hydras-AWS-IAM-2.11" mitigation="8"/>
                <countermeasure ref="Hydras-AWS-IAM-2.7" mitigation="8"/>
                <countermeasure ref="Hydras-AWS-IAM-2.8" mitigation="8"/>
                <countermeasure ref="aws-tier-2.1-2.2" mitigation="8"/>
                <countermeasure ref="aws-tier-2.3-2.4" mitigation="8"/>
                <countermeasure ref="aws-tier-2.5-2.6" mitigation="8"/>
                <countermeasure ref="aws-tier-2.7" mitigation="8"/>
                <countermeasure ref="aws-tier-2.8" mitigation="8"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="API LOGGING AND AUDITING" name="API Logging and Auditing" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUDITABLE-CHANGES-AWS" issueId="" issueLink="" name="Attackers make undetected and unaudited changes to system configurations" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;div&gt;
                                If audit trails are not properly protected, an attacker could gain access to the system,
                                modify the status of the resources or exfiltrate sensitive data without being noticed.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Logging-3.1">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Logging-3.1" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Logging-3.3">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Logging-3.3" mitigation="20"/>
                    <countermeasure ref="Hydras-AWS-Logging-3.5" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Logging-3.4">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Logging-3.2" mitigation="20"/>
                    <countermeasure ref="Hydras-AWS-Logging-3.4" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-Logging-3.1" mitigation="20"/>
                <countermeasure ref="Hydras-AWS-Logging-3.2" mitigation="20"/>
                <countermeasure ref="Hydras-AWS-Logging-3.3" mitigation="20"/>
                <countermeasure ref="Hydras-AWS-Logging-3.4" mitigation="20"/>
                <countermeasure ref="Hydras-AWS-Logging-3.5" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AWS RESOURCE LOGGING" name="AWS Resource Logging" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUDITABLE-CHANGES-RESOURCES-AWS" issueId="" issueLink="" name="Attackers make undetected and unaudited changes in the resources" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;div&gt;
                                If audit trails in the resources are not enabled or not protected, attackers could gain
                                access to the system and modify or delete data from the resources and the changes are
                                not detected.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Logging-3.4">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Logging-3.6" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Logging-3.7">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Logging-3.7" mitigation="16"/>
                    <countermeasure ref="aws-tier-4.6" mitigation="16"/>
                    <countermeasure ref="aws-tier-4.7" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Logging-3.8">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Logging-3.8" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Logging-3.9">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Logging-3.9" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-Logging-3.6" mitigation="20"/>
                <countermeasure ref="Hydras-AWS-Logging-3.7" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-Logging-3.8" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-Logging-3.9" mitigation="16"/>
                <countermeasure ref="aws-tier-4.6" mitigation="16"/>
                <countermeasure ref="aws-tier-4.7" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="2ba39ff2-b770-4918-82c3-cb3acaefc8a8" diagramComponentId="413275df-6aed-493a-8e6d-88ecb8d9a94e" ref="c3deaf9b-c40e-4197-ba20-9c97df93af69" name="AWS Aurora" desc="" library="Hydras-AWS-Foundation" parentComponentRef="fced5fe5-ffd5-4996-acf4-781167c3cbad" componentDefinitionRef="CD-AURORA" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="AWS-S3-7.4" name="Sensitive data is accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data is not encrypted and is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:18:25.248">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-AURORA1" name="Enable encryption for AWS Aurora clusters" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable encryption for AWS Aurora clusters&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Amazon Aurora encrypted DB clusters provide an additional layer of data protection by securing your data from unauthorized access to the underlying storage. You can use Amazon Aurora encryption to increase data protection of your applications deployed in the cloud, and to fulfill compliance requirements for encryption at rest.&lt;br&gt; Data that is encrypted at rest includes the underlying storage for DB clusters, its automated backups, read replicas, and snapshots.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To enable encryption for a new DB cluster, choose Enable encryption on the console.&lt;/p&gt; 
&lt;p&gt;If you use the create-db-cluster AWS CLI command to create an encrypted DB cluster, set the -storage-encrypted parameter. If you use the CreateDBCluster API operation, set the StorageEncrypted parameter to true.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; You can't disable encryption on an encrypted DB cluster.&lt;br&gt; Amazon Aurora encryption is not available for the db.t2.micro DB instance class.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Encrypting Amazon Aurora resources" url="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Overview.Encryption.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that encryption is enabled for AWS Aurora clusters.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:18:25.192">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.4">
                  <countermeasures>
                    <countermeasure ref="C-AWS-AURORA1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-AURORA1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="01590418-0288-4627-a576-93fc4d88699c" diagramComponentId="5b217769-4b24-412f-91fe-d82aa6864aa5" ref="92d23f43-48f3-49cc-9cfd-0b8ce4c4e502" name="AWS Backup" desc="" library="Hydras-AWS-Foundation" parentComponentRef="fced5fe5-ffd5-4996-acf4-781167c3cbad" componentDefinitionRef="CD-BACKUP" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="AWS-S3-7.4" name="Sensitive data is accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data is not encrypted and is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:18:26.082">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-BACKUP1" name="Configure encryption for backups" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Configure encryption for backups&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can configure encryption for resource types that support full AWS Backup management in using AWS Backup. If the resource type does not support full AWS Backup management, you must configure its backup encryption by following that service's instructions, such as Amazon EBS encryption in the Amazon Elastic Compute Cloud User Guide.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Configure encryption for backups for each resource type.&lt;br&gt; To see the list of each supported resource type, how encryption is configured for backups, and whether independent encryption for backups is supported, please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Encryption for backups in AWS Backup" url="https://docs.aws.amazon.com/aws-backup/latest/devguide/encryption.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Ensure that your backups are encrypted at rest.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:18:26.015">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.4">
                  <countermeasures>
                    <countermeasure ref="C-AWS-BACKUP1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-BACKUP1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="0afe7e83-1b72-42f2-9a86-b3cf85493604" diagramComponentId="43ff6e7c-1d3b-41d1-8ece-00b35d3f52ee" ref="5d9e072f-d11e-4575-9035-ed476057cfe7" name="AWS CloudFormation" desc="" library="Hydras-AWS-Foundation" parentComponentRef="fced5fe5-ffd5-4996-acf4-781167c3cbad" componentDefinitionRef="CD-CLOUDFORMATION" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:18:25.558">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.4" name="Sensitive data is accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data is not encrypted and is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:18:25.559">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-CLOUDFORMATION1" name="Control access to AWS CloudFormation" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Control access to AWS CloudFormation&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; When you create a group or an IAM user in your AWS account, you can associate an IAM policy with that group or user, which specifies the permissions that you want to grant.&lt;br&gt; For example, imagine you have a group of entry-level developers. You can create a Junior application developers group that includes all entry-level developers. Then, you associate a policy with that group that allows users to only view AWS CloudFormation stacks.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Example - A sample policy that grants view stack permissions&lt;/p&gt; 
&lt;p&gt;{ &lt;a&gt;Version&lt;/a&gt;"2012-10-17", &lt;a&gt;Statement&lt;/a&gt; &lt;a&gt;Effect&lt;/a&gt;"Allow", &lt;a&gt;Action&lt;/a&gt; "cloudformation:DescribeStacks", "cloudformation:DescribeStackEvents", "cloudformation:DescribeStackResource", "cloudformation:DescribeStackResources" ], &lt;a&gt;Resource&lt;/a&gt;"*" }]&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;Important&lt;br&gt; If you don't specify a stack name or ID in your statement, you must also grant the permission to use all resources for the action using the * wildcard for the Resource element.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Controlling access with AWS Identity and Access Management" url="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:18:25.503">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-S3-7.4" name="Encrypt sensitive data at rest for Amazon S3" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Encrypt sensitive data at rest for Amazon S3&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Data protection at rest refers to protecting data while it is stored on disks in Amazon S3 data centers.&lt;/p&gt;&lt;p&gt;You have the following options for protecting data at rest in Amazon S3:&lt;/p&gt;&lt;p&gt;- Server-Side Encryption - Request Amazon S3 to encrypt your object before saving it on disks in its data centers and then decrypt it when you download the objects.&lt;/p&gt;&lt;p&gt;- Client-Side Encryption - Encrypt data client-side and upload the encrypted data to Amazon S3. In this case, you manage the encryption process, the encryption keys, and related tools.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;Server-Side Encryption&lt;/p&gt;&lt;p&gt;Note&lt;/p&gt;&lt;p&gt;You can't apply different types of server-side encryption to the same object simultaneously.&lt;/p&gt;&lt;p&gt;Server-Side Encryption with Amazon S3-Managed Keys (SSE-S3)&lt;/p&gt;&lt;p&gt;When you use Server-Side Encryption with Amazon S3-Managed Keys (SSE-S3), each object is encrypted with a unique key. As an additional safeguard, it encrypts the key itself with a root key that it regularly rotates. Amazon S3 server-side encryption uses one of the strongest block ciphers available, 256-bit Advanced Encryption Standard (AES-256) GCM, to encrypt your data. For objects encrypted prior to AES-GCM, AES-CBC is still supported to decrypt those objects.&lt;/p&gt;&lt;p&gt;Server-Side Encryption with KMS keys Stored in AWS Key Management Service (SSE-KMS)&lt;/p&gt;&lt;p&gt;Server-Side Encryption with AWS KMS keys (SSE-KMS) is similar to SSE-S3, but with some additional benefits and charges for using this service. There are separate permissions for the use of a KMS key that provides added protection against unauthorized access of your objects in Amazon S3. SSE-KMS also provides you with an audit trail that shows when your KMS key was used and by whom. Additionally, you can create and manage customer managed keys or use AWS managed keys that are unique to you, your service, and your Region.&lt;/p&gt;&lt;p&gt;Server-Side Encryption with Customer-Provided Keys (SSE-C)&lt;/p&gt;&lt;p&gt;With Server-Side Encryption with Customer-Provided Keys (SSE-C), you manage the encryption keys and Amazon S3 manages the encryption, as it writes to disks, and decryption, when you access your objects.&lt;/p&gt;&lt;p&gt;Client-Side Encryption&lt;/p&gt;&lt;p&gt;To enable client-side encryption, you have the following options:&lt;/p&gt;&lt;p&gt;- Use a key stored in AWS Key Management Service (AWS KMS).&lt;/p&gt;&lt;p&gt;- Use a key that you store within your application.&lt;/p&gt;&lt;p&gt;Note&lt;/p&gt;&lt;p&gt;Amazon S3 supports only symmetric encryption KMS keys, and not asymmetric KMS keys.&lt;/p&gt;&lt;p&gt;For more information about each encryption option, please see Reference URLs.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Protecting data using Encryption" url="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingEncryption.html"/>
            <reference name="Protecting data using client-side encryption" url="https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingClientSideEncryption.html"/>
            <reference name="Protecting data using server-side encryption" url="https://docs.aws.amazon.com/AmazonS3/latest/userguide/serv-side-encryption.html"/>
          </references>
          <standards>
            <standard ref="2.1.1" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;blockquote&gt; 
 &lt;p&gt;aws s3api head-object --bucket my-bucket --key my-key &lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt; Look for the line "ServerSideEncryption" and verify that it is set to "aws:kms" which indicates KMS Encryption.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:18:25.504">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="C-AWS-CLOUDFORMATION1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-CLOUDFORMATION1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.4">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-S3-7.4" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-S3-7.4" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="99c62432-d723-4ed3-8b0d-7efe6259c2c0" diagramComponentId="9514f7e6-e36e-4963-8adb-e0f4d73f99e6" ref="f925c497-ce94-4b29-9fad-f6f4571aca0c" name="AWS CloudWatch" desc="" library="Hydras-AWS-Foundation" parentComponentRef="fced5fe5-ffd5-4996-acf4-781167c3cbad" componentDefinitionRef="cloudwatch" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:50.248">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:50.247">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:50.246">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.4" name="Sensitive data is accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data is not encrypted and is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:50.247">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-01" name="Unauthorized connection attempts are allowed on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To avoid this, access to network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:50.247">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AWS-CLOUDWATCH7" name="Connect to CloudWatch using Interface VPC Endpoints" issueId="" issueLink="" platform="" cost="0" risk="15" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Connect to CloudWatch using Interface VPC Endpoints&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; If you use Amazon Virtual Private Cloud (Amazon VPC) to host your AWS resources, you can establish a private connection between your VPC, CloudWatch, and CloudWatch Synthetics. You can use these connections to enable CloudWatch and CloudWatch Synthetics to communicate with your resources on your VPC without going through the public internet.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Creating a VPC Endpoint for CloudWatch&lt;/p&gt; 
&lt;p&gt;To start using CloudWatch with your VPC, create an interface VPC endpoint for CloudWatch. The service name to choose is com.amazonaws.region.monitoring.&lt;/p&gt; 
&lt;p&gt;You do not need to change the settings for CloudWatch. CloudWatch calls other AWS services using either public endpoints or private interface VPC endpoints, whichever are in use. For example, if you create an interface VPC endpoint for CloudWatch, and you already have metrics flowing to CloudWatch from resources located on your VPC, these metrics begin flowing through the interface VPC endpoint by default.&lt;/p&gt; 
&lt;p&gt;Controlling Access to Your CloudWatch VPC Endpoint&lt;/p&gt; 
&lt;p&gt;A VPC endpoint policy is an IAM resource policy that you attach to an endpoint when you create or modify the endpoint. If you don't attach a policy when you create an endpoint, Amazon VPC attaches a default policy for you that allows full access to the service. An endpoint policy doesn't override or replace IAM user policies or service-specific policies. It's a separate policy for controlling access from the endpoint to the specified service.&lt;/p&gt; 
&lt;p&gt;Endpoint policies must be written in JSON format.&lt;/p&gt; 
&lt;p&gt;To edit the VPC endpoint policy for CloudWatch&lt;/p&gt; 
&lt;p&gt;1. Open the Amazon VPC console.&lt;/p&gt; 
&lt;p&gt;2. In the navigation pane, choose Endpoints.&lt;/p&gt; 
&lt;p&gt;3. If you have not already created the endpoint for CloudWatch, choose Create Endpoint. Select com.amazonaws.region.monitoring, and then choose Create endpoint.&lt;/p&gt; 
&lt;p&gt;4. Select the com.amazonaws.region.monitoring endpoint, and then choose the Policy tab.&lt;/p&gt; 
&lt;p&gt;5. Choose Edit Policy, and then make your changes.&lt;/p&gt; 
&lt;p&gt;Creating a VPC Endpoint for CloudWatch Synthetics&lt;/p&gt; 
&lt;p&gt;To start using CloudWatch Synthetics with your VPC, create an interface VPC endpoint for CloudWatch Synthetics. The service name to choose is com.amazonaws.region.synthetics. For more information, see Creating an Interface Endpoint in the Amazon VPC User Guide.&lt;/p&gt; 
&lt;p&gt;You do not need to change the settings for CloudWatch Synthetics. CloudWatch Synthetics communicates with other AWS services using either public endpoints or private interface VPC endpoints, whichever are in use. For example, if you create an interface VPC endpoint for CloudWatch Synthetics, and you already have an interface endpoint for Amazon S3, CloudWatch Synthetics begins communicating with Amazon S3 through the interface VPC endpoint by default.&lt;/p&gt; 
&lt;p&gt;Controlling Access to Your CloudWatch Synthetics VPC Endpoint&lt;/p&gt; 
&lt;p&gt;A VPC endpoint policy is an IAM resource policy that you attach to an endpoint when you create or modify the endpoint. If you don't attach a policy when you create an endpoint, we attach a default policy for you that allows full access to the service. An endpoint policy doesn't override or replace IAM user policies or service-specific policies. It's a separate policy for controlling access from the endpoint to the specified service.&lt;/p&gt; 
&lt;p&gt;Endpoint policies must be written in JSON format.&lt;/p&gt; 
&lt;p&gt;To edit the VPC endpoint policy for CloudWatch Synthetics&lt;/p&gt; 
&lt;p&gt;1. Open the Amazon VPC console.&lt;/p&gt; 
&lt;p&gt;2. In the navigation pane, choose Endpoints.&lt;/p&gt; 
&lt;p&gt;3. If you have not already created the endpoint for CloudWatch Synthetics, choose Create Endpoint. Select com.amazonaws.region.synthetics and then choose Create endpoint.&lt;/p&gt; 
&lt;p&gt;4. Select the com.amazonaws.region.synthetics endpoint and then choose the Policy tab.&lt;/p&gt; 
&lt;p&gt;5. Choose Edit Policy, and then make your changes.&lt;/p&gt; 
&lt;p&gt;The following are the general steps for setting up an interface endpoint:&lt;/p&gt; 
&lt;p&gt;1. Choose the VPC in which to create the interface endpoint, and provide the name of the AWS service, endpoint service, or AWS Marketplace service to which you're connecting.&lt;/p&gt; 
&lt;p&gt;2. Choose a subnet in your VPC to use the interface endpoint. We create an endpoint network interface in the subnet. You can specify more than one subnet in different Availability Zones (as supported by the service) to help ensure that your interface endpoint is resilient to Availability Zone failures. In that case, we create an endpoint network interface in each subnet that you specify.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; An endpoint network interface is a requester-managed network interface. You can view it in your account, but you cannot manage it yourself. For more information, see Elastic Network Interfaces.&lt;/p&gt; 
&lt;p&gt;3. Specify the security groups to associate with the endpoint network interface. The security group rules control the traffic to the endpoint network interface from resources in your VPC. If you do not specify a security group, we associate the default security group for the VPC.&lt;/p&gt; 
&lt;p&gt;4. (Optional, AWS services and AWS Marketplace Partner services only) Enable private DNS for the endpoint to enable you to make requests to the service using its default DNS hostname.&lt;/p&gt; 
&lt;p&gt;Important&lt;br&gt; Private DNS is enabled by default for endpoints created for AWS services and AWS Marketplace Partner services.&lt;/p&gt; 
&lt;p&gt;Private DNS is enabled in the other subnets which are in the same VPC and Availability Zone or Local Zone.&lt;/p&gt; 
&lt;p&gt;5. When the service provider and the consumer are in different accounts, see Interface endpoint Availability Zone considerations for information about how to use Availability Zone IDs to identify the interface endpoint Availability Zone.&lt;/p&gt; 
&lt;p&gt;6. After you create the interface endpoint, it's available to use when it's accepted by the service provider. The service provider must configure the service to accept requests automatically or manually. AWS services and AWS Marketplace services generally accept all endpoint requests automatically.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Using CloudWatch and CloudWatch Synthetics with Interface VPC Endpoints" url="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch-and-interface-VPC.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Viewing your interface endpoint&lt;br /&gt;
After you've created an interface endpoint, you can view information about it using the Console or the Command line.&lt;/p&gt;

	&lt;p&gt;To view information about an interface endpoint using the console:&lt;/p&gt;

	&lt;p&gt;1. Open the Amazon VPC console.&lt;/p&gt;

	&lt;p&gt;2. In the navigation pane, choose Endpoints and select your interface endpoint.&lt;/p&gt;

	&lt;p&gt;3. To view information about the interface endpoint, choose Details. The DNS Names field displays the DNS names to use to access the service.&lt;/p&gt;

	&lt;p&gt;4. To view the subnets in which the interface endpoint has been created, and the ID of the endpoint network interface in each subnet, choose Subnets.&lt;/p&gt;

	&lt;p&gt;5. To view the security groups that are associated with the endpoint network interface, choose Security Groups.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:50.073">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-CLOUDWATCH1" name="Control access to Amazon CloudWatch resources" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Control access to Amazon CloudWatch resources&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Every AWS resource is owned by an AWS account, and permissions to create or access a resource are governed by permissions policies. An account administrator can attach permissions policies to IAM identities (that is, users, groups, and roles), and some services (such as AWS Lambda) also support attaching permissions policies to resources.&lt;br&gt; Policies attached to an IAM identity are referred to as identity-based policies (IAM policies) and policies attached to a resource are referred to as resource-based policies. CloudWatch supports only identity-based policies.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; The following shows an example of a permissions policy.&lt;/p&gt; 
&lt;p&gt;{ "Version": "2012-10-17", &lt;a&gt;Statement&lt;/a&gt; &lt;a&gt;Effect&lt;/a&gt;"Allow", &lt;a&gt;Action&lt;/a&gt;"cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics"], &lt;a&gt;Resource&lt;/a&gt;"*", &lt;a&gt;Condition&lt;/a&gt; &lt;a&gt;Bool&lt;/a&gt; &lt;a&gt;aws:SecureTransport&lt;/a&gt;"true" } } } ]&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;This sample policy has one statement that grants permissions to a group for two CloudWatch actions (cloudwatch:GetMetricStatistics, and cloudwatch:ListMetrics), but only if the group uses SSL with the request (&lt;a&gt;aws:SecureTransport&lt;/a&gt;"true").&lt;/p&gt; 
&lt;p&gt;For further information please see Reference URLs.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Overview of Managing Access Permissions to Your CloudWatch Resources" url="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/iam-access-control-overview-cw.html"/>
            <reference name="Sharing CloudWatch Dashboards" url="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch-dashboard-sharing.html"/>
            <reference name="Using Identity-Based Policies (IAM Policies) for CloudWatch" url="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/iam-identity-based-access-control-cw.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:50.072">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-4.1" name="Create a SNS topic for sending out notifications from Cloudwatch Alarms" issueId="" issueLink="" platform="" cost="1" risk="33" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
  For the Cloudwatch alarms and Auto-Scaling Groups to be able to send out notifications, a SNS topic should be created. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Amazon Simple Notification Service (Amazon SNS) is a web service that coordinates and manages the delivery or sending of messages to subscribing endpoints or clients. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  When using Amazon SNS, you (as the owner) create a topic and control access to it by defining policies that determine which publishers and subscribers can communicate with the topic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Cloudwatch alarms and certain actions inside Auto-Scaling Groups needs to be sent out to administrators, in order to be acted upon. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified CLI: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a new topic, and note the topic-arn value:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws sns create-topic --name &amp;lt;sns_topic_name&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a subscription to the new topic:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws sns subscribe --topic-arn &amp;lt;sns_topic_arn&amp;gt; --protocol &amp;lt;protocol_for_sns&amp;gt; --notification-endpoint &amp;lt;sns_subscription_endpoints&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: sns get topic attributes" url="https://docs.aws.amazon.com/cli/latest/reference/sns/get-topic-attributes.html"/>
            <reference name="Amazon docs: sns list subscriptions by topic" url="https://docs.aws.amazon.com/cli/latest/reference/sns/list-subscriptions-by-topic.html"/>
            <reference name="Amazon docs: sns set topic attributes" url="https://docs.aws.amazon.com/cli/latest/reference/sns/create-topic.html"/>
            <reference name="Amazon docs: sns subscribe" url="https://docs.aws.amazon.com/cli/latest/reference/sns/subscribe.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="4.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List all cloudwatch alarms and filter by alarm action (review &amp;quot;AlarmActions&amp;quot;: []):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudwatch describe-alarms --query 'MetricAlarms[*].{AlarmName:AlarmName, AlarmActions:AlarmActions, Dimensions:Dimensions}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List SNS topic attributes:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws sns list-topic-attributes --topic-arn &amp;lt;sns_topic_arn&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List SNS topic subscriptions (endpoint which receives messages captured by the SNS topic):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws sns list-subscriptions-by-topic --topic-arn &amp;lt;sns_topic_arn&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:50.073">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-CLOUDWATCH4" name="Create CloudWatch Alarms based on Anomaly Detection" issueId="" issueLink="" platform="" cost="1" risk="33" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create CloudWatch Alarms based on Anomaly Detection&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; When you enable anomaly detection for a metric, CloudWatch applies statistical and machine learning algorithms. These algorithms continuously analyze metrics of systems and applications, determine normal baselines, and surface anomalies with minimal user intervention.&lt;br&gt; You can create an alarm based on CloudWatch anomaly detection, which mines past metric data and creates a model of expected values. The expected values take into account the typical hourly, daily, and weekly patterns in the metric.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alarm based on anomaly detection&lt;/p&gt; 
&lt;p&gt;1. Open the CloudWatch console.&lt;/p&gt; 
&lt;p&gt;2. In the navigation pane, choose Alarms, Create Alarm.&lt;/p&gt; 
&lt;p&gt;3. Choose Select Metric and do one of the following:&lt;/p&gt; 
&lt;p&gt;- Choose the service namespace that contains the metric that you want. To narrow the choices, continue choosing options as they appear. When a list of metrics appears, select the check box next to the metric that you want.&lt;/p&gt; 
&lt;p&gt;- In the search box, enter the name of a metric, dimension, or resource ID and press Enter. Then choose one of the results and continue until a list of metrics appears. Select the check box next to the metric that you want.&lt;/p&gt; 
&lt;p&gt;4. Choose the Graphed metrics tab.&lt;/p&gt; 
&lt;p&gt;a. Under Statistic , choose one of the statistics or predefined percentiles, or specify a custom percentile (for example, p95.45).&lt;/p&gt; 
&lt;p&gt;b. Under Period, choose the evaluation period for the alarm. When evaluating the alarm, each period is aggregated into one data point. For anomaly detection alarms, the value must be one minute or longer.&lt;/p&gt; 
&lt;p&gt;You can also choose whether the y-axis legend appears on the left or right while you're creating the alarm. This preference is used only while you're creating the alarm.&lt;/p&gt; 
&lt;p&gt;c. Choose Select metric.&lt;/p&gt; 
&lt;p&gt;The Specify metric and conditions page appears, showing a graph and other information about the metric and statistic you have selected.&lt;/p&gt; 
&lt;p&gt;5. Under Conditions, specify the following:&lt;/p&gt; 
&lt;p&gt;a. Choose Anomaly detection.&lt;/p&gt; 
&lt;p&gt;If the model for this metric and statistic already exists, CloudWatch displays the anomaly detection band in the sample graph at the top of the screen. If the model does not already exist, the model will be generated when you finish creating the alarm. It takes up to 15 minutes for the actual anomaly detection band generated by the model to appear in the graph. Before that, the band you see is an approximation of the anomaly detection band. To see the graph in a longer time frame, choose Edit at the top right of the page.&lt;/p&gt; 
&lt;p&gt;b. For Whenever metric is, specify whether the metric must be greater than, lower than, or outside (in either direction) the band to trigger the alarm.&lt;/p&gt; 
&lt;p&gt;c. For Anomaly detection threshold, choose the number to use for the anomaly detection threshold. A higher number creates a thicker band of "normal" values that is more tolerant of metric changes, and a lower number creates a thinner band that will go to ALARM state with smaller metric deviations. The number does not have to be a whole number.&lt;/p&gt; 
&lt;p&gt;d. Choose Additional configuration. For Datapoints to alarm, specify how many evaluation periods (data points) must be in the ALARM state to trigger the alarm. If the two values here match, you create an alarm that goes to ALARM state if that many consecutive periods are breaching.&lt;/p&gt; 
&lt;p&gt;To create an M out of N alarm, specify a lower number for the first value than you specify for the second value. For more information, see Evaluating an Alarm.&lt;/p&gt; 
&lt;p&gt;e. For Missing data treatment, choose how to have the alarm behave when some data points are missing. For more information, see Configuring How CloudWatch Alarms Treat Missing Data.&lt;/p&gt; 
&lt;p&gt;f. If the alarm uses a percentile as the monitored statistic, a Percentiles with low samples box appears. Use it to choose whether to evaluate or ignore cases with low sample rates. If you choose ignore (maintain alarm state), the current alarm state is always maintained when the sample size is too low. For more information, see Percentile-Based CloudWatch Alarms and Low Data Samples.&lt;/p&gt; 
&lt;p&gt;6. Choose Next.&lt;/p&gt; 
&lt;p&gt;7. Under Notification, select an SNS topic to notify when the alarm is in ALARM state, OK state, or INSUFFICIENT_DATA state.&lt;/p&gt; 
&lt;p&gt;To have the alarm send multiple notifications for the same alarm state or for different alarm states, choose Add notification.&lt;/p&gt; 
&lt;p&gt;To have the alarm not send notifications, choose Remove.&lt;/p&gt; 
&lt;p&gt;8. To have the alarm perform EC2 actions when it changes state or create a Systems Manager OpsItem when it goes into ALARM state, choose the appropriate button and choose the alarm state and action to perform.&lt;/p&gt; 
&lt;p&gt;9. When finished, choose Next.&lt;/p&gt; 
&lt;p&gt;10. Enter a name and description for the alarm. The name must contain only ASCII characters. Then choose Next.&lt;/p&gt; 
&lt;p&gt;11. Under Preview and create, confirm that the information and conditions are what you want, then choose Create alarm.&lt;/p&gt; 
&lt;p&gt;Modifying an Anomaly Detection Model&lt;/p&gt; 
&lt;p&gt;Once you have created an alarm, you can adjust the anomaly detection model. You can exclude certain time periods from being used in the model creation. It is critical that you exclude unusual events such as system outages, deployments, and holidays from the training data. You can also specify whether to adjust the model for daylight savings time changes.&lt;/p&gt; 
&lt;p&gt;To adjust the anomaly detection model for an alarm&lt;/p&gt; 
&lt;p&gt;1. Open the CloudWatch console.&lt;/p&gt; 
&lt;p&gt;2. In the navigation pane, choose Alarms.&lt;/p&gt; 
&lt;p&gt;3. Choose the name of the alarm. Use the search box to find the alarm if necessary.&lt;/p&gt; 
&lt;p&gt;4. Choose View in metrics.&lt;/p&gt; 
&lt;p&gt;5. In the lower part of the screen, choose Edit model.&lt;/p&gt; 
&lt;p&gt;6. To exclude a time period from being used to produce the model, choose Add another time range to exclude from training. Then select or enter the days and times to exclude from training, and choose Apply.&lt;/p&gt; 
&lt;p&gt;7. If the metric is sensitive to daylight savings time changes, select the appropriate time zone in the Metric timezone box.&lt;/p&gt; 
&lt;p&gt;8. Choose Update.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; Using anomaly detection models for alarms incurs charges on your AWS account.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Creating a CloudWatch Alarm Based on Anomaly Detection" url="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Create_Anomaly_Detection_Alarm.html"/>
            <reference name="Using CloudWatch Anomaly Detection" url="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Anomaly_Detection.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you have created Anomaly Detection alarms properly.&lt;/p&gt;

	&lt;p&gt;After you create a model, it constantly updates itself, using the latest data from the metric.&lt;/p&gt;

	&lt;p&gt;After you enable anomaly detection on a metric, you can choose to exclude specified time periods of the metric from being used to train the model. This way, you can exclude deployments or other unusual events from being used for model training, ensuring the most accurate model is created.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:50.073">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-CLOUDWATCH2" name="Follow the security best practices for CloudWatch Synthetics Canaries" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Follow the security best practices for CloudWatch Synthetics Canaries&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can use Amazon CloudWatch Synthetics to create canaries, configurable scripts that run on a schedule, to monitor your endpoints and APIs. Canaries follow the same routes and perform the same actions as a customer, which makes it possible for you to continually verify your customer experience even when you don't have any customer traffic on your applications.&lt;br&gt; However, there are several security issues that you should consider when creating and running canaries in Synthetics. AWS recommends to follow the undermentioned security best practices.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; The following sections explain security issues that you should consider when creating and running canaries in Synthetics.&lt;/p&gt; 
&lt;p&gt;Use Secure Connections&lt;/p&gt; 
&lt;p&gt;Because canary code and the results from canary test runs can contain sensitive information, do not have your canary connect to endpoints over unencrypted connections. Always use encrypted connections, such as those that begin with https://.&lt;/p&gt; 
&lt;p&gt;Canary Naming Considerations&lt;/p&gt; 
&lt;p&gt;The Amazon Resource Name (ARN) of a canary is included in the user-agent header as a part of outbound calls made from the Puppeteer-driven Chromium browser that is included as a part of the CloudWatch Synthetics wrapper library. This helps identify CloudWatch Synthetics canary traffic and relate it back to the canaries that are making calls.&lt;/p&gt; 
&lt;p&gt;The canary ARN includes the canary name. Choose canary names that do not reveal proprietary information.&lt;/p&gt; 
&lt;p&gt;Additionally, be sure to point your canaries only at websites and endpoints that you control.&lt;/p&gt; 
&lt;p&gt;Secrets in Canary Code&lt;/p&gt; 
&lt;p&gt;AWS recommends that you don't include secrets, such as access keys or database credentials, in your canary source code.&lt;/p&gt; 
&lt;p&gt;Permissions Considerations&lt;/p&gt; 
&lt;p&gt;AWS recommends that you restrict access to resources that are created or used by CloudWatch Synthetics. Use tight permissions on the Amazon S3 buckets where canaries store test run results and other artifacts, such as logs and screenshots.&lt;/p&gt; 
&lt;p&gt;Similarly, keep tight permissions on the locations where your canary source code is stored, so that no user accidentally or maliciously deletes the Lambda layers or Lambda functions used for the canary.&lt;/p&gt; 
&lt;p&gt;To help make sure you run the canary code you intend, you can use object versioning on the Amazon S3 bucket where your canary code is stored. Then when you specify this code to run as a canary, you can include the object versionId as part of the path, as in the following examples:&lt;/p&gt; 
&lt;p&gt;https://bucket.s3.amazonaws.com/path/object.zip?versionId=version-id&lt;br&gt; https://s3.amazonaws.com/bucket/path/object.zip?versionId=version-id&lt;br&gt; https://bucket.s3-region.amazonaws.com/path/object.zip?versionId=version-id&lt;/p&gt; 
&lt;p&gt;Stack Traces and Exception Messages&lt;/p&gt; 
&lt;p&gt;By default, CloudWatch Synthetics canaries capture any exception thrown by your canary script, no matter whether the script is custom or is from a blueprint. CloudWatch Synthetics logs both the exception message and the stack trace to three locations:&lt;/p&gt; 
&lt;p&gt;- Back into the CloudWatch Synthetics service to speed up debugging when you describe test runs&lt;/p&gt; 
&lt;p&gt;- Into CloudWatch Logs according to the configuration that your Lambda functions are created with&lt;/p&gt; 
&lt;p&gt;- Into the Synthetics log file, which is a plaintext file that is uploaded to the Amazon S3 location specified by the value you set for the resultsLocation of the canary&lt;/p&gt; 
&lt;p&gt;If you want to send and store less information, you can capture exceptions before they return to the CloudWatch Synthetics wrapper library.&lt;/p&gt; 
&lt;p&gt;Scope Your IAM Roles Narrowly&lt;/p&gt; 
&lt;p&gt;AWS recommends that you do not configure your canary to visit potentially malicious URLs or endpoints. Pointing your Canary to untrusted or unknown websites or endpoints could expose your Lambda function code to malicious user's scripts. Assuming a malicious website can break out of Chromium, it could have access to your Lambda code in a similar way to if you connected to it using an internet browser.&lt;/p&gt; 
&lt;p&gt;Run your Lambda function with an IAM execution role that has scoped-down permissions. This way, if your Lambda function is compromised by a malicious script, it is limited in the actions it can take when running as your canary's AWS account.&lt;/p&gt; 
&lt;p&gt;When you use the CloudWatch console to create a canary, it is created with a scoped-down IAM execution role.&lt;/p&gt; 
&lt;p&gt;Header Logging&lt;/p&gt; 
&lt;p&gt;By default, canary header logging logs only the request URL, response code, and response status. Within your canary script, you can customize the logging to log more or less information.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security Considerations for Synthetics Canaries" url="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/servicelens_canaries_security.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you are following security best practices for CloudWatch Synthetics Canaries.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:50.073">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.1" name="Tag all resources" issueId="" issueLink="" platform="" cost="0" risk="15" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
 &lt;b&gt;Description&lt;/b&gt;:
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Tags enable customers to categorize AWS resources in different ways, for example, by purpose, owner, or environment.
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Each tag consists of a key and an optional value, both of which customer's define.
  You should define a set of tags for the following items to help you track each instance's owner and operating environment, cost center, and other items.
&lt;/div&gt;
&lt;div&gt;
 &lt;ol&gt;
  &lt;li&gt;Amazon EC2 instances&lt;/li&gt;
  &lt;li&gt;ELB&lt;/li&gt;
  &lt;li&gt;EBS Volumes&lt;/li&gt;
  &lt;li&gt;S3 Buckets&lt;/li&gt;
 &lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  A resource may have up to 10 tags associated with key &amp;amp; value such as:
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Key=tier, Value=app&lt;/li&gt;
  &lt;li&gt;Key=environment, Value=production&lt;/li&gt;
  &lt;li&gt;Key=costcenter, Value=sales&lt;/li&gt;
 &lt;/ul&gt;
 &lt;div&gt;
  &lt;b&gt;Remediation:&lt;/b&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;&lt;br&gt;&lt;/b&gt;
  Tag all your 3 tier Web Application resources based on their tier membership (Web, App, Data), and your organizational requirements.
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Cloud Compliance" url="https://d0.awsstatic.com/whitepapers/compliance/AWS_Anitian_Wookbook_PCI_Cloud_Compliance.pdf"/>
            <reference name="Resource groups and tagging" url="https://aws.amazon.com/blogs/aws/resource-groups-and-tagging/"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify tags are being used.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:50.073">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-CLOUDWATCH6" name="Use CloudWatch Agent to collect system-level metrics" issueId="" issueLink="" platform="" cost="0" risk="33" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use CloudWatch Agent to collect system-level metrics&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; The unified CloudWatch agent enables you to do the following:&lt;/p&gt; 
&lt;p&gt;- Collect internal system-level metrics from Amazon EC2 instances across operating systems. The metrics can include in-guest metrics, in addition to the metrics for EC2 instances. The additional metrics that can be collected are listed in Metrics Collected by the CloudWatch Agent.&lt;/p&gt; 
&lt;p&gt;- Collect system-level metrics from on-premises servers. These can include servers in a hybrid environment as well as servers not managed by AWS.&lt;/p&gt; 
&lt;p&gt;- Retrieve custom metrics from your applications or services using the StatsD and collectd protocols. StatsD is supported on both Linux servers and servers running Windows Server. collectd is supported only on Linux servers.&lt;/p&gt; 
&lt;p&gt;- Collect logs from Amazon EC2 instances and on-premises servers, running either Linux or Windows Server.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Installation Process Overview&lt;/p&gt; 
&lt;p&gt;You can download and install the CloudWatch agent manually using the command line, or you can integrate it with SSM. The general flow of installing the CloudWatch agent using either method is as follows:&lt;/p&gt; 
&lt;p&gt;1. Create IAM roles or users that enable the agent to collect metrics from the server and optionally to integrate with AWS Systems Manager.&lt;/p&gt; 
&lt;p&gt;2. Download the agent package.&lt;/p&gt; 
&lt;p&gt;3. Modify the CloudWatch agent configuration file and specify the metrics that you want to collect.&lt;/p&gt; 
&lt;p&gt;4. Install and start the agent on your servers. As you install the agent on an EC2 instance, you attach the IAM role that you created in step 1. As you install the agent on an on-premises server, you specify a named profile that contains the credentials of the IAM user that you created in step 1.&lt;/p&gt; 
&lt;p&gt;For further information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; Please follow Reference URL to check for Supported Operating Systems.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Collecting Metrics and Logs from Amazon EC2 Instances and On-Premises Servers with the CloudWatch Agent" url="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Install-CloudWatch-Agent.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify That the CloudWatch Agent Is Running&lt;/p&gt;

	&lt;p&gt;You can query the CloudWatch agent to find whether it's running or stopped. You can use AWS Systems Manager to do this remotely. You can also use the command line, but only to check the local server.&lt;/p&gt;

	&lt;p&gt;To query the status of the CloudWatch agent using Run Command&lt;/p&gt;

	&lt;p&gt;1. Open the Systems Manager console at https://console.aws.amazon.com/systems-manager/.&lt;/p&gt;

	&lt;p&gt;2. In the navigation pane, choose Run Command.&lt;/p&gt;

	&lt;p&gt;&lt;del&gt;or&lt;/del&gt;&lt;/p&gt;

	&lt;p&gt;If the AWS Systems Manager home page opens, scroll down and choose Explore Run Command.&lt;/p&gt;

	&lt;p&gt;3. Choose Run command.&lt;/p&gt;

	&lt;p&gt;4. In the Command document list, choose the button next to AmazonCloudWatch-ManageAgent.&lt;/p&gt;

	&lt;p&gt;5. In the Action list, choose status.&lt;/p&gt;

	&lt;p&gt;6. For Optional Configuration Source choose default and keep Optional Configuration Location blank.&lt;/p&gt;

	&lt;p&gt;7. In the Target area, choose the instance to check.&lt;/p&gt;

	&lt;p&gt;8. Choose Run.&lt;/p&gt;

	&lt;p&gt;If the agent is running, the output resembles the following.&lt;/p&gt;

	&lt;p&gt;{
       "status": "running",
       "starttime": "2017-12-12T18:41:18",
       "version": "1.73.4"&lt;br /&gt;
}&lt;/p&gt;

	&lt;p&gt;If the agent is stopped, the "status" field displays "stopped".&lt;/p&gt;


	&lt;p&gt;To query the status of the CloudWatch agent locally using the command line&lt;/p&gt;

	&lt;p&gt;- On a Linux server, enter the following:&lt;/p&gt;

	&lt;p&gt;sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -m ec2 -a status&lt;/p&gt;

	&lt;p&gt;- On a server running Windows Server, enter the following in PowerShell as an administrator:&lt;/p&gt;

	&lt;p&gt;&amp;amp; $Env:ProgramFiles\Amazon\AmazonCloudWatchAgent\amazon-cloudwatch-agent-ctl.ps1 -m ec2 -a status&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:50.073">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-CLOUDWATCH5" name="Use CloudWatch metric streams" issueId="" issueLink="" platform="" cost="0" risk="33" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use CloudWatch metric streams&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can use metric streams to continually stream CloudWatch metrics to a destination of your choice, with near-real-time delivery and low latency. Supported destinations include AWS destinations such as Amazon Simple Storage Service and several third-party service provider destinations.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; How to use the CloudWatch console to set up a metric stream to another AWS service&lt;/p&gt; 
&lt;p&gt;When you use the console to set up a metric stream, you have the option of choosing the Quick S3 Setup. This method works well if want the final output as JSON or to be queried by Amazon Athena. If you want the final format to be Parquet format or Optimized Row Columnar (ORC), you should create your own Kinesis Data Firehose delivery stream and choose Select an existing Firehose owned by your account instead of choosing Quick S3 Setup.&lt;/p&gt; 
&lt;p&gt;To set up a metric stream to an AWS service&lt;/p&gt; 
&lt;p&gt;1. Open the CloudWatch console.&lt;/p&gt; 
&lt;p&gt;2. In the navigation pane, choose Streams, Create stream.&lt;/p&gt; 
&lt;p&gt;3. Choose the CloudWatch metric namespaces to include in the metric stream.&lt;/p&gt; 
&lt;p&gt;- To include all or most of your metric namespaces in the metric stream, choose All metrics.&lt;/p&gt; 
&lt;p&gt;Then, if you want to exclude some metric namespaces from the stream, choose Exclude metric namespaces and select the namespaces to exclude.&lt;/p&gt; 
&lt;p&gt;- To include only a few metric namespaces in the metric stream, choose Selected namespaces and then select the namespaces to include.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; Consider carefully whether to stream all metrics, because the more metrics that you stream the higher your metric stream charges will be.&lt;/p&gt; 
&lt;p&gt;4. Choose one of the following:&lt;/p&gt; 
&lt;p&gt;- For a quick setup, choose Quick S3 setup. CloudWatch will create all necessary resources including the Kinesis Data Firehose delivery stream and the necessary IAM roles. The default format for this option is JSON, but you can change the format later in this procedure.&lt;/p&gt; 
&lt;p&gt;- To use a Kinesis Data Firehose delivery stream that already exists, choose Select an existing Firehose owned by your account. The Kinesis Data Firehose delivery stream must be in the same account. The default format for this option is OpenTelemetry, but you can change the format later in this procedure.&lt;/p&gt; 
&lt;p&gt;Then select the Kinesis Data Firehose delivery stream to use under Select your Kinesis Data Firehose delivery stream.&lt;/p&gt; 
&lt;p&gt;5. (Optional) If you're using Quick S3 Setup, you can choose Select existing resources to use an existing S3 bucket or existing IAM roles instead of having CloudWatch create new ones for you.&lt;/p&gt; 
&lt;p&gt;6. (Optional) If you're using Select an existing Firehose owned by your account, you can choose Select existing service role to use an existing IAM role instead of having CloudWatch create a new one for you.&lt;/p&gt; 
&lt;p&gt;7. (Optional) To change the output format from the default format for your scenario, choose Change output format. The supported formats are JSON and OpenTelemetry 0.7.0.&lt;/p&gt; 
&lt;p&gt;8. (Optional) Customize the name of the new metric stream under Metric stream name.&lt;/p&gt; 
&lt;p&gt;9. Choose Create metric stream.&lt;/p&gt; 
&lt;p&gt;Setting up a metric stream to a third-party solution&lt;/p&gt; 
&lt;p&gt;To set up a CloudWatch metric stream to stream metrics to a third-party solution, follow the instructions provided by that third-party provider.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; Consider carefully whether to stream all metrics, because the more metrics that you stream the higher your metric stream charges will be.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Metric stream operation and maintenance" url="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-operation.html"/>
            <reference name="Using metric streams" url="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Metric-Streams.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Metric streams are always in one of two states, Running or Stopped.&lt;/p&gt;

	&lt;p&gt;Running - The metric stream is running correctly. There might not be any metric data streamed to the destination because of the filters on the stream.&lt;/p&gt;

	&lt;p&gt;Stopped - The metric stream has been explicitly stopped by someone, and not because of an error. It might be useful to stop your stream to temporarily pause the streaming of data without deleting the stream.&lt;/p&gt;

	&lt;p&gt;If you stop and restart a metric stream, the metric data that was published to CloudWatch while the metric stream was stopped is not backfilled to the metric stream.&lt;/p&gt;

	&lt;p&gt;If you change the output format of a metric stream, in certain cases you might see a small amount of metric data written to the destination in both the old format and the new format. To avoid this situation, you can create a new Kinesis Data Firehose delivery stream with the same configuration as your current one, then change to the new Kinesis Data Firehose delivery stream and change the output format at the same time. This way, the Kinesis records with different output format are stored on Amazon S3 in separate objects. Later, you can direct the traffic back to the original Kinesis Data Firehose delivery stream and delete the second delivery stream.&lt;/p&gt;

	&lt;p&gt;To view, edit, stop, and start your metric streams&lt;/p&gt;

	&lt;p&gt;1. Open the CloudWatch console.&lt;/p&gt;

	&lt;p&gt;2. In the navigation pane, choose Streams.&lt;/p&gt;

	&lt;p&gt;The list of streams appears, and the Status column displays whether each stream is running or stopped.&lt;/p&gt;

	&lt;p&gt;3. To stop or start a metric stream, select the stream and choose Stop or Start.&lt;/p&gt;

	&lt;p&gt;4. To see the details about a metric stream, select the stream and choose View details.&lt;/p&gt;

	&lt;p&gt;5. To change the stream's output format, filters, destination Kinesis Data Firehose stream, or roles, choose Edit and make the changes that you want.&lt;/p&gt;

	&lt;p&gt;If you change the filters, there might be some gaps in the metric data during the transition.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:50.073">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC5" name="Use VPC security groups" issueId="" issueLink="" platform="" cost="0" risk="15" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Use VPC security groups&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;A security group acts as a virtual firewall for your instance to control inbound and outbound traffic. When you launch an instance in a VPC, you can assign up to five security groups to the instance. Security groups act at the instance level, not the subnet level. Therefore, each instance in a subnet in your VPC can be assigned to a different set of security groups.&lt;/p&gt;&lt;p&gt;If you launch an instance using the Amazon EC2 API or a command line tool and you don't specify a security group, the instance is automatically assigned to the default security group for the VPC. If you launch an instance using the Amazon EC2 console, you have an option to create a new security group for the instance.&lt;/p&gt;&lt;p&gt;For each security group, you add rules that control the inbound traffic to instances, and a separate set of rules that control the outbound traffic.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;To create a security group using the console&lt;/p&gt;&lt;p&gt;Open the Amazon VPC console.&lt;/p&gt;&lt;p&gt;In the navigation pane, choose Security Groups.&lt;/p&gt;&lt;p&gt;Choose Create Security Group.&lt;/p&gt;&lt;p&gt;Enter a name for the security group (for example, my-security-group) and provide a description. Select the ID of your VPC from the VPC menu and choose Yes, Create.&lt;/p&gt;&lt;p&gt;To create a security group use the command line&lt;/p&gt;&lt;p&gt;create-security-group (AWS CLI)&lt;/p&gt;&lt;p&gt;New-EC2SecurityGroup (AWS Tools for Windows PowerShell)&lt;/p&gt;&lt;p&gt;Describe one or more security groups using the command line&lt;/p&gt;&lt;p&gt;describe-security-groups (AWS CLI)&lt;/p&gt;&lt;p&gt;Get-EC2SecurityGroup (AWS Tools for Windows PowerShell)&lt;/p&gt;&lt;p&gt;By default, new security groups start with only an outbound rule that allows all traffic to leave the instances. You must add rules to enable any inbound traffic or to restrict the outbound traffic.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security groups for your VPC" url="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;Review your security groups using the console:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1. Open the Amazon VPC console.&lt;/p&gt;&lt;p&gt;2. In the navigation pane, choose Security Groups.&lt;/p&gt;&lt;p&gt;3. Select a security group to see the details.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:50.073">
              <output/>
            </source>
            <references>
              <reference name="Security groups for your VPC" url="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="AWS-CLOUDWATCH1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-CLOUDWATCH1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.4">
                  <countermeasures>
                    <countermeasure ref="AWS-CLOUDWATCH2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-CLOUDWATCH2" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="OWASP A10:2017" issueId="" issueLink="" name="Exploitation of insufficient logging and monitoring" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AWS-CLOUDWATCH4" mitigation="25"/>
                    <countermeasure ref="AWS-CLOUDWATCH5" mitigation="25"/>
                    <countermeasure ref="AWS-CLOUDWATCH6" mitigation="25"/>
                    <countermeasure ref="aws-tier-4.1" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-CLOUDWATCH4" mitigation="25"/>
                <countermeasure ref="AWS-CLOUDWATCH5" mitigation="25"/>
                <countermeasure ref="AWS-CLOUDWATCH6" mitigation="25"/>
                <countermeasure ref="aws-tier-4.1" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-NET-01">
                  <countermeasures>
                    <countermeasure ref="AWS-CLOUDWATCH7" mitigation="33"/>
                    <countermeasure ref="AWS-VPC5" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.1" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-CLOUDWATCH7" mitigation="33"/>
                <countermeasure ref="AWS-VPC5" mitigation="34"/>
                <countermeasure ref="aws-tier-5.1" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="6ee44c84-2c00-4ce4-94e2-1196b98dfa36" diagramComponentId="c3b2ce01-7fb0-41ee-b50c-ee31c730824d" ref="b8cad567-f753-4680-8199-f1d43aa4435b" name="AWS DynamoDB" desc="" library="Hydras-AWS-Foundation" parentComponentRef="c50d2813-e2cc-40f2-b4e9-4363485a5dbb" componentDefinitionRef="dynamodb" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-319" name="Cleartext Transmission of Sensitive Information" state="0" impact="100" issueId="" issueLink="">
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.

Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.839">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.839">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.838">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.4" name="Sensitive data is accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data is not encrypted and is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.839">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.1" name="There is not a recover or backup mechanism" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;There are not any processes or mechanisms to regularly save the data to another place in order to have an older version of the data to restore in case of loss. Consequently, the data cannot be easily recovered or they cannot be recovered at all.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.839">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-01" name="Unauthorized connection attempts are allowed on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To avoid this, access to network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.839">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AWS-DYNAMODB3" name="Connect to AWS DynamoDB using an AWS secure connection option" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Connect to AWS DynamoDB using an AWS secure connection option&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  You have two connectivity options between your private network and AWS: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - An AWS Site-to-Site VPN connection. 
&lt;/div&gt; 
&lt;div&gt;
  By default, instances that you launch into an Amazon VPC can't communicate with your own (remote) network. You can enable access to your remote network from your VPC by creating an AWS Site-to-Site VPN (Site-to-Site VPN) connection, and configuring routing to pass traffic through the connection. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - An AWS Direct Connect connection. 
&lt;/div&gt; 
&lt;div&gt;
  AWS Direct Connect links your internal network to an AWS Direct Connect location over a standard Ethernet fiber-optic cable. One end of the cable is connected to your router, the other to an AWS Direct Connect router. With this connection, you can create virtual interfaces directly to public AWS services (for example, to Amazon S3) or to Amazon VPC, bypassing internet service providers in your network path. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  AWS Site-to-Site VPN connection 
&lt;/div&gt; 
&lt;div&gt;
  You can create, access, and manage your Site-to-Site VPN resources using any of the following interfaces: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Management Console- Provides a web interface that you can use to access your Site-to-Site VPN resources. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Command Line Interface (AWS CLI) - Provides commands for a broad set of AWS services, including Amazon VPC, and is supported on Windows, macOS, and Linux. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS SDKs - Provide language-specific APIs and takes care of many of the connection details, such as calculating signatures, handling request retries, and error handling. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Query API- Provides low-level API actions that you call using HTTPS requests. Using the Query API is the most direct way to access Amazon VPC, but it requires that your application handle low-level details such as generating the hash to sign the request, and error handling. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Direct Connect connection 
&lt;/div&gt; 
&lt;div&gt;
  Getting started with AWS Direct Connect 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use the AWS Direct Connect tab on the AWS Management Console to create a new connection. Then you will change the region to the region you wish to use. When requesting a connection, you will be asked to select the AWS Direct Connect location you wish to use, the number of ports, and the port speed. You will also have the opportunity to request to have an AWS Direct Connect Partner contact you if you need assistance extending your office or data center network to the AWS Direct Connect location. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Internetwork Traffic Privacy" url="https://docs.aws.amazon.com/amazonglacier/latest/dev/InternetworkTrafficPrivacy.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  AWS Site-to-Site VPN 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  After you create the AWS Site-to-Site VPN connection and configure the customer gateway, you can launch an instance and test the connection by pinging the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Before you begin, make sure of the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use an AMI that responds to ping requests. AWS recommends that you use one of the Amazon Linux AMIs. 
&lt;/div&gt; 
&lt;div&gt;
  Configure any security group or network ACL in your VPC that filters traffic to the instance to allow inbound and outbound ICMP traffic. 
&lt;/div&gt; 
&lt;div&gt;
  If you are using instances running Windows Server, connect to the instance and enable inbound ICMPv4 on the Windows firewall in order to ping the instance. 
&lt;/div&gt; 
&lt;div&gt;
  (Static routing) Ensure that the customer gateway device has a static route to your VPC, and that your VPN connection has a VPN connection has a static route so that traffic can get back to your customer gateway device. 
&lt;/div&gt; 
&lt;div&gt;
  (Dynamic routing) Ensure that the BGP status on your customer gateway device is established. It takes approximately 30 seconds for a BGP peering session to be established. Ensure that routes are advertised with BGP correctly and showing in the subnet route table, so that traffic can get back to your customer gateway. Make sure that both tunnels are configured with BGP routing. 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that you have configured routing in your subnet route tables for the VPN connection. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To test end-to-end connectivity 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Open the Amazon EC2 console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. On the dashboard, choose Launch Instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. On the Choose an Amazon Machine Image (AMI) page, choose an AMI, and then choose Select. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Choose an instance type, and then choose Next: Configure Instance Details. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. On the Configure Instance Details page, for Network, select your VPC. For Subnet, select your subnet. Choose Next until you reach the Configure Security Group page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. Select the Select an existing security group option, and then select the group that you configured earlier. Choose Review and Launch. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Review the settings that you've chosen. Make any changes that you need, and then choose Launch to select a key pair and launch the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  8. After the instance is running, get its private IP address (for example, 10.0.0.4). The Amazon EC2 console displays the address as part of the instance's details. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  9. From a computer in your network that is behind the customer gateway device, use the ping command with the instance's private IP address. A successful response is similar to the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  ping 10.0.0.4 
&lt;/div&gt; 
&lt;div&gt;
  Pinging 10.0.0.4 with 32 bytes of data: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Reply from 10.0.0.4: bytes=32 time&amp;lt;1ms TTL=128 
&lt;/div&gt; 
&lt;div&gt;
  Reply from 10.0.0.4: bytes=32 time&amp;lt;1ms TTL=128 
&lt;/div&gt; 
&lt;div&gt;
  Reply from 10.0.0.4: bytes=32 time&amp;lt;1ms TTL=128 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ping statistics for 10.0.0.4: 
&lt;/div&gt; 
&lt;div&gt;
  Packets: Sent = 3, Received = 3, Lost = 0 (0% loss), 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Approximate round trip times in milliseconds: 
&lt;/div&gt; 
&lt;div&gt;
  Minimum = 0ms, Maximum = 0ms, Average = 0ms 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To test tunnel failover, you can temporarily disable one of the tunnels on your customer gateway device, and repeat the above step. You cannot disable a tunnel on the AWS side of the VPN connection. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can use SSH or RDP to connect to your instances in the VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Direct Connect Failover Test 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The AWS Direct Connect Resiliency Toolkit resiliency models are designed to ensure that you have the appropriate number of virtual interface connections in multiple locations. After you complete the wizard, use the AWS Direct Connect Resiliency Toolkit failover test to bring down the BGP peering session in order to verify that traffic routes to one of your redundant virtual interfaces, and meets your resiliency requirements. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use the test to make sure that traffic routes over redundant virtual interfaces when a virtual interface is out of service. You start the test by selecting a virtual interface, BGP peering session, and how long to run the test. AWS places the selected virtual interface BGP peering session in the down state. When the interface is in this state, traffic should go over a redundant virtual interface. If your configuration does not contain the appropriate redundant connections, the BGP peering session fails, and traffic does not get routed. When the test completes, or you manually stop the test, AWS restores the BGP session. After the test is complete, you can use the AWS Direct Connect Resiliency Toolkit to adjust your configuration. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.752">
              <output/>
            </source>
            <references>
              <reference name="AWS Direct Connect Failover Test" url="https://docs.aws.amazon.com/directconnect/latest/UserGuide/resilency_failover.html"/>
              <reference name="Testing the Site-to-Site VPN connection" url="https://docs.aws.amazon.com/vpn/latest/s2svpn/HowToTestEndToEnd_Linux.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-DYNAMODB1" name="Control access to AWS DynamoDB resources using IAM policies" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
  Control access to AWS DynamoDB resources using IAM policies 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  You can use AWS Identity and Access Management (IAM) to manage access permissions and implement security policies for both Amazon DynamoDB and DynamoDB Accelerator (DAX). 
&lt;/div&gt; 
&lt;div&gt;
  Keep in mind that DAX and DynamoDB have separate access control mechanisms. Both services use AWS Identity and Access Management (IAM) to implement their respective security policies, but the security models for DAX and DynamoDB are different. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In case you are using DynamoDB Accelerator (DAX), please see also DAX Access Control reference URL. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Using Identity-Based Policies (IAM Policies) for Amazon DynamoDB 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The following shows an example of a permissions policy. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "Version": "2012-10-17", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "Statement": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Sid": "DescribeQueryScanBooksTable", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Effect": "Allow", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Action": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "dynamodb:DescribeTable", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "dynamodb:Query", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "dynamodb:Scan" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ], 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Resource": "arn:aws:dynamodb:us-west-2:account-id:table/Books" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The policy has one statement that grants permissions for three DynamoDB actions (dynamodb:DescribeTable, dynamodb:Query, and dynamodb:Scan) on a table in the us-west-2 Region, which is owned by the AWS account specified by account-id. The Amazon Resource Name (ARN) in the Resource value specifies the table to which the permissions apply. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Permissions Required to Use the Amazon DynamoDB Console 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For a user to work with the DynamoDB console, that user must have a minimum set of permissions that allow the user to work with the DynamoDB resources for their AWS account. In addition to these DynamoDB permissions, the console requires permissions from the following services: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Amazon CloudWatch permissions to display metrics and graphs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - AWS Data Pipeline permissions to export and import DynamoDB data. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - AWS Identity and Access Management permissions to access roles necessary for exports and imports. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Amazon Simple Notification Service permissions to notify you whenever a CloudWatch alarm is triggered. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - AWS Lambda permissions to process DynamoDB Streams records. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you create an IAM policy that is more restrictive than the minimum required permissions, the console won't function as intended for users with that IAM policy. To ensure that those users can still use the DynamoDB console, also attach the AmazonDynamoDBReadOnlyAccess managed policy to the user. 
&lt;/div&gt; 
&lt;div&gt;
  You don't need to allow minimum console permissions for users that are making calls only to the AWS CLI or the Amazon DynamoDB API. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Managed (Predefined) Policies for Amazon DynamoDB 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS addresses many common use cases by providing standalone IAM policies that are created and administered by AWS. These AWS managed policies grant necessary permissions for common use cases so that you can avoid having to investigate what permissions are needed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The following AWS managed policies, which you can attach to users in your account, are specific to DynamoDB and are grouped by use case scenario: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - AmazonDynamoDBReadOnlyAccess - Grants read-only access to DynamoDB resources by using the AWS Management Console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - AmazonDynamoDBFullAccess - Grants full access to DynamoDB resources by using the AWS Management Console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - AmazonDynamoDBFullAccesswithDataPipeline - Grants full access to DynamoDB resources, including export and import using AWS Data Pipeline, by using AWS Management Console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS does not recommend using these AWS managed policies for production databases. Instead, you should create your own custom IAM policies to allow permissions for DynamoDB actions and resources following the least privilege model. You can attach these custom policies to the IAM users or groups that require those permissions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="DAX Access Control" url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAX.access-control.html"/>
            <reference name="Using Identity-Based Policies (IAM Policies) for Amazon DynamoDB" url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/using-identity-based-policies.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.751">
              <output/>
            </source>
            <references>
              <reference name="Testing IAM policies with the IAM policy simulator" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-DYNAMODB5" name="Enable DAX encryption at rest if used" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable DAX encryption at rest if used 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Amazon DynamoDB Accelerator (DAX) encryption at rest provides an additional layer of data protection by helping secure your data from unauthorized access to the underlying storage. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Enabling Encryption at Rest Using the AWS Management Console 
&lt;/div&gt; 
&lt;div&gt;
  Follow these steps to enable DAX encryption at rest on a table using the console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To enable DAX encryption at rest 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Sign in to the AWS Management Console and open the DynamoDB console at https://console.aws.amazon.com/dynamodb/. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the navigation pane on the left side of the console, under DAX, choose Clusters. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Choose Create cluster. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. For Cluster name, enter a short name for your cluster. Choose the node type for all of the nodes in the cluster, and for the cluster size, use 3 nodes. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. In Encryption, make sure that Enable encryption is selected. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. After choosing the IAM role, subnet group, security groups, and cluster settings, choose Launch cluster. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="DAX Encryption at Rest" url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAXEncryptionAtRest.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  To confirm that the cluster is encrypted, check the cluster details under the Clusters pane. Encryption should be ENABLED. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.753">
              <output/>
            </source>
            <references>
              <reference name="DAX Encryption at Rest" url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAXEncryptionAtRest.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-DYNAMODB7" name="Monitor AWS DynamoDB with Cloudwatch" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Monitor AWS DynamoDB with Cloudwatch 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  You can monitor Amazon DynamoDB using CloudWatch, which collects and processes raw data from DynamoDB into readable, near real-time metrics. These statistics are retained for a period of time, so that you can access historical information for a better perspective on how your web application or service is performing. By default, DynamoDB metric data is sent to CloudWatch automatically. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In case you are using DAX you can monitor it using Amazon Cloudwatch, too. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  You can create a CloudWatch alarm that sends an Amazon SNS message when the alarm changes state. An alarm watches a single metric over a time period you specify, and performs one or more actions based on the value of the metric relative to a given threshold over a number of time periods. The action is a notification sent to an Amazon SNS topic or Auto Scaling policy. Alarms invoke actions for sustained state changes only. CloudWatch alarms do not invoke actions simply because they are in a particular state; the state must have changed and been maintained for a specified number of periods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For examples and their test steps for AWS DynamoDB and Amazon DynamoDB Accelerator (DAX) please go to the Test tab. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Creating CloudWatch Alarms to Monitor DAX" url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/dax-creating-alarms.html"/>
            <reference name="Creating CloudWatch Alarms to Monitor DynamoDB" url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/creating-alarms.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Alarm examples 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS DynamoDB 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  How can I be notified before I consume my entire read capacity? 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Create an Amazon SNS topic, arn:aws:sns:us-east-1:123456789012:capacity-alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Create the alarm. In this example, we assume a provisioned capacity of five read capacity units. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch put-metric-alarm \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-name ReadCapacityUnitsLimitAlarm \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-description "Alarm when read capacity reaches 80% of my provisioned read capacity" \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --namespace AWS/DynamoDB \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --metric-name ConsumedReadCapacityUnits \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --dimensions Name=TableName,Value=myTable \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --statistic Sum \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --threshold 240 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --comparison-operator GreaterThanOrEqualToThreshold \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --period 60 \&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --evaluation-periods 1 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-actions arn:aws:sns:us-east-1:123456789012:capacity-alarm 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Test the alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch set-alarm-state --alarm-name ReadCapacityUnitsLimitAlarm --state-reason "initializing" --state-value OK 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp;Prompt&amp;gt;aws cloudwatch set-alarm-state --alarm-name ReadCapacityUnitsLimitAlarm --state-reason "initializing" --state-value ALARM 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note 
&lt;/div&gt; 
&lt;div&gt;
  The alarm is activated whenever the consumed read capacity is at least 4 units per second (80% of provisioned read capacity of 5) for 1 minute (60 seconds). So the threshold is 240 read capacity units (4 units/sec * 60 seconds). Any time the read capacity is updated you should update the alarm calculations appropriately. You can avoid this process by creating alarms through the DynamoDB Console. In this way, the alarms are automatically updated for you. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  How can I be notified if any requests exceed the provisioned throughput quotas of a table? 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Create an Amazon SNS topic, arn:aws:sns:us-east-1:123456789012:requests-exceeding-throughput. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Create the alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch put-metric-alarm \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-name RequestsExceedingThroughputAlarm\ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-description "Alarm when my requests are exceeding provisioned throughput quotas of a table" \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --namespace AWS/DynamoDB \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --metric-name ThrottledRequests \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --dimensions Name=TableName,Value=myTable \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --statistic Sum \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --threshold 0 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --comparison-operator GreaterThanThreshold \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --period 300 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --unit Count \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --evaluation-periods 1 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-actions arn:aws:sns:us-east-1:123456789012:requests-exceeding-throughput 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Test the alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch set-alarm-state --alarm-name RequestsExceedingThroughputAlarm --state-reason "initializing" --state-value OK 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch set-alarm-state --alarm-name RequestsExceedingThroughputAlarm --state-reason "initializing" --state-value ALARM 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  How can I be notified if any system errors occurred? 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Create an Amazon SNS topic, arn:aws:sns:us-east-1:123456789012:notify-on-system-errors. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Create the alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch put-metric-alarm \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-name SystemErrorsAlarm \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-description "Alarm when system errors occur" \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --namespace AWS/DynamoDB \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --metric-name SystemErrors \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --dimensions Name=TableName,Value=myTable \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --statistic Sum \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --threshold 0 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --comparison-operator GreaterThanThreshold \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --period 60 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --unit Count \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --evaluation-periods 1 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-actions arn:aws:sns:us-east-1:123456789012:notify-on-system-errors&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Test the alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch set-alarm-state --alarm-name SystemErrorsAlarm --state-reason "initializing" --state-value OK 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch set-alarm-state --alarm-name SystemErrorsAlarm --state-reason "initializing" --state-value ALARM 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Amazon DynamoDB Accelerator (DAX) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  How Can I Be Notified of Query Cache Misses? 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Create an Amazon SNS topic, arn:aws:sns:us-west-2:522194210714:QueryMissAlarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Create the alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch put-metric-alarm \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-name QueryCacheMissesAlarm&amp;nbsp; \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-description "Alarm over query cache misses" \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --namespace AWS/DAX \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --metric-name QueryCacheMisses&amp;nbsp; \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --dimensions Name=ClusterID,Value=myCluster \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --statistic Sum \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --threshold 8 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --comparison-operator GreaterThanOrEqualToThreshold \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --period 60 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --evaluation-periods 1 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-actions arn:aws:sns:us-west-2:522194210714:QueryMissAlarm 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Test the alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch set-alarm-state --alarm-name QueryCacheMissesAlarm --state-reason "initializing" --state-value OK 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp;Prompt&amp;gt;aws cloudwatch set-alarm-state --alarm-name QueryCacheMissesAlarm --state-reason "initializing" --state-value ALARM 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note 
&lt;/div&gt; 
&lt;div&gt;
  You can increase or decrease the threshold to one that makes sense for your application. You can also use CloudWatch Metric Math to define a cache miss rate metric and set an alarm over that metric. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  How Can I Be Notified If Requests Cause Any Internal Error in the Cluster? 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Create an Amazon SNS topic, arn:aws:sns:us-west-2:123456789012:notify-on-system-errors. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Create the alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch put-metric-alarm \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-name FaultRequestCountAlarm \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-description "Alarm when a request causes an internal error" \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --namespace AWS/DAX \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --metric-name FaultRequestCount \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --dimensions Name=ClusterID,Value=myCluster \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --statistic Sum \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --threshold 0 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --comparison-operator GreaterThanThreshold \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --period 60 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --unit Count \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --evaluation-periods 1 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-actions arn:aws:sns:us-east-1:123456789012:notify-on-system-errors&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Test the alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch set-alarm-state --alarm-name FaultRequestCountAlarm --state-reason "initializing" --state-value OK 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch set-alarm-state --alarm-name QueryCacheMissesAlarm --state-reason "initializing" --state-value ALARM 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.753">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-DYNAMODB4" name="Use Amazon VPC Endpoints to Access DynamoDB" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Amazon VPC Endpoints to Access DynamoDB 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Use a virtual private cloud (VPC) endpoint for DynamoDB to enable Amazon EC2 instances in your VPC to use their private IP addresses to access DynamoDB with no exposure to the public internet.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Create a VPC Endpoint for DynamoDB 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Before you begin, verify that you can communicate with DynamoDB using its public endpoint. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  aws dynamodb list-tables 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The output will show a list of DynamoDB tables that you currently own. (If you don't have any tables, the list will be empty.). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Verify that DynamoDB is an available service for creating VPC endpoints in the current AWS Region. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Command: aws ec2 describe-vpc-endpoint-services 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  Example output: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "ServiceNames": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "com.amazonaws.us-east-1.s3", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "com.amazonaws.us-east-1.dynamodb" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the example output, DynamoDB is one of the services available, so you can proceed with creating a VPC endpoint for it. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Determine your VPC identifier. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Command: aws ec2 describe-vpcs 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  Example output: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "Vpcs": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "VpcId": "vpc-0bbc736e",&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "InstanceTenancy": "default",&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "State": "available",&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "DhcpOptionsId": "dopt-8454b7e1",&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "CidrBlock": "172.31.0.0/16",&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "IsDefault": true 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the example output, the VPC ID is vpc-0bbc736e. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Create the VPC endpoint. For the --vpc-id parameter, specify the VPC ID from the previous step. Use the --route-table-ids parameter to associate the endpoint with your route tables. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Command: aws ec2 create-vpc-endpoint --vpc-id vpc-0bbc736e --service-name com.amazonaws.us-east-1.dynamodb --route-table-ids rtb-11aa22bb 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Example output: 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "VpcEndpoint": { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "PolicyDocument": "{\"Version\":\"2008-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":\"*\",\"Action\":\"*\",\"Resource\":\"*\"}]}",&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "VpcId": "vpc-0bbc736e",&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "State": "available",&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "ServiceName": "com.amazonaws.us-east-1.dynamodb",&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "RouteTableIds": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "rtb-11aa22bb" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ], 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "VpcEndpointId": "vpce-9b15e2f2",&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "CreationTimestamp": "2017-07-26T22:00:14Z" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; } 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Using a VPC Endpoint for DynamoDB" url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/vpc-endpoints-dynamodb-tutorial.html"/>
            <reference name="Using Amazon VPC Endpoints to Access DynamoDB" url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/vpc-endpoints-dynamodb.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Verify that you can access DynamoDB through the VPC endpoint. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  aws dynamodb list-tables 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you want, you can try some other AWS CLI commands for DynamoDB. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.753">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-DYNAMODB6" name="Use backup mechanisms for AWS DynamoDB" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use backup mechanisms for AWS DynamoDB 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Amazon DynamoDB offers several features to help support your data resiliency and backup needs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  On-demand backup and restore 
&lt;/div&gt; 
&lt;div&gt;
  DynamoDB provides on-demand backup capability. It allows you to create full backups of your tables for long-term retention and archival. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Point-in-time recovery 
&lt;/div&gt; 
&lt;div&gt;
  Point-in-time recovery helps protect your DynamoDB tables from accidental write or delete operations. With point in time recovery, you don't have to worry about creating, maintaining, or scheduling on-demand backups. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  On-demand backup and restore 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Creating a Table Backup (Console) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Follow these steps to create a backup named MusicBackup for an existing Music table using the AWS Management Console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To create a table backup 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Sign in to the AWS Management Console and open the DynamoDB console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. You can create a backup by doing one of the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - On the Backups tab of the Music table, choose Create backup. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - In the navigation pane on the left side of the console, choose Backups. Then choose Create backup. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Make sure that Music is the table name, and enter MusicBackup for the backup name. Then, choose Create to create the backup. 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  Note 
&lt;/div&gt; 
&lt;div&gt;
  If you create backups using the Backups section in the navigation pane, the table isn't preselected for you. You have to manually choose the source table name for the backup. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  While the backup is being created, the backup status is set to Creating. After the backup is complete, the backup status changes to Available. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Point-in-time recovery 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To enable it for a table, on the Overview tab, in the Table details section, choose Enable for Point-in-time recovery. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  None: 
&lt;/div&gt; 
&lt;div&gt;
  Impact 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="On-Demand Backup and Restore for DynamoDB" url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/BackupRestore.html"/>
            <reference name="Point-in-Time Recovery for DynamoDB" url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/PointInTimeRecovery.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  On-demand backup and restore 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can see your backups following th steps below: 
&lt;/div&gt; 
&lt;div&gt;
  1. Sign in to the AWS Management Console and open the DynamoDB console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the navigation pane on the left side of the console, choose Backups. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. In the list of backups, choose the one you need. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Point-in-Time Recovery 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that for a table on the Overview tab, in the Table details section, Point-in-time recovery is enabled. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.753">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-DYNAMODB2" name="Use client-side encryption with AWS DynamoDB Encryption Client" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use client-side encryption with AWS DynamoDB Encryption Client 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  The Amazon DynamoDB Encryption Client is a software library that helps you to protect your table data before you send it to Amazon DynamoDB. Encrypting your sensitive data in transit and at rest helps ensure that your plaintext data isn't available to any third party, including AWS. 
&lt;/div&gt; 
&lt;div&gt;
  The DynamoDB Encryption Client libraries are developed in open source projects on GitHub. They are currently available in Java and Python. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Encrypting attribute values 
&lt;/div&gt; 
&lt;div&gt;
  The DynamoDB Encryption Client encrypts the values (but not the names) of the attributes that you specify. To determine which attribute values are encrypted, use attribute actions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For example, this item includes example and test attributes. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  'example': 'data', 
&lt;/div&gt; 
&lt;div&gt;
  'test': 'test-value', 
&lt;/div&gt; 
&lt;div&gt;
  ... 
&lt;/div&gt; 
&lt;div&gt;
  If you encrypt the example attribute, but don't encrypt the test attribute, the results look like the following. The encrypted example attribute value is binary data, instead of a string. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  'example': Binary(b"'b\x933\x9a+s\xf1\xd6a\xc5\xd5\x1aZ\xed\xd6\xce\xe9X\xf0T\xcb\x9fY\x9f\xf3\xc9C\x83\r\xbb\\"), 
&lt;/div&gt; 
&lt;div&gt;
  'test': 'test-value' 
&lt;/div&gt; 
&lt;div&gt;
  ... 
&lt;/div&gt; 
&lt;div&gt;
  The primary key attributes-partition key and sort key-of each item must remain in plaintext because DynamoDB uses them to find the item in the table. They should be signed, but not encrypted. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Warning 
&lt;/div&gt; 
&lt;div&gt;
  Do not encrypt the primary key attributes. They must remain in plaintext so DynamoDB can find the item without running a full table scan. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The helpers in each programming language identify the primary key attributes for you and ensure that their values are signed, but not encrypted. And, if you identify your primary key and then try to encrypt it, the client will throw an exception. If you need to encrypt the primary key for a special use case, use the lower-level item encryptor directly, but remember that DynamoDB will not be able to find your item without running a full table scan. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The DynamoDB Encryption Client also does not encrypt or sign the material description attribute, which stores information that the DynamoDB Encryption Client needs to verify and decrypt the item. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Signing the item 
&lt;/div&gt; 
&lt;div&gt;
  After encrypting the specified attribute values, the DynamoDB Encryption Client calculates a digital signature over the names and values of attributes that you specify in the attribute actions object. The client saves the signature in an attribute that it adds to the item. 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  If you provide a table name, it's included in the signature. This allows you to detect that a signed item was moved to a different table, perhaps maliciously, such as moving an employee record from the AllEmployees to TrustedEmployees table. The DynamoDB Encryption Client gets the table name from the DynamoDB encryption context, where it is an optional field. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Be sure to include the primary key in the signature. It's the default behavior when you use a helper. The signature captures the relationship between the primary key and other attributes in the item, and the signature validation verifies that the relationship hasn't changed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The material description attribute is not encrypted or signed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="What is the Amazon DynamoDB Encryption Client?" url="https://docs.aws.amazon.com/dynamodb-encryption-client/latest/devguide/what-is-ddb-encrypt.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  An encrypted and signed item 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  When the DynamoDB Encryption Client encrypts and signs a table item, the result is a standard DynamoDB table item with encrypted attribute values. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The following text shows a part of an example encrypted and signed table item. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; '*amzn-ddb-map-desc':Binary(b'...'), 
&lt;/div&gt; 
&lt;div&gt;
  '*amzn-ddb-map-sig': Binary(b'...'), 
&lt;/div&gt; 
&lt;div&gt;
  'binary': Binary(b'...'), 
&lt;/div&gt; 
&lt;div&gt;
  'example': Binary(b'...'), 
&lt;/div&gt; 
&lt;div&gt;
  'numbers': Binary(b'...'), 
&lt;/div&gt; 
&lt;div&gt;
  'partition_attribute': 'value1', 
&lt;/div&gt; 
&lt;div&gt;
  'sort_attribute': 55, 
&lt;/div&gt; 
&lt;div&gt;
  'test': 'test-value' 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  The text shows the following characteristics of table items that the DynamoDB Encryption Client encrypts and signs: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  All attribute names are in plaintext. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The values of the primary key attributes are in plaintext. In this example, the partition key name is partition_attribute and the sort key name is sort_attribute. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The values of any attributes that you tell the client not to encrypt remain in plaintext. In this example, the value of the test attribute is in plaintext. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The values of encrypted attributes are binary data. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The client adds a signature attribute (*amzn-ddb-map-sig*) to the item. Its value is the item signature. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The client adds a material description attribute (*amzn-ddb-map-desc*) to the item. Its value describes how the attribute was encrypted and signed. The client uses this information to verify and decrypt the item. The material description attribute is not encrypted or signed. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.752">
              <output/>
            </source>
            <references>
              <reference name="Which fields are encrypted and signed?" url="https://docs.aws.amazon.com/dynamodb-encryption-client/latest/devguide/encrypted-and-signed.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="authorization" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="AWS-DYNAMODB1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-DYNAMODB1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.4">
                  <countermeasures>
                    <countermeasure ref="AWS-DYNAMODB5" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-DYNAMODB5" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="DATA-DELETED-EASY-AWS" issueId="" issueLink="" name="Data is intentionally or accidentally deleted" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Data can be deleted intentionally or accidentally and cannot be recovered. Attackers could rely on the lack of backup and recovery mechanisms.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.1">
                  <countermeasures>
                    <countermeasure ref="AWS-DYNAMODB6" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-DYNAMODB6" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="OWASP A10:2017" issueId="" issueLink="" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AWS-DYNAMODB7" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-DYNAMODB7" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-NET-01">
                  <countermeasures>
                    <countermeasure ref="AWS-DYNAMODB4" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-DYNAMODB4" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="EAVESDROPPING-COMMUNICATIONS" issueId="" issueLink="" name="An attacker eavesdrops on the communication between the client and server and decrypts the data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Eavesdropping on communication is a network attack that captures network packets transmitted by other computers and reads the data content. This type of network attack is most effective when weak encryption services are used. An attacker could eavesdrop on the communication between the client and server and decrypt the encrypted data.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-319">
                  <countermeasures>
                    <countermeasure ref="AWS-DYNAMODB2" mitigation="50"/>
                    <countermeasure ref="AWS-DYNAMODB3" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-DYNAMODB2" mitigation="50"/>
                <countermeasure ref="AWS-DYNAMODB3" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="0660eb56-40ec-4a0d-b555-f6e07d45b680" diagramComponentId="ea8a8688-17a3-4e2a-9c48-463d3613d16e" ref="d303d3b1-d0bf-498b-b968-ebf067bd9e09" name="AWS DynamoDB" desc="" library="Hydras-AWS-Foundation" parentComponentRef="0a4c9891-20e3-4027-a074-077337be7c97" componentDefinitionRef="dynamodb" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-319" name="Cleartext Transmission of Sensitive Information" state="0" impact="100" issueId="" issueLink="">
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.

Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.614">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.614">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.613">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.4" name="Sensitive data is accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data is not encrypted and is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.614">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.1" name="There is not a recover or backup mechanism" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;There are not any processes or mechanisms to regularly save the data to another place in order to have an older version of the data to restore in case of loss. Consequently, the data cannot be easily recovered or they cannot be recovered at all.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.614">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-01" name="Unauthorized connection attempts are allowed on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To avoid this, access to network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.614">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AWS-DYNAMODB3" name="Connect to AWS DynamoDB using an AWS secure connection option" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Connect to AWS DynamoDB using an AWS secure connection option&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  You have two connectivity options between your private network and AWS: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - An AWS Site-to-Site VPN connection. 
&lt;/div&gt; 
&lt;div&gt;
  By default, instances that you launch into an Amazon VPC can't communicate with your own (remote) network. You can enable access to your remote network from your VPC by creating an AWS Site-to-Site VPN (Site-to-Site VPN) connection, and configuring routing to pass traffic through the connection. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - An AWS Direct Connect connection. 
&lt;/div&gt; 
&lt;div&gt;
  AWS Direct Connect links your internal network to an AWS Direct Connect location over a standard Ethernet fiber-optic cable. One end of the cable is connected to your router, the other to an AWS Direct Connect router. With this connection, you can create virtual interfaces directly to public AWS services (for example, to Amazon S3) or to Amazon VPC, bypassing internet service providers in your network path. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  AWS Site-to-Site VPN connection 
&lt;/div&gt; 
&lt;div&gt;
  You can create, access, and manage your Site-to-Site VPN resources using any of the following interfaces: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Management Console- Provides a web interface that you can use to access your Site-to-Site VPN resources. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Command Line Interface (AWS CLI) - Provides commands for a broad set of AWS services, including Amazon VPC, and is supported on Windows, macOS, and Linux. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS SDKs - Provide language-specific APIs and takes care of many of the connection details, such as calculating signatures, handling request retries, and error handling. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Query API- Provides low-level API actions that you call using HTTPS requests. Using the Query API is the most direct way to access Amazon VPC, but it requires that your application handle low-level details such as generating the hash to sign the request, and error handling. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Direct Connect connection 
&lt;/div&gt; 
&lt;div&gt;
  Getting started with AWS Direct Connect 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use the AWS Direct Connect tab on the AWS Management Console to create a new connection. Then you will change the region to the region you wish to use. When requesting a connection, you will be asked to select the AWS Direct Connect location you wish to use, the number of ports, and the port speed. You will also have the opportunity to request to have an AWS Direct Connect Partner contact you if you need assistance extending your office or data center network to the AWS Direct Connect location. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Internetwork Traffic Privacy" url="https://docs.aws.amazon.com/amazonglacier/latest/dev/InternetworkTrafficPrivacy.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  AWS Site-to-Site VPN 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  After you create the AWS Site-to-Site VPN connection and configure the customer gateway, you can launch an instance and test the connection by pinging the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Before you begin, make sure of the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use an AMI that responds to ping requests. AWS recommends that you use one of the Amazon Linux AMIs. 
&lt;/div&gt; 
&lt;div&gt;
  Configure any security group or network ACL in your VPC that filters traffic to the instance to allow inbound and outbound ICMP traffic. 
&lt;/div&gt; 
&lt;div&gt;
  If you are using instances running Windows Server, connect to the instance and enable inbound ICMPv4 on the Windows firewall in order to ping the instance. 
&lt;/div&gt; 
&lt;div&gt;
  (Static routing) Ensure that the customer gateway device has a static route to your VPC, and that your VPN connection has a VPN connection has a static route so that traffic can get back to your customer gateway device. 
&lt;/div&gt; 
&lt;div&gt;
  (Dynamic routing) Ensure that the BGP status on your customer gateway device is established. It takes approximately 30 seconds for a BGP peering session to be established. Ensure that routes are advertised with BGP correctly and showing in the subnet route table, so that traffic can get back to your customer gateway. Make sure that both tunnels are configured with BGP routing. 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that you have configured routing in your subnet route tables for the VPN connection. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To test end-to-end connectivity 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Open the Amazon EC2 console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. On the dashboard, choose Launch Instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. On the Choose an Amazon Machine Image (AMI) page, choose an AMI, and then choose Select. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Choose an instance type, and then choose Next: Configure Instance Details. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. On the Configure Instance Details page, for Network, select your VPC. For Subnet, select your subnet. Choose Next until you reach the Configure Security Group page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. Select the Select an existing security group option, and then select the group that you configured earlier. Choose Review and Launch. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Review the settings that you've chosen. Make any changes that you need, and then choose Launch to select a key pair and launch the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  8. After the instance is running, get its private IP address (for example, 10.0.0.4). The Amazon EC2 console displays the address as part of the instance's details. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  9. From a computer in your network that is behind the customer gateway device, use the ping command with the instance's private IP address. A successful response is similar to the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  ping 10.0.0.4 
&lt;/div&gt; 
&lt;div&gt;
  Pinging 10.0.0.4 with 32 bytes of data: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Reply from 10.0.0.4: bytes=32 time&amp;lt;1ms TTL=128 
&lt;/div&gt; 
&lt;div&gt;
  Reply from 10.0.0.4: bytes=32 time&amp;lt;1ms TTL=128 
&lt;/div&gt; 
&lt;div&gt;
  Reply from 10.0.0.4: bytes=32 time&amp;lt;1ms TTL=128 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ping statistics for 10.0.0.4: 
&lt;/div&gt; 
&lt;div&gt;
  Packets: Sent = 3, Received = 3, Lost = 0 (0% loss), 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Approximate round trip times in milliseconds: 
&lt;/div&gt; 
&lt;div&gt;
  Minimum = 0ms, Maximum = 0ms, Average = 0ms 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To test tunnel failover, you can temporarily disable one of the tunnels on your customer gateway device, and repeat the above step. You cannot disable a tunnel on the AWS side of the VPN connection. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can use SSH or RDP to connect to your instances in the VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Direct Connect Failover Test 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The AWS Direct Connect Resiliency Toolkit resiliency models are designed to ensure that you have the appropriate number of virtual interface connections in multiple locations. After you complete the wizard, use the AWS Direct Connect Resiliency Toolkit failover test to bring down the BGP peering session in order to verify that traffic routes to one of your redundant virtual interfaces, and meets your resiliency requirements. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use the test to make sure that traffic routes over redundant virtual interfaces when a virtual interface is out of service. You start the test by selecting a virtual interface, BGP peering session, and how long to run the test. AWS places the selected virtual interface BGP peering session in the down state. When the interface is in this state, traffic should go over a redundant virtual interface. If your configuration does not contain the appropriate redundant connections, the BGP peering session fails, and traffic does not get routed. When the test completes, or you manually stop the test, AWS restores the BGP session. After the test is complete, you can use the AWS Direct Connect Resiliency Toolkit to adjust your configuration. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.509">
              <output/>
            </source>
            <references>
              <reference name="AWS Direct Connect Failover Test" url="https://docs.aws.amazon.com/directconnect/latest/UserGuide/resilency_failover.html"/>
              <reference name="Testing the Site-to-Site VPN connection" url="https://docs.aws.amazon.com/vpn/latest/s2svpn/HowToTestEndToEnd_Linux.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-DYNAMODB1" name="Control access to AWS DynamoDB resources using IAM policies" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
  Control access to AWS DynamoDB resources using IAM policies 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  You can use AWS Identity and Access Management (IAM) to manage access permissions and implement security policies for both Amazon DynamoDB and DynamoDB Accelerator (DAX). 
&lt;/div&gt; 
&lt;div&gt;
  Keep in mind that DAX and DynamoDB have separate access control mechanisms. Both services use AWS Identity and Access Management (IAM) to implement their respective security policies, but the security models for DAX and DynamoDB are different. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In case you are using DynamoDB Accelerator (DAX), please see also DAX Access Control reference URL. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Using Identity-Based Policies (IAM Policies) for Amazon DynamoDB 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The following shows an example of a permissions policy. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "Version": "2012-10-17", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "Statement": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Sid": "DescribeQueryScanBooksTable", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Effect": "Allow", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Action": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "dynamodb:DescribeTable", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "dynamodb:Query", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "dynamodb:Scan" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ], 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Resource": "arn:aws:dynamodb:us-west-2:account-id:table/Books" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The policy has one statement that grants permissions for three DynamoDB actions (dynamodb:DescribeTable, dynamodb:Query, and dynamodb:Scan) on a table in the us-west-2 Region, which is owned by the AWS account specified by account-id. The Amazon Resource Name (ARN) in the Resource value specifies the table to which the permissions apply. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Permissions Required to Use the Amazon DynamoDB Console 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For a user to work with the DynamoDB console, that user must have a minimum set of permissions that allow the user to work with the DynamoDB resources for their AWS account. In addition to these DynamoDB permissions, the console requires permissions from the following services: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Amazon CloudWatch permissions to display metrics and graphs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - AWS Data Pipeline permissions to export and import DynamoDB data. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - AWS Identity and Access Management permissions to access roles necessary for exports and imports. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Amazon Simple Notification Service permissions to notify you whenever a CloudWatch alarm is triggered. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - AWS Lambda permissions to process DynamoDB Streams records. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you create an IAM policy that is more restrictive than the minimum required permissions, the console won't function as intended for users with that IAM policy. To ensure that those users can still use the DynamoDB console, also attach the AmazonDynamoDBReadOnlyAccess managed policy to the user. 
&lt;/div&gt; 
&lt;div&gt;
  You don't need to allow minimum console permissions for users that are making calls only to the AWS CLI or the Amazon DynamoDB API. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Managed (Predefined) Policies for Amazon DynamoDB 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS addresses many common use cases by providing standalone IAM policies that are created and administered by AWS. These AWS managed policies grant necessary permissions for common use cases so that you can avoid having to investigate what permissions are needed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The following AWS managed policies, which you can attach to users in your account, are specific to DynamoDB and are grouped by use case scenario: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - AmazonDynamoDBReadOnlyAccess - Grants read-only access to DynamoDB resources by using the AWS Management Console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - AmazonDynamoDBFullAccess - Grants full access to DynamoDB resources by using the AWS Management Console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - AmazonDynamoDBFullAccesswithDataPipeline - Grants full access to DynamoDB resources, including export and import using AWS Data Pipeline, by using AWS Management Console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS does not recommend using these AWS managed policies for production databases. Instead, you should create your own custom IAM policies to allow permissions for DynamoDB actions and resources following the least privilege model. You can attach these custom policies to the IAM users or groups that require those permissions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="DAX Access Control" url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAX.access-control.html"/>
            <reference name="Using Identity-Based Policies (IAM Policies) for Amazon DynamoDB" url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/using-identity-based-policies.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.507">
              <output/>
            </source>
            <references>
              <reference name="Testing IAM policies with the IAM policy simulator" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-DYNAMODB5" name="Enable DAX encryption at rest if used" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable DAX encryption at rest if used 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Amazon DynamoDB Accelerator (DAX) encryption at rest provides an additional layer of data protection by helping secure your data from unauthorized access to the underlying storage. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Enabling Encryption at Rest Using the AWS Management Console 
&lt;/div&gt; 
&lt;div&gt;
  Follow these steps to enable DAX encryption at rest on a table using the console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To enable DAX encryption at rest 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Sign in to the AWS Management Console and open the DynamoDB console at https://console.aws.amazon.com/dynamodb/. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the navigation pane on the left side of the console, under DAX, choose Clusters. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Choose Create cluster. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. For Cluster name, enter a short name for your cluster. Choose the node type for all of the nodes in the cluster, and for the cluster size, use 3 nodes. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. In Encryption, make sure that Enable encryption is selected. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. After choosing the IAM role, subnet group, security groups, and cluster settings, choose Launch cluster. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="DAX Encryption at Rest" url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAXEncryptionAtRest.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  To confirm that the cluster is encrypted, check the cluster details under the Clusters pane. Encryption should be ENABLED. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.509">
              <output/>
            </source>
            <references>
              <reference name="DAX Encryption at Rest" url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAXEncryptionAtRest.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-DYNAMODB7" name="Monitor AWS DynamoDB with Cloudwatch" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Monitor AWS DynamoDB with Cloudwatch 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  You can monitor Amazon DynamoDB using CloudWatch, which collects and processes raw data from DynamoDB into readable, near real-time metrics. These statistics are retained for a period of time, so that you can access historical information for a better perspective on how your web application or service is performing. By default, DynamoDB metric data is sent to CloudWatch automatically. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In case you are using DAX you can monitor it using Amazon Cloudwatch, too. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  You can create a CloudWatch alarm that sends an Amazon SNS message when the alarm changes state. An alarm watches a single metric over a time period you specify, and performs one or more actions based on the value of the metric relative to a given threshold over a number of time periods. The action is a notification sent to an Amazon SNS topic or Auto Scaling policy. Alarms invoke actions for sustained state changes only. CloudWatch alarms do not invoke actions simply because they are in a particular state; the state must have changed and been maintained for a specified number of periods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For examples and their test steps for AWS DynamoDB and Amazon DynamoDB Accelerator (DAX) please go to the Test tab. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Creating CloudWatch Alarms to Monitor DAX" url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/dax-creating-alarms.html"/>
            <reference name="Creating CloudWatch Alarms to Monitor DynamoDB" url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/creating-alarms.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Alarm examples 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS DynamoDB 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  How can I be notified before I consume my entire read capacity? 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Create an Amazon SNS topic, arn:aws:sns:us-east-1:123456789012:capacity-alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Create the alarm. In this example, we assume a provisioned capacity of five read capacity units. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch put-metric-alarm \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-name ReadCapacityUnitsLimitAlarm \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-description "Alarm when read capacity reaches 80% of my provisioned read capacity" \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --namespace AWS/DynamoDB \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --metric-name ConsumedReadCapacityUnits \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --dimensions Name=TableName,Value=myTable \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --statistic Sum \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --threshold 240 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --comparison-operator GreaterThanOrEqualToThreshold \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --period 60 \&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --evaluation-periods 1 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-actions arn:aws:sns:us-east-1:123456789012:capacity-alarm 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Test the alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch set-alarm-state --alarm-name ReadCapacityUnitsLimitAlarm --state-reason "initializing" --state-value OK 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp;Prompt&amp;gt;aws cloudwatch set-alarm-state --alarm-name ReadCapacityUnitsLimitAlarm --state-reason "initializing" --state-value ALARM 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note 
&lt;/div&gt; 
&lt;div&gt;
  The alarm is activated whenever the consumed read capacity is at least 4 units per second (80% of provisioned read capacity of 5) for 1 minute (60 seconds). So the threshold is 240 read capacity units (4 units/sec * 60 seconds). Any time the read capacity is updated you should update the alarm calculations appropriately. You can avoid this process by creating alarms through the DynamoDB Console. In this way, the alarms are automatically updated for you. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  How can I be notified if any requests exceed the provisioned throughput quotas of a table? 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Create an Amazon SNS topic, arn:aws:sns:us-east-1:123456789012:requests-exceeding-throughput. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Create the alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch put-metric-alarm \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-name RequestsExceedingThroughputAlarm\ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-description "Alarm when my requests are exceeding provisioned throughput quotas of a table" \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --namespace AWS/DynamoDB \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --metric-name ThrottledRequests \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --dimensions Name=TableName,Value=myTable \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --statistic Sum \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --threshold 0 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --comparison-operator GreaterThanThreshold \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --period 300 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --unit Count \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --evaluation-periods 1 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-actions arn:aws:sns:us-east-1:123456789012:requests-exceeding-throughput 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Test the alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch set-alarm-state --alarm-name RequestsExceedingThroughputAlarm --state-reason "initializing" --state-value OK 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch set-alarm-state --alarm-name RequestsExceedingThroughputAlarm --state-reason "initializing" --state-value ALARM 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  How can I be notified if any system errors occurred? 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Create an Amazon SNS topic, arn:aws:sns:us-east-1:123456789012:notify-on-system-errors. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Create the alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch put-metric-alarm \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-name SystemErrorsAlarm \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-description "Alarm when system errors occur" \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --namespace AWS/DynamoDB \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --metric-name SystemErrors \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --dimensions Name=TableName,Value=myTable \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --statistic Sum \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --threshold 0 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --comparison-operator GreaterThanThreshold \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --period 60 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --unit Count \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --evaluation-periods 1 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-actions arn:aws:sns:us-east-1:123456789012:notify-on-system-errors&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Test the alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch set-alarm-state --alarm-name SystemErrorsAlarm --state-reason "initializing" --state-value OK 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch set-alarm-state --alarm-name SystemErrorsAlarm --state-reason "initializing" --state-value ALARM 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Amazon DynamoDB Accelerator (DAX) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  How Can I Be Notified of Query Cache Misses? 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Create an Amazon SNS topic, arn:aws:sns:us-west-2:522194210714:QueryMissAlarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Create the alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch put-metric-alarm \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-name QueryCacheMissesAlarm&amp;nbsp; \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-description "Alarm over query cache misses" \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --namespace AWS/DAX \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --metric-name QueryCacheMisses&amp;nbsp; \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --dimensions Name=ClusterID,Value=myCluster \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --statistic Sum \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --threshold 8 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --comparison-operator GreaterThanOrEqualToThreshold \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --period 60 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --evaluation-periods 1 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-actions arn:aws:sns:us-west-2:522194210714:QueryMissAlarm 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Test the alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch set-alarm-state --alarm-name QueryCacheMissesAlarm --state-reason "initializing" --state-value OK 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp;Prompt&amp;gt;aws cloudwatch set-alarm-state --alarm-name QueryCacheMissesAlarm --state-reason "initializing" --state-value ALARM 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note 
&lt;/div&gt; 
&lt;div&gt;
  You can increase or decrease the threshold to one that makes sense for your application. You can also use CloudWatch Metric Math to define a cache miss rate metric and set an alarm over that metric. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  How Can I Be Notified If Requests Cause Any Internal Error in the Cluster? 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Create an Amazon SNS topic, arn:aws:sns:us-west-2:123456789012:notify-on-system-errors. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Create the alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch put-metric-alarm \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-name FaultRequestCountAlarm \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-description "Alarm when a request causes an internal error" \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --namespace AWS/DAX \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --metric-name FaultRequestCount \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --dimensions Name=ClusterID,Value=myCluster \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --statistic Sum \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --threshold 0 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --comparison-operator GreaterThanThreshold \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --period 60 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --unit Count \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --evaluation-periods 1 \ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; --alarm-actions arn:aws:sns:us-east-1:123456789012:notify-on-system-errors&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Test the alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch set-alarm-state --alarm-name FaultRequestCountAlarm --state-reason "initializing" --state-value OK 
&lt;/div&gt; 
&lt;div&gt;
  Prompt&amp;gt;aws cloudwatch set-alarm-state --alarm-name QueryCacheMissesAlarm --state-reason "initializing" --state-value ALARM 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.509">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-DYNAMODB4" name="Use Amazon VPC Endpoints to Access DynamoDB" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Amazon VPC Endpoints to Access DynamoDB 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Use a virtual private cloud (VPC) endpoint for DynamoDB to enable Amazon EC2 instances in your VPC to use their private IP addresses to access DynamoDB with no exposure to the public internet.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Create a VPC Endpoint for DynamoDB 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Before you begin, verify that you can communicate with DynamoDB using its public endpoint. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  aws dynamodb list-tables 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The output will show a list of DynamoDB tables that you currently own. (If you don't have any tables, the list will be empty.). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Verify that DynamoDB is an available service for creating VPC endpoints in the current AWS Region. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Command: aws ec2 describe-vpc-endpoint-services 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  Example output: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "ServiceNames": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "com.amazonaws.us-east-1.s3", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "com.amazonaws.us-east-1.dynamodb" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the example output, DynamoDB is one of the services available, so you can proceed with creating a VPC endpoint for it. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Determine your VPC identifier. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Command: aws ec2 describe-vpcs 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  Example output: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "Vpcs": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "VpcId": "vpc-0bbc736e",&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "InstanceTenancy": "default",&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "State": "available",&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "DhcpOptionsId": "dopt-8454b7e1",&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "CidrBlock": "172.31.0.0/16",&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "IsDefault": true 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the example output, the VPC ID is vpc-0bbc736e. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Create the VPC endpoint. For the --vpc-id parameter, specify the VPC ID from the previous step. Use the --route-table-ids parameter to associate the endpoint with your route tables. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Command: aws ec2 create-vpc-endpoint --vpc-id vpc-0bbc736e --service-name com.amazonaws.us-east-1.dynamodb --route-table-ids rtb-11aa22bb 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Example output: 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "VpcEndpoint": { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "PolicyDocument": "{\"Version\":\"2008-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":\"*\",\"Action\":\"*\",\"Resource\":\"*\"}]}",&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "VpcId": "vpc-0bbc736e",&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "State": "available",&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "ServiceName": "com.amazonaws.us-east-1.dynamodb",&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "RouteTableIds": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "rtb-11aa22bb" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ], 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "VpcEndpointId": "vpce-9b15e2f2",&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "CreationTimestamp": "2017-07-26T22:00:14Z" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; } 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Using a VPC Endpoint for DynamoDB" url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/vpc-endpoints-dynamodb-tutorial.html"/>
            <reference name="Using Amazon VPC Endpoints to Access DynamoDB" url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/vpc-endpoints-dynamodb.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Verify that you can access DynamoDB through the VPC endpoint. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  aws dynamodb list-tables 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you want, you can try some other AWS CLI commands for DynamoDB. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.509">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-DYNAMODB6" name="Use backup mechanisms for AWS DynamoDB" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use backup mechanisms for AWS DynamoDB 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Amazon DynamoDB offers several features to help support your data resiliency and backup needs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  On-demand backup and restore 
&lt;/div&gt; 
&lt;div&gt;
  DynamoDB provides on-demand backup capability. It allows you to create full backups of your tables for long-term retention and archival. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Point-in-time recovery 
&lt;/div&gt; 
&lt;div&gt;
  Point-in-time recovery helps protect your DynamoDB tables from accidental write or delete operations. With point in time recovery, you don't have to worry about creating, maintaining, or scheduling on-demand backups. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  On-demand backup and restore 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Creating a Table Backup (Console) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Follow these steps to create a backup named MusicBackup for an existing Music table using the AWS Management Console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To create a table backup 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Sign in to the AWS Management Console and open the DynamoDB console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. You can create a backup by doing one of the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - On the Backups tab of the Music table, choose Create backup. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - In the navigation pane on the left side of the console, choose Backups. Then choose Create backup. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Make sure that Music is the table name, and enter MusicBackup for the backup name. Then, choose Create to create the backup. 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  Note 
&lt;/div&gt; 
&lt;div&gt;
  If you create backups using the Backups section in the navigation pane, the table isn't preselected for you. You have to manually choose the source table name for the backup. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  While the backup is being created, the backup status is set to Creating. After the backup is complete, the backup status changes to Available. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Point-in-time recovery 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To enable it for a table, on the Overview tab, in the Table details section, choose Enable for Point-in-time recovery. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  None: 
&lt;/div&gt; 
&lt;div&gt;
  Impact 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="On-Demand Backup and Restore for DynamoDB" url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/BackupRestore.html"/>
            <reference name="Point-in-Time Recovery for DynamoDB" url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/PointInTimeRecovery.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  On-demand backup and restore 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can see your backups following th steps below: 
&lt;/div&gt; 
&lt;div&gt;
  1. Sign in to the AWS Management Console and open the DynamoDB console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the navigation pane on the left side of the console, choose Backups. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. In the list of backups, choose the one you need. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Point-in-Time Recovery 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that for a table on the Overview tab, in the Table details section, Point-in-time recovery is enabled. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.509">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-DYNAMODB2" name="Use client-side encryption with AWS DynamoDB Encryption Client" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use client-side encryption with AWS DynamoDB Encryption Client 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  The Amazon DynamoDB Encryption Client is a software library that helps you to protect your table data before you send it to Amazon DynamoDB. Encrypting your sensitive data in transit and at rest helps ensure that your plaintext data isn't available to any third party, including AWS. 
&lt;/div&gt; 
&lt;div&gt;
  The DynamoDB Encryption Client libraries are developed in open source projects on GitHub. They are currently available in Java and Python. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Encrypting attribute values 
&lt;/div&gt; 
&lt;div&gt;
  The DynamoDB Encryption Client encrypts the values (but not the names) of the attributes that you specify. To determine which attribute values are encrypted, use attribute actions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For example, this item includes example and test attributes. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  'example': 'data', 
&lt;/div&gt; 
&lt;div&gt;
  'test': 'test-value', 
&lt;/div&gt; 
&lt;div&gt;
  ... 
&lt;/div&gt; 
&lt;div&gt;
  If you encrypt the example attribute, but don't encrypt the test attribute, the results look like the following. The encrypted example attribute value is binary data, instead of a string. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  'example': Binary(b"'b\x933\x9a+s\xf1\xd6a\xc5\xd5\x1aZ\xed\xd6\xce\xe9X\xf0T\xcb\x9fY\x9f\xf3\xc9C\x83\r\xbb\\"), 
&lt;/div&gt; 
&lt;div&gt;
  'test': 'test-value' 
&lt;/div&gt; 
&lt;div&gt;
  ... 
&lt;/div&gt; 
&lt;div&gt;
  The primary key attributes-partition key and sort key-of each item must remain in plaintext because DynamoDB uses them to find the item in the table. They should be signed, but not encrypted. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Warning 
&lt;/div&gt; 
&lt;div&gt;
  Do not encrypt the primary key attributes. They must remain in plaintext so DynamoDB can find the item without running a full table scan. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The helpers in each programming language identify the primary key attributes for you and ensure that their values are signed, but not encrypted. And, if you identify your primary key and then try to encrypt it, the client will throw an exception. If you need to encrypt the primary key for a special use case, use the lower-level item encryptor directly, but remember that DynamoDB will not be able to find your item without running a full table scan. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The DynamoDB Encryption Client also does not encrypt or sign the material description attribute, which stores information that the DynamoDB Encryption Client needs to verify and decrypt the item. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Signing the item 
&lt;/div&gt; 
&lt;div&gt;
  After encrypting the specified attribute values, the DynamoDB Encryption Client calculates a digital signature over the names and values of attributes that you specify in the attribute actions object. The client saves the signature in an attribute that it adds to the item. 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  If you provide a table name, it's included in the signature. This allows you to detect that a signed item was moved to a different table, perhaps maliciously, such as moving an employee record from the AllEmployees to TrustedEmployees table. The DynamoDB Encryption Client gets the table name from the DynamoDB encryption context, where it is an optional field. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Be sure to include the primary key in the signature. It's the default behavior when you use a helper. The signature captures the relationship between the primary key and other attributes in the item, and the signature validation verifies that the relationship hasn't changed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The material description attribute is not encrypted or signed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="What is the Amazon DynamoDB Encryption Client?" url="https://docs.aws.amazon.com/dynamodb-encryption-client/latest/devguide/what-is-ddb-encrypt.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  An encrypted and signed item 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  When the DynamoDB Encryption Client encrypts and signs a table item, the result is a standard DynamoDB table item with encrypted attribute values. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The following text shows a part of an example encrypted and signed table item. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; '*amzn-ddb-map-desc':Binary(b'...'), 
&lt;/div&gt; 
&lt;div&gt;
  '*amzn-ddb-map-sig': Binary(b'...'), 
&lt;/div&gt; 
&lt;div&gt;
  'binary': Binary(b'...'), 
&lt;/div&gt; 
&lt;div&gt;
  'example': Binary(b'...'), 
&lt;/div&gt; 
&lt;div&gt;
  'numbers': Binary(b'...'), 
&lt;/div&gt; 
&lt;div&gt;
  'partition_attribute': 'value1', 
&lt;/div&gt; 
&lt;div&gt;
  'sort_attribute': 55, 
&lt;/div&gt; 
&lt;div&gt;
  'test': 'test-value' 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  The text shows the following characteristics of table items that the DynamoDB Encryption Client encrypts and signs: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  All attribute names are in plaintext. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The values of the primary key attributes are in plaintext. In this example, the partition key name is partition_attribute and the sort key name is sort_attribute. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The values of any attributes that you tell the client not to encrypt remain in plaintext. In this example, the value of the test attribute is in plaintext. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The values of encrypted attributes are binary data. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The client adds a signature attribute (*amzn-ddb-map-sig*) to the item. Its value is the item signature. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The client adds a material description attribute (*amzn-ddb-map-desc*) to the item. Its value describes how the attribute was encrypted and signed. The client uses this information to verify and decrypt the item. The material description attribute is not encrypted or signed. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.509">
              <output/>
            </source>
            <references>
              <reference name="Which fields are encrypted and signed?" url="https://docs.aws.amazon.com/dynamodb-encryption-client/latest/devguide/encrypted-and-signed.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="authorization" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="AWS-DYNAMODB1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-DYNAMODB1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.4">
                  <countermeasures>
                    <countermeasure ref="AWS-DYNAMODB5" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-DYNAMODB5" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="DATA-DELETED-EASY-AWS" issueId="" issueLink="" name="Data is intentionally or accidentally deleted" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Data can be deleted intentionally or accidentally and cannot be recovered. Attackers could rely on the lack of backup and recovery mechanisms.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.1">
                  <countermeasures>
                    <countermeasure ref="AWS-DYNAMODB6" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-DYNAMODB6" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="OWASP A10:2017" issueId="" issueLink="" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AWS-DYNAMODB7" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-DYNAMODB7" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-NET-01">
                  <countermeasures>
                    <countermeasure ref="AWS-DYNAMODB4" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-DYNAMODB4" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="EAVESDROPPING-COMMUNICATIONS" issueId="" issueLink="" name="An attacker eavesdrops on the communication between the client and server and decrypts the data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Eavesdropping on communication is a network attack that captures network packets transmitted by other computers and reads the data content. This type of network attack is most effective when weak encryption services are used. An attacker could eavesdrop on the communication between the client and server and decrypt the encrypted data.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-319">
                  <countermeasures>
                    <countermeasure ref="AWS-DYNAMODB2" mitigation="50"/>
                    <countermeasure ref="AWS-DYNAMODB3" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-DYNAMODB2" mitigation="50"/>
                <countermeasure ref="AWS-DYNAMODB3" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="01e160a0-c444-4e54-a1c0-90477fa3ee2d" diagramComponentId="711bb02e-a4c6-48dd-ad3f-4fb2537ca603" ref="0087981b-2050-44c3-844b-a540890ca6ff" name="AWS EC2 Auto Scaling" desc="" library="Hydras-AWS-Foundation" parentComponentRef="010dfedc-7ef1-48b5-bed8-3c139b9cd3c1" componentDefinitionRef="CD-EC2-AUTO-SCALING" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:23.188">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:23.188">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:23.187">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="VOLUMES-NOT-ENCRYPTED" name="The volumes are not encrypted" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Volumes are not encrypted, leading to the disclosure of information.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:23.188">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-01" name="Unauthorized connection attempts are allowed on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To avoid this, access to network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:23.187">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" name="Add Elastic Load Balancing health checks to an Auto Scaling group" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The default health checks for an Auto Scaling group are EC2 status checks only. If an instance fails these status checks, it is marked unhealthy and is terminated while Amazon EC2 Auto Scaling launches a new replacement instance.&lt;/p&gt;&lt;p&gt;You can attach one or more load balancer target groups, one or more Classic Load Balancers, or both to your Auto Scaling group. However, by default, the Auto Scaling group does not consider an instance unhealthy and replace it if it fails the Elastic Load Balancing health checks.&lt;/p&gt;&lt;p&gt;Use the following procedure to add Elastic Load Balancing (ELB) health checks to an Auto Scaling group.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;To add Elastic Load Balancing health checks&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Open the Amazon EC2 Auto Scaling console at &lt;a href="https://console.aws.amazon.com/ec2autoscaling/"&gt;https://console.aws.amazon.com/ec2autoscaling/&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Select the check box next to an existing group.&lt;/p&gt;&lt;p&gt;A split pane opens up in the bottom of the &lt;strong&gt;Auto Scaling groups&lt;/strong&gt; page.&lt;/p&gt;&lt;p&gt;On the &lt;strong&gt;Details&lt;/strong&gt; tab, choose &lt;strong&gt;Health checks&lt;/strong&gt;, &lt;strong&gt;Edit&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;For &lt;strong&gt;Health check type&lt;/strong&gt;, select &lt;strong&gt;Enable ELB health checks&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;For &lt;strong&gt;Health check grace period&lt;/strong&gt;, enter the amount of time, in seconds, that Amazon EC2 Auto Scaling needs to wait before checking the health status of an instance after it enters the InService state. For more information, see &lt;a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-health-checks.html#health-check-grace-period"&gt;Health check grace period&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Choose &lt;strong&gt;Update&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;On the &lt;strong&gt;Instance management&lt;/strong&gt; tab, under &lt;strong&gt;Instances&lt;/strong&gt;, you can view the health status of instances. The &lt;strong&gt;Health Status&lt;/strong&gt; column displays the results of the newly added health checks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Add Elastic Load Balancing health checks" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-add-elb-healthcheck.html"/>
          </references>
          <standards>
            <standard ref="2.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;To ensure that your Auto Scaling group can determine instance health based on additional load balancer tests, configure the Auto Scaling group to use Elastic Load Balancing (ELB) health checks. The load balancer periodically sends pings, attempts connections, or sends requests to test the EC2 instances and determines if an instance is unhealthy. If you configure the Auto Scaling group to use Elastic Load Balancing health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the Elastic Load Balancing health checks. If you attach multiple load balancer target groups or Classic Load Balancers to the group, all of them must report that an instance is healthy in order for it to consider the instance healthy. If any one of them reports an instance as unhealthy, the Auto Scaling group replaces the instance, even if others report it as healthy.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:23.095">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" name="Connect to AWS EC2 Auto Scaling using an Interface VPC Endpoint" issueId="" issueLink="" platform="" cost="0" risk="23" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Connect to AWS EC2 Auto Scaling using an Interface VPC Endpoint&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can improve the security posture of your VPC by configuring Amazon EC2 Auto Scaling to use an interface VPC endpoint. Interface endpoints are powered by AWS PrivateLink, a technology that enables you to privately access Amazon EC2 Auto Scaling APIs by restricting all network traffic between your VPC and Amazon EC2 Auto Scaling to the Amazon network. With interface endpoints, you also don't need an internet gateway, a NAT device, or a virtual private gateway.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create an interface VPC endpoint&lt;/p&gt; 
&lt;p&gt;You can create a VPC endpoint for the Amazon EC2 Auto Scaling service using either the Amazon VPC console or the AWS Command Line Interface (AWS CLI).&lt;/p&gt; 
&lt;p&gt;Create an endpoint for Amazon EC2 Auto Scaling using the following service name:&lt;/p&gt; 
&lt;p&gt;com.amazonaws.region.autoscaling - Creates an endpoint for the Amazon EC2 Auto Scaling API operations.&lt;/p&gt; 
&lt;p&gt;cn.com.amazonaws.region.autoscaling - Creates an endpoint for the Amazon EC2 Auto Scaling API operations in the AWS China (Beijing) Region and AWS China (Ningxia) Region.&lt;/p&gt; 
&lt;p&gt;The following are the general steps for setting up an interface endpoint:&lt;/p&gt; 
&lt;p&gt;1. Choose the VPC in which to create the interface endpoint, and provide the name of the AWS service, endpoint service, or AWS Marketplace service to which you're connecting.&lt;/p&gt; 
&lt;p&gt;2. Choose a subnet in your VPC to use the interface endpoint. We create an endpoint network interface in the subnet. You can specify more than one subnet in different Availability Zones (as supported by the service) to help ensure that your interface endpoint is resilient to Availability Zone failures. In that case, we create an endpoint network interface in each subnet that you specify.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; An endpoint network interface is a requester-managed network interface. You can view it in your account, but you cannot manage it yourself. For more information, see Elastic Network Interfaces.&lt;/p&gt; 
&lt;p&gt;3. Specify the security groups to associate with the endpoint network interface. The security group rules control the traffic to the endpoint network interface from resources in your VPC. If you do not specify a security group, we associate the default security group for the VPC.&lt;/p&gt; 
&lt;p&gt;4. (Optional, AWS services and AWS Marketplace Partner services only) Enable private DNS for the endpoint to enable you to make requests to the service using its default DNS hostname.&lt;/p&gt; 
&lt;p&gt;Important&lt;br&gt; Private DNS is enabled by default for endpoints created for AWS services and AWS Marketplace Partner services.&lt;/p&gt; 
&lt;p&gt;Private DNS is enabled in the other subnets which are in the same VPC and Availability Zone or Local Zone.&lt;/p&gt; 
&lt;p&gt;5. When the service provider and the consumer are in different accounts, see Interface endpoint Availability Zone considerations for information about how to use Availability Zone IDs to identify the interface endpoint Availability Zone.&lt;/p&gt; 
&lt;p&gt;6. After you create the interface endpoint, it's available to use when it's accepted by the service provider. The service provider must configure the service to accept requests automatically or manually. AWS services and AWS Marketplace services generally accept all endpoint requests automatically.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon EC2 Auto Scaling and interface VPC endpoints" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-vpc-endpoints.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Viewing your interface endpoint&lt;br /&gt;
After you've created an interface endpoint, you can view information about it using the Console or the Command line.&lt;/p&gt;

	&lt;p&gt;To view information about an interface endpoint using the console:&lt;/p&gt;

	&lt;p&gt;1. Open the Amazon VPC console.&lt;/p&gt;

	&lt;p&gt;2. In the navigation pane, choose Endpoints and select your interface endpoint.&lt;/p&gt;

	&lt;p&gt;3. To view information about the interface endpoint, choose Details. The DNS Names field displays the DNS names to use to access the service.&lt;/p&gt;

	&lt;p&gt;4. To view the subnets in which the interface endpoint has been created, and the ID of the endpoint network interface in each subnet, choose Subnets.&lt;/p&gt;

	&lt;p&gt;5. To view the security groups that are associated with the endpoint network interface, choose Security Groups.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:23.094">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" name="Control access to AWS EC2 Auto Scaling" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Control access to AWS EC2 Auto Scaling&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; By default, IAM users and roles don't have permission to create or modify Amazon EC2 Auto Scaling resources. They also can't perform tasks using the AWS Management Console, AWS CLI, or AWS API. An IAM administrator must create IAM policies that give users and roles permission to perform specific API operations on the specified resources they need. The administrator must then attach those policies to the IAM users or groups that require those permissions.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Example - Control access to creating and managing Auto Scaling groups and scaling policies&lt;/p&gt; 
&lt;p&gt;The following policy gives users permissions to use all Amazon EC2 Auto Scaling actions that include the string Scaling in their names, as long as the Auto Scaling group has the tag purpose=webserver. Because the Describe actions do not support resource-level permissions, you must specify them in a separate statement without conditions.&lt;/p&gt; 
&lt;p&gt;{ "Version": "2012-10-17", "Statement": [ { "Effect": "Allow", "Action": ["autoscaling:&lt;strong&gt;Scaling&lt;/strong&gt;"], "Resource": "*", "Condition": { "StringEquals": { "autoscaling:ResourceTag/purpose": "webserver" } } }, { "Effect": "Allow", "Action": "autoscaling:Describe*Scaling*", "Resource": "*" }]&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon EC2 Auto Scaling identity-based policy examples" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/security_iam_id-based-policy-examples.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:23.088">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" name="Create a CloudWatch alarms for AWS EC2 Auto Scaling group" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create a CloudWatch alarms for AWS EC2 Auto Scaling group&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; One purpose for monitoring metrics is to verify that your application is performing as expected. In Amazon CloudWatch, you can create an alarm that sends a notification when the value of a certain metric is beyond what you consider an acceptable threshold. The metrics are available at one-minute granularity at no additional charge, but you must enable them. &lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Start by identifying the metric to monitor. For example, you can configure an alarm to watch over the average CPU utilization of the EC2 instances in your Auto Scaling group. The action can be a notification that is sent to you when the average CPU utilization of the group's instances breaches the threshold that you specified for the consecutive periods you specified. For example, if the metric stays at or above 70 percent for 4 consecutive periods of 1 minute each.&lt;/p&gt; 
&lt;p&gt;To create a CloudWatch alarm for your Auto Scaling group&lt;/p&gt; 
&lt;p&gt;1. Open the CloudWatch console.&lt;/p&gt; 
&lt;p&gt;2. If necessary, change the region. From the navigation bar, select the region where your Auto Scaling group resides.&lt;/p&gt; 
&lt;p&gt;3. On the navigation pane, choose Alarms and then choose Create alarm.&lt;/p&gt; 
&lt;p&gt;4. Choose Select metric.&lt;/p&gt; 
&lt;p&gt;5. On the All metrics tab, select a metric as follows:&lt;/p&gt; 
&lt;p&gt;- To display only the metrics reported for your Auto Scaling groups, choose EC2, and then choose By Auto Scaling Group. To view the metrics for a single Auto Scaling group, type its name in the search field.&lt;/p&gt; 
&lt;p&gt;- Select the row that contains the metric for the Auto Scaling group that you want to create an alarm on.&lt;/p&gt; 
&lt;p&gt;- Choose Select metric. The Specify metric and conditions page appears, showing a graph and other information about the metric.&lt;/p&gt; 
&lt;p&gt;6. For Period, choose the evaluation period for the alarm, for example, 1 minute. When evaluating the alarm, each period is aggregated into one data point.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; A shorter period creates a more sensitive alarm.&lt;/p&gt; 
&lt;p&gt;7. Under Conditions, do the following:&lt;/p&gt; 
&lt;p&gt;- For Threshold type, choose Static.&lt;/p&gt; 
&lt;p&gt;- For Whenever metric is, specify whether you want the value of the metric to be greater than, greater than or equal to, less than, or less than or equal to the threshold to trigger the alarm. Then, under than, enter the threshold value that you want to trigger the alarm.&lt;/p&gt; 
&lt;p&gt;8. Under Additional configuration, do the following:&lt;/p&gt; 
&lt;p&gt;- For Datapoints to alarm, enter the number of data points (evaluation periods) during which the metric value must meet the threshold conditions to trigger the alarm. For example, two consecutive periods of 5 minutes would take 10 minutes to trigger the alarm.&lt;/p&gt; 
&lt;p&gt;- For Missing data treatment, choose what you want the alarm to do if some data is missing. For more information, see Configuring how CloudWatch alarms treat missing data in the Amazon CloudWatch User Guide.&lt;/p&gt; 
&lt;p&gt;9. Choose Next.&lt;/p&gt; 
&lt;p&gt;10. Under Notification, you can choose or create the Amazon SNS topic you want to use to receive notifications. Otherwise, you can remove the notification now and add one later when you are ready.&lt;/p&gt; 
&lt;p&gt;11. Choose Next.&lt;/p&gt; 
&lt;p&gt;12. Enter a name and, optionally, a description for the alarm, and then choose Next.&lt;/p&gt; 
&lt;p&gt;13. Choose Create Alarm.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring CloudWatch metrics for your Auto Scaling groups and instances" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;To test your rule that triggers on an API call, you have to trigger it with its Specific operation as defined into the CloudWatch console.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:23.093">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" name="Enable Auto Scaling group metrics" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable AWS EC2 Auto Scaling group metrics&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Metrics are the fundamental concept in CloudWatch. A metric represents a time-ordered set of data points that are published to CloudWatch. Think of a metric as a variable to monitor, and the data points as representing the values of that variable over time. You can use these metrics to verify that your system is performing as expected.&lt;br&gt; Amazon EC2 Auto Scaling publishes data points to CloudWatch about your Auto Scaling groups. The metrics are available at one-minute granularity at no additional charge, but you must enable them. By doing this, you get continuous visibility into the operations of your Auto Scaling groups so that you can quickly respond to changes in your workloads.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable Auto Scaling group metrics (console)&lt;/p&gt; 
&lt;p&gt;When you enable Auto Scaling group metrics, your Auto Scaling group sends sampled data to CloudWatch every minute. There is no charge for enabling these metrics.&lt;/p&gt; 
&lt;p&gt;To enable group metrics&lt;/p&gt; 
&lt;p&gt;1. Open the Amazon EC2 Auto Scaling console.&lt;/p&gt; 
&lt;p&gt;2. Select the check box next to your Auto Scaling group. A split pane opens up in the bottom part of the page, showing information about the group that's selected.&lt;/p&gt; 
&lt;p&gt;3. On the Monitoring tab, select the Auto Scaling group metrics collection, Enable check box located at the top of the page under Auto Scaling.&lt;/p&gt; 
&lt;p&gt;Enable Auto Scaling group metrics (AWS CLI)&lt;/p&gt; 
&lt;p&gt;To enable group metrics&lt;/p&gt; 
&lt;p&gt;Enable one or more group metrics using the enable-metrics-collection command. For example, the following command enables the GroupDesiredCapacity metric.&lt;/p&gt; 
&lt;p&gt;aws autoscaling enable-metrics-collection -auto-scaling-group-name my-asg \&lt;br&gt; -metrics GroupDesiredCapacity -granularity "1Minute"&lt;/p&gt; 
&lt;p&gt;If you omit the -metrics option, all metrics are enabled.&lt;/p&gt; 
&lt;p&gt;aws autoscaling enable-metrics-collection -auto-scaling-group-name my-asg \&lt;br&gt; -granularity "1Minute"&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring CloudWatch metrics for your Auto Scaling groups and instances" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;To view CloudWatch metrics (AWS CLI)&lt;/p&gt;

	&lt;p&gt;To view all metrics for all your Auto Scaling groups, use the following list-metrics command.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling"&lt;/p&gt;

	&lt;p&gt;To view the metrics for a single Auto Scaling group, specify the AutoScalingGroupName dimension as follows.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling" -dimensions Name=AutoScalingGroupName,Value=my-asg&lt;/p&gt;

	&lt;p&gt;To view a single metric for all your Auto Scaling groups, specify the name of the metric as follows.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling" -metric-name GroupDesiredCapacity&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:23.093">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.5-1.6" name="Encrypt all EBS Volumes for tier" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;&lt;br&gt;Elastic Block Storage (EBS) volumes can be encrypted using AWS Key Management Service (KMS). In this configuration, encryption and decryption are handled transparently and require no additional action from the user, an Amazon EC2 instance, or an application. When an encrypted Amazon EBS volume is attached to a supported Amazon EC2 instance type, the data stored at rest on the volume, disk I/O, and snapshots created from the volume are all encrypted. The encryption occurs on the servers that host Amazon EC2 instances. Additionally, snapshots of encrypted volumes are automatically encrypted, and volumes that are created from encrypted snapshots are also automatically encrypted. It is recommended that all EBS volumes for the web tier be encrypted.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;*Note: references to Web tier are also applicable to App tier.&lt;/p&gt;&lt;p&gt;&lt;br&gt;Using the Amazon unified command line interface:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Note all the volume ids of unencrypted EBS volumes and create a snapshot for each of them:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-snapshot --volume-id &amp;lt;unencrypted_ebs_volume&amp;gt; --description "Snapshot for encryption operation"&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Note the SnapshotIdelement from the output of step 1 and copy the snapshot to an encrypted snapshot using the KMS key created for the Web-tier:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 copy-snapshot --source-region &amp;lt;application_region&amp;gt; --source-snapshot-id &amp;lt;unencrypted_ebs_snapshot&amp;gt; --description "Encrypted snapshot." --encrypted --kms-keyid &amp;lt;web_tier_kms_key&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Note the SnapshotId element from the output of step 2 and create a new EBS volume from the encrypted snapshot in the same Availability Zone as the unencrypted volume:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-volume --availability-zone &amp;lt;application_az&amp;gt; --snapshot-id &amp;lt;encrypted_ebs_snapshot&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Tag the newly created EBS volume using the Volume Id from the previous step &amp;lt;encrypted_ebs_volume&amp;gt;:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-tags --resources &amp;lt;encrypted_ebs_volume&amp;gt; --tags Key=&amp;lt;web_tier_tag&amp;gt;,Value=&amp;lt;web_tier_tag_value&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Delete unencrypted EBS volume:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 delete-volume --volume-id &amp;lt;unencrypted_ebs_volume&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Copy snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/copy-snapshot.html"/>
            <reference name="Create snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-snapshot.html"/>
            <reference name="Create volume" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-volume.html"/>
            <reference name="Delete volume" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-volume.html"/>
            <reference name="Describe volumes" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-volumes.html"/>
            <reference name="EBS Encryption Considerations" url="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html"/>
          </references>
          <standards>
            <standard ref="1.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="1.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Using the Amazon unified command line interface: (Note that you should replace &amp;lt;web_tier_tag&amp;gt;:&amp;lt;web_tier_tag_value&amp;gt; with your own tag and value for the Web tier)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Note the EBS volume ids, Instance ids, Availability Zones, and check if the Encrypted element is True or False&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 describe-volumes --filters Name=tag:&amp;lt;web_tier_tag&amp;gt;,Values=&amp;lt;web_tier_tag_value&amp;gt; --query 'Volumes[*].{VolumeId:VolumeId, Encrypted:Encrypted, AvailabilityZone:AvailabilityZone, InstanceId:Attachments[*].InstanceId}' --output table&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:23.095">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.1" name="Tag all resources" issueId="" issueLink="" platform="" cost="0" risk="23" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
 &lt;b&gt;Description&lt;/b&gt;:
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Tags enable customers to categorize AWS resources in different ways, for example, by purpose, owner, or environment.
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Each tag consists of a key and an optional value, both of which customer's define.
  You should define a set of tags for the following items to help you track each instance's owner and operating environment, cost center, and other items.
&lt;/div&gt;
&lt;div&gt;
 &lt;ol&gt;
  &lt;li&gt;Amazon EC2 instances&lt;/li&gt;
  &lt;li&gt;ELB&lt;/li&gt;
  &lt;li&gt;EBS Volumes&lt;/li&gt;
  &lt;li&gt;S3 Buckets&lt;/li&gt;
 &lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  A resource may have up to 10 tags associated with key &amp;amp; value such as:
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Key=tier, Value=app&lt;/li&gt;
  &lt;li&gt;Key=environment, Value=production&lt;/li&gt;
  &lt;li&gt;Key=costcenter, Value=sales&lt;/li&gt;
 &lt;/ul&gt;
 &lt;div&gt;
  &lt;b&gt;Remediation:&lt;/b&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;&lt;br&gt;&lt;/b&gt;
  Tag all your 3 tier Web Application resources based on their tier membership (Web, App, Data), and your organizational requirements.
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Cloud Compliance" url="https://d0.awsstatic.com/whitepapers/compliance/AWS_Anitian_Wookbook_PCI_Cloud_Compliance.pdf"/>
            <reference name="Resource groups and tagging" url="https://aws.amazon.com/blogs/aws/resource-groups-and-tagging/"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify tags are being used.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:23.095">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="VOLUMES-NOT-ENCRYPTED">
                  <countermeasures>
                    <countermeasure ref="aws-tier-1.5-1.6" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-1.5-1.6" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="OWASP-A10-2017" issueId="" issueLink="" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" mitigation="34"/>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" mitigation="33"/>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" mitigation="34"/>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" mitigation="33"/>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-NET-01">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.1" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" mitigation="50"/>
                <countermeasure ref="aws-tier-5.1" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="a13b5486-36cf-498b-b2f4-0f804f2a2fa9" diagramComponentId="fe24f873-623b-4724-9ed1-2a82ac42601a" ref="0a2abea7-8c6f-4a76-988c-bc3439160cc7" name="AWS EC2 Auto Scaling" desc="" library="Hydras-AWS-Foundation" parentComponentRef="ade2b1c6-8bd1-4ccb-a9eb-4ca92d553182" componentDefinitionRef="CD-EC2-AUTO-SCALING" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.269">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.269">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.268">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="VOLUMES-NOT-ENCRYPTED" name="The volumes are not encrypted" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Volumes are not encrypted, leading to the disclosure of information.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.269">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-01" name="Unauthorized connection attempts are allowed on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To avoid this, access to network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.269">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" name="Add Elastic Load Balancing health checks to an Auto Scaling group" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The default health checks for an Auto Scaling group are EC2 status checks only. If an instance fails these status checks, it is marked unhealthy and is terminated while Amazon EC2 Auto Scaling launches a new replacement instance.&lt;/p&gt;&lt;p&gt;You can attach one or more load balancer target groups, one or more Classic Load Balancers, or both to your Auto Scaling group. However, by default, the Auto Scaling group does not consider an instance unhealthy and replace it if it fails the Elastic Load Balancing health checks.&lt;/p&gt;&lt;p&gt;Use the following procedure to add Elastic Load Balancing (ELB) health checks to an Auto Scaling group.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;To add Elastic Load Balancing health checks&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Open the Amazon EC2 Auto Scaling console at &lt;a href="https://console.aws.amazon.com/ec2autoscaling/"&gt;https://console.aws.amazon.com/ec2autoscaling/&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Select the check box next to an existing group.&lt;/p&gt;&lt;p&gt;A split pane opens up in the bottom of the &lt;strong&gt;Auto Scaling groups&lt;/strong&gt; page.&lt;/p&gt;&lt;p&gt;On the &lt;strong&gt;Details&lt;/strong&gt; tab, choose &lt;strong&gt;Health checks&lt;/strong&gt;, &lt;strong&gt;Edit&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;For &lt;strong&gt;Health check type&lt;/strong&gt;, select &lt;strong&gt;Enable ELB health checks&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;For &lt;strong&gt;Health check grace period&lt;/strong&gt;, enter the amount of time, in seconds, that Amazon EC2 Auto Scaling needs to wait before checking the health status of an instance after it enters the InService state. For more information, see &lt;a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-health-checks.html#health-check-grace-period"&gt;Health check grace period&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Choose &lt;strong&gt;Update&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;On the &lt;strong&gt;Instance management&lt;/strong&gt; tab, under &lt;strong&gt;Instances&lt;/strong&gt;, you can view the health status of instances. The &lt;strong&gt;Health Status&lt;/strong&gt; column displays the results of the newly added health checks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Add Elastic Load Balancing health checks" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-add-elb-healthcheck.html"/>
          </references>
          <standards>
            <standard ref="2.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;To ensure that your Auto Scaling group can determine instance health based on additional load balancer tests, configure the Auto Scaling group to use Elastic Load Balancing (ELB) health checks. The load balancer periodically sends pings, attempts connections, or sends requests to test the EC2 instances and determines if an instance is unhealthy. If you configure the Auto Scaling group to use Elastic Load Balancing health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the Elastic Load Balancing health checks. If you attach multiple load balancer target groups or Classic Load Balancers to the group, all of them must report that an instance is healthy in order for it to consider the instance healthy. If any one of them reports an instance as unhealthy, the Auto Scaling group replaces the instance, even if others report it as healthy.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.186">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" name="Connect to AWS EC2 Auto Scaling using an Interface VPC Endpoint" issueId="" issueLink="" platform="" cost="0" risk="23" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Connect to AWS EC2 Auto Scaling using an Interface VPC Endpoint&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can improve the security posture of your VPC by configuring Amazon EC2 Auto Scaling to use an interface VPC endpoint. Interface endpoints are powered by AWS PrivateLink, a technology that enables you to privately access Amazon EC2 Auto Scaling APIs by restricting all network traffic between your VPC and Amazon EC2 Auto Scaling to the Amazon network. With interface endpoints, you also don't need an internet gateway, a NAT device, or a virtual private gateway.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create an interface VPC endpoint&lt;/p&gt; 
&lt;p&gt;You can create a VPC endpoint for the Amazon EC2 Auto Scaling service using either the Amazon VPC console or the AWS Command Line Interface (AWS CLI).&lt;/p&gt; 
&lt;p&gt;Create an endpoint for Amazon EC2 Auto Scaling using the following service name:&lt;/p&gt; 
&lt;p&gt;com.amazonaws.region.autoscaling - Creates an endpoint for the Amazon EC2 Auto Scaling API operations.&lt;/p&gt; 
&lt;p&gt;cn.com.amazonaws.region.autoscaling - Creates an endpoint for the Amazon EC2 Auto Scaling API operations in the AWS China (Beijing) Region and AWS China (Ningxia) Region.&lt;/p&gt; 
&lt;p&gt;The following are the general steps for setting up an interface endpoint:&lt;/p&gt; 
&lt;p&gt;1. Choose the VPC in which to create the interface endpoint, and provide the name of the AWS service, endpoint service, or AWS Marketplace service to which you're connecting.&lt;/p&gt; 
&lt;p&gt;2. Choose a subnet in your VPC to use the interface endpoint. We create an endpoint network interface in the subnet. You can specify more than one subnet in different Availability Zones (as supported by the service) to help ensure that your interface endpoint is resilient to Availability Zone failures. In that case, we create an endpoint network interface in each subnet that you specify.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; An endpoint network interface is a requester-managed network interface. You can view it in your account, but you cannot manage it yourself. For more information, see Elastic Network Interfaces.&lt;/p&gt; 
&lt;p&gt;3. Specify the security groups to associate with the endpoint network interface. The security group rules control the traffic to the endpoint network interface from resources in your VPC. If you do not specify a security group, we associate the default security group for the VPC.&lt;/p&gt; 
&lt;p&gt;4. (Optional, AWS services and AWS Marketplace Partner services only) Enable private DNS for the endpoint to enable you to make requests to the service using its default DNS hostname.&lt;/p&gt; 
&lt;p&gt;Important&lt;br&gt; Private DNS is enabled by default for endpoints created for AWS services and AWS Marketplace Partner services.&lt;/p&gt; 
&lt;p&gt;Private DNS is enabled in the other subnets which are in the same VPC and Availability Zone or Local Zone.&lt;/p&gt; 
&lt;p&gt;5. When the service provider and the consumer are in different accounts, see Interface endpoint Availability Zone considerations for information about how to use Availability Zone IDs to identify the interface endpoint Availability Zone.&lt;/p&gt; 
&lt;p&gt;6. After you create the interface endpoint, it's available to use when it's accepted by the service provider. The service provider must configure the service to accept requests automatically or manually. AWS services and AWS Marketplace services generally accept all endpoint requests automatically.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon EC2 Auto Scaling and interface VPC endpoints" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-vpc-endpoints.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Viewing your interface endpoint&lt;br /&gt;
After you've created an interface endpoint, you can view information about it using the Console or the Command line.&lt;/p&gt;

	&lt;p&gt;To view information about an interface endpoint using the console:&lt;/p&gt;

	&lt;p&gt;1. Open the Amazon VPC console.&lt;/p&gt;

	&lt;p&gt;2. In the navigation pane, choose Endpoints and select your interface endpoint.&lt;/p&gt;

	&lt;p&gt;3. To view information about the interface endpoint, choose Details. The DNS Names field displays the DNS names to use to access the service.&lt;/p&gt;

	&lt;p&gt;4. To view the subnets in which the interface endpoint has been created, and the ID of the endpoint network interface in each subnet, choose Subnets.&lt;/p&gt;

	&lt;p&gt;5. To view the security groups that are associated with the endpoint network interface, choose Security Groups.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.186">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" name="Control access to AWS EC2 Auto Scaling" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Control access to AWS EC2 Auto Scaling&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; By default, IAM users and roles don't have permission to create or modify Amazon EC2 Auto Scaling resources. They also can't perform tasks using the AWS Management Console, AWS CLI, or AWS API. An IAM administrator must create IAM policies that give users and roles permission to perform specific API operations on the specified resources they need. The administrator must then attach those policies to the IAM users or groups that require those permissions.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Example - Control access to creating and managing Auto Scaling groups and scaling policies&lt;/p&gt; 
&lt;p&gt;The following policy gives users permissions to use all Amazon EC2 Auto Scaling actions that include the string Scaling in their names, as long as the Auto Scaling group has the tag purpose=webserver. Because the Describe actions do not support resource-level permissions, you must specify them in a separate statement without conditions.&lt;/p&gt; 
&lt;p&gt;{ "Version": "2012-10-17", "Statement": [ { "Effect": "Allow", "Action": ["autoscaling:&lt;strong&gt;Scaling&lt;/strong&gt;"], "Resource": "*", "Condition": { "StringEquals": { "autoscaling:ResourceTag/purpose": "webserver" } } }, { "Effect": "Allow", "Action": "autoscaling:Describe*Scaling*", "Resource": "*" }]&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon EC2 Auto Scaling identity-based policy examples" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/security_iam_id-based-policy-examples.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.185">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" name="Create a CloudWatch alarms for AWS EC2 Auto Scaling group" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create a CloudWatch alarms for AWS EC2 Auto Scaling group&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; One purpose for monitoring metrics is to verify that your application is performing as expected. In Amazon CloudWatch, you can create an alarm that sends a notification when the value of a certain metric is beyond what you consider an acceptable threshold. The metrics are available at one-minute granularity at no additional charge, but you must enable them. &lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Start by identifying the metric to monitor. For example, you can configure an alarm to watch over the average CPU utilization of the EC2 instances in your Auto Scaling group. The action can be a notification that is sent to you when the average CPU utilization of the group's instances breaches the threshold that you specified for the consecutive periods you specified. For example, if the metric stays at or above 70 percent for 4 consecutive periods of 1 minute each.&lt;/p&gt; 
&lt;p&gt;To create a CloudWatch alarm for your Auto Scaling group&lt;/p&gt; 
&lt;p&gt;1. Open the CloudWatch console.&lt;/p&gt; 
&lt;p&gt;2. If necessary, change the region. From the navigation bar, select the region where your Auto Scaling group resides.&lt;/p&gt; 
&lt;p&gt;3. On the navigation pane, choose Alarms and then choose Create alarm.&lt;/p&gt; 
&lt;p&gt;4. Choose Select metric.&lt;/p&gt; 
&lt;p&gt;5. On the All metrics tab, select a metric as follows:&lt;/p&gt; 
&lt;p&gt;- To display only the metrics reported for your Auto Scaling groups, choose EC2, and then choose By Auto Scaling Group. To view the metrics for a single Auto Scaling group, type its name in the search field.&lt;/p&gt; 
&lt;p&gt;- Select the row that contains the metric for the Auto Scaling group that you want to create an alarm on.&lt;/p&gt; 
&lt;p&gt;- Choose Select metric. The Specify metric and conditions page appears, showing a graph and other information about the metric.&lt;/p&gt; 
&lt;p&gt;6. For Period, choose the evaluation period for the alarm, for example, 1 minute. When evaluating the alarm, each period is aggregated into one data point.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; A shorter period creates a more sensitive alarm.&lt;/p&gt; 
&lt;p&gt;7. Under Conditions, do the following:&lt;/p&gt; 
&lt;p&gt;- For Threshold type, choose Static.&lt;/p&gt; 
&lt;p&gt;- For Whenever metric is, specify whether you want the value of the metric to be greater than, greater than or equal to, less than, or less than or equal to the threshold to trigger the alarm. Then, under than, enter the threshold value that you want to trigger the alarm.&lt;/p&gt; 
&lt;p&gt;8. Under Additional configuration, do the following:&lt;/p&gt; 
&lt;p&gt;- For Datapoints to alarm, enter the number of data points (evaluation periods) during which the metric value must meet the threshold conditions to trigger the alarm. For example, two consecutive periods of 5 minutes would take 10 minutes to trigger the alarm.&lt;/p&gt; 
&lt;p&gt;- For Missing data treatment, choose what you want the alarm to do if some data is missing. For more information, see Configuring how CloudWatch alarms treat missing data in the Amazon CloudWatch User Guide.&lt;/p&gt; 
&lt;p&gt;9. Choose Next.&lt;/p&gt; 
&lt;p&gt;10. Under Notification, you can choose or create the Amazon SNS topic you want to use to receive notifications. Otherwise, you can remove the notification now and add one later when you are ready.&lt;/p&gt; 
&lt;p&gt;11. Choose Next.&lt;/p&gt; 
&lt;p&gt;12. Enter a name and, optionally, a description for the alarm, and then choose Next.&lt;/p&gt; 
&lt;p&gt;13. Choose Create Alarm.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring CloudWatch metrics for your Auto Scaling groups and instances" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;To test your rule that triggers on an API call, you have to trigger it with its Specific operation as defined into the CloudWatch console.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.186">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" name="Enable Auto Scaling group metrics" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable AWS EC2 Auto Scaling group metrics&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Metrics are the fundamental concept in CloudWatch. A metric represents a time-ordered set of data points that are published to CloudWatch. Think of a metric as a variable to monitor, and the data points as representing the values of that variable over time. You can use these metrics to verify that your system is performing as expected.&lt;br&gt; Amazon EC2 Auto Scaling publishes data points to CloudWatch about your Auto Scaling groups. The metrics are available at one-minute granularity at no additional charge, but you must enable them. By doing this, you get continuous visibility into the operations of your Auto Scaling groups so that you can quickly respond to changes in your workloads.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable Auto Scaling group metrics (console)&lt;/p&gt; 
&lt;p&gt;When you enable Auto Scaling group metrics, your Auto Scaling group sends sampled data to CloudWatch every minute. There is no charge for enabling these metrics.&lt;/p&gt; 
&lt;p&gt;To enable group metrics&lt;/p&gt; 
&lt;p&gt;1. Open the Amazon EC2 Auto Scaling console.&lt;/p&gt; 
&lt;p&gt;2. Select the check box next to your Auto Scaling group. A split pane opens up in the bottom part of the page, showing information about the group that's selected.&lt;/p&gt; 
&lt;p&gt;3. On the Monitoring tab, select the Auto Scaling group metrics collection, Enable check box located at the top of the page under Auto Scaling.&lt;/p&gt; 
&lt;p&gt;Enable Auto Scaling group metrics (AWS CLI)&lt;/p&gt; 
&lt;p&gt;To enable group metrics&lt;/p&gt; 
&lt;p&gt;Enable one or more group metrics using the enable-metrics-collection command. For example, the following command enables the GroupDesiredCapacity metric.&lt;/p&gt; 
&lt;p&gt;aws autoscaling enable-metrics-collection -auto-scaling-group-name my-asg \&lt;br&gt; -metrics GroupDesiredCapacity -granularity "1Minute"&lt;/p&gt; 
&lt;p&gt;If you omit the -metrics option, all metrics are enabled.&lt;/p&gt; 
&lt;p&gt;aws autoscaling enable-metrics-collection -auto-scaling-group-name my-asg \&lt;br&gt; -granularity "1Minute"&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring CloudWatch metrics for your Auto Scaling groups and instances" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;To view CloudWatch metrics (AWS CLI)&lt;/p&gt;

	&lt;p&gt;To view all metrics for all your Auto Scaling groups, use the following list-metrics command.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling"&lt;/p&gt;

	&lt;p&gt;To view the metrics for a single Auto Scaling group, specify the AutoScalingGroupName dimension as follows.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling" -dimensions Name=AutoScalingGroupName,Value=my-asg&lt;/p&gt;

	&lt;p&gt;To view a single metric for all your Auto Scaling groups, specify the name of the metric as follows.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling" -metric-name GroupDesiredCapacity&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.186">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.5-1.6" name="Encrypt all EBS Volumes for tier" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;&lt;br&gt;Elastic Block Storage (EBS) volumes can be encrypted using AWS Key Management Service (KMS). In this configuration, encryption and decryption are handled transparently and require no additional action from the user, an Amazon EC2 instance, or an application. When an encrypted Amazon EBS volume is attached to a supported Amazon EC2 instance type, the data stored at rest on the volume, disk I/O, and snapshots created from the volume are all encrypted. The encryption occurs on the servers that host Amazon EC2 instances. Additionally, snapshots of encrypted volumes are automatically encrypted, and volumes that are created from encrypted snapshots are also automatically encrypted. It is recommended that all EBS volumes for the web tier be encrypted.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;*Note: references to Web tier are also applicable to App tier.&lt;/p&gt;&lt;p&gt;&lt;br&gt;Using the Amazon unified command line interface:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Note all the volume ids of unencrypted EBS volumes and create a snapshot for each of them:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-snapshot --volume-id &amp;lt;unencrypted_ebs_volume&amp;gt; --description "Snapshot for encryption operation"&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Note the SnapshotIdelement from the output of step 1 and copy the snapshot to an encrypted snapshot using the KMS key created for the Web-tier:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 copy-snapshot --source-region &amp;lt;application_region&amp;gt; --source-snapshot-id &amp;lt;unencrypted_ebs_snapshot&amp;gt; --description "Encrypted snapshot." --encrypted --kms-keyid &amp;lt;web_tier_kms_key&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Note the SnapshotId element from the output of step 2 and create a new EBS volume from the encrypted snapshot in the same Availability Zone as the unencrypted volume:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-volume --availability-zone &amp;lt;application_az&amp;gt; --snapshot-id &amp;lt;encrypted_ebs_snapshot&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Tag the newly created EBS volume using the Volume Id from the previous step &amp;lt;encrypted_ebs_volume&amp;gt;:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-tags --resources &amp;lt;encrypted_ebs_volume&amp;gt; --tags Key=&amp;lt;web_tier_tag&amp;gt;,Value=&amp;lt;web_tier_tag_value&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Delete unencrypted EBS volume:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 delete-volume --volume-id &amp;lt;unencrypted_ebs_volume&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Copy snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/copy-snapshot.html"/>
            <reference name="Create snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-snapshot.html"/>
            <reference name="Create volume" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-volume.html"/>
            <reference name="Delete volume" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-volume.html"/>
            <reference name="Describe volumes" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-volumes.html"/>
            <reference name="EBS Encryption Considerations" url="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html"/>
          </references>
          <standards>
            <standard ref="1.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="1.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Using the Amazon unified command line interface: (Note that you should replace &amp;lt;web_tier_tag&amp;gt;:&amp;lt;web_tier_tag_value&amp;gt; with your own tag and value for the Web tier)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Note the EBS volume ids, Instance ids, Availability Zones, and check if the Encrypted element is True or False&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 describe-volumes --filters Name=tag:&amp;lt;web_tier_tag&amp;gt;,Values=&amp;lt;web_tier_tag_value&amp;gt; --query 'Volumes[*].{VolumeId:VolumeId, Encrypted:Encrypted, AvailabilityZone:AvailabilityZone, InstanceId:Attachments[*].InstanceId}' --output table&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.186">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.1" name="Tag all resources" issueId="" issueLink="" platform="" cost="0" risk="23" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
 &lt;b&gt;Description&lt;/b&gt;:
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Tags enable customers to categorize AWS resources in different ways, for example, by purpose, owner, or environment.
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Each tag consists of a key and an optional value, both of which customer's define.
  You should define a set of tags for the following items to help you track each instance's owner and operating environment, cost center, and other items.
&lt;/div&gt;
&lt;div&gt;
 &lt;ol&gt;
  &lt;li&gt;Amazon EC2 instances&lt;/li&gt;
  &lt;li&gt;ELB&lt;/li&gt;
  &lt;li&gt;EBS Volumes&lt;/li&gt;
  &lt;li&gt;S3 Buckets&lt;/li&gt;
 &lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  A resource may have up to 10 tags associated with key &amp;amp; value such as:
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Key=tier, Value=app&lt;/li&gt;
  &lt;li&gt;Key=environment, Value=production&lt;/li&gt;
  &lt;li&gt;Key=costcenter, Value=sales&lt;/li&gt;
 &lt;/ul&gt;
 &lt;div&gt;
  &lt;b&gt;Remediation:&lt;/b&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;&lt;br&gt;&lt;/b&gt;
  Tag all your 3 tier Web Application resources based on their tier membership (Web, App, Data), and your organizational requirements.
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Cloud Compliance" url="https://d0.awsstatic.com/whitepapers/compliance/AWS_Anitian_Wookbook_PCI_Cloud_Compliance.pdf"/>
            <reference name="Resource groups and tagging" url="https://aws.amazon.com/blogs/aws/resource-groups-and-tagging/"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify tags are being used.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.186">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="VOLUMES-NOT-ENCRYPTED">
                  <countermeasures>
                    <countermeasure ref="aws-tier-1.5-1.6" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-1.5-1.6" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="OWASP-A10-2017" issueId="" issueLink="" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" mitigation="34"/>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" mitigation="33"/>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" mitigation="34"/>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" mitigation="33"/>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-NET-01">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.1" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" mitigation="50"/>
                <countermeasure ref="aws-tier-5.1" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="fc35fefc-5543-46be-9fe7-45fc358f8c20" diagramComponentId="1e429ec4-da7a-40d0-a468-477caa923983" ref="13a5a171-3d3f-4360-8d9e-419c2c8f088d" name="AWS EC2 Auto Scaling" desc="" library="Hydras-AWS-Foundation" parentComponentRef="010dfedc-7ef1-48b5-bed8-3c139b9cd3c1" componentDefinitionRef="CD-EC2-AUTO-SCALING" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.691">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.691">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.690">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="VOLUMES-NOT-ENCRYPTED" name="The volumes are not encrypted" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Volumes are not encrypted, leading to the disclosure of information.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.691">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-01" name="Unauthorized connection attempts are allowed on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To avoid this, access to network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.691">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" name="Add Elastic Load Balancing health checks to an Auto Scaling group" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The default health checks for an Auto Scaling group are EC2 status checks only. If an instance fails these status checks, it is marked unhealthy and is terminated while Amazon EC2 Auto Scaling launches a new replacement instance.&lt;/p&gt;&lt;p&gt;You can attach one or more load balancer target groups, one or more Classic Load Balancers, or both to your Auto Scaling group. However, by default, the Auto Scaling group does not consider an instance unhealthy and replace it if it fails the Elastic Load Balancing health checks.&lt;/p&gt;&lt;p&gt;Use the following procedure to add Elastic Load Balancing (ELB) health checks to an Auto Scaling group.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;To add Elastic Load Balancing health checks&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Open the Amazon EC2 Auto Scaling console at &lt;a href="https://console.aws.amazon.com/ec2autoscaling/"&gt;https://console.aws.amazon.com/ec2autoscaling/&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Select the check box next to an existing group.&lt;/p&gt;&lt;p&gt;A split pane opens up in the bottom of the &lt;strong&gt;Auto Scaling groups&lt;/strong&gt; page.&lt;/p&gt;&lt;p&gt;On the &lt;strong&gt;Details&lt;/strong&gt; tab, choose &lt;strong&gt;Health checks&lt;/strong&gt;, &lt;strong&gt;Edit&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;For &lt;strong&gt;Health check type&lt;/strong&gt;, select &lt;strong&gt;Enable ELB health checks&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;For &lt;strong&gt;Health check grace period&lt;/strong&gt;, enter the amount of time, in seconds, that Amazon EC2 Auto Scaling needs to wait before checking the health status of an instance after it enters the InService state. For more information, see &lt;a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-health-checks.html#health-check-grace-period"&gt;Health check grace period&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Choose &lt;strong&gt;Update&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;On the &lt;strong&gt;Instance management&lt;/strong&gt; tab, under &lt;strong&gt;Instances&lt;/strong&gt;, you can view the health status of instances. The &lt;strong&gt;Health Status&lt;/strong&gt; column displays the results of the newly added health checks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Add Elastic Load Balancing health checks" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-add-elb-healthcheck.html"/>
          </references>
          <standards>
            <standard ref="2.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;To ensure that your Auto Scaling group can determine instance health based on additional load balancer tests, configure the Auto Scaling group to use Elastic Load Balancing (ELB) health checks. The load balancer periodically sends pings, attempts connections, or sends requests to test the EC2 instances and determines if an instance is unhealthy. If you configure the Auto Scaling group to use Elastic Load Balancing health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the Elastic Load Balancing health checks. If you attach multiple load balancer target groups or Classic Load Balancers to the group, all of them must report that an instance is healthy in order for it to consider the instance healthy. If any one of them reports an instance as unhealthy, the Auto Scaling group replaces the instance, even if others report it as healthy.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.607">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" name="Connect to AWS EC2 Auto Scaling using an Interface VPC Endpoint" issueId="" issueLink="" platform="" cost="0" risk="23" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Connect to AWS EC2 Auto Scaling using an Interface VPC Endpoint&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can improve the security posture of your VPC by configuring Amazon EC2 Auto Scaling to use an interface VPC endpoint. Interface endpoints are powered by AWS PrivateLink, a technology that enables you to privately access Amazon EC2 Auto Scaling APIs by restricting all network traffic between your VPC and Amazon EC2 Auto Scaling to the Amazon network. With interface endpoints, you also don't need an internet gateway, a NAT device, or a virtual private gateway.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create an interface VPC endpoint&lt;/p&gt; 
&lt;p&gt;You can create a VPC endpoint for the Amazon EC2 Auto Scaling service using either the Amazon VPC console or the AWS Command Line Interface (AWS CLI).&lt;/p&gt; 
&lt;p&gt;Create an endpoint for Amazon EC2 Auto Scaling using the following service name:&lt;/p&gt; 
&lt;p&gt;com.amazonaws.region.autoscaling - Creates an endpoint for the Amazon EC2 Auto Scaling API operations.&lt;/p&gt; 
&lt;p&gt;cn.com.amazonaws.region.autoscaling - Creates an endpoint for the Amazon EC2 Auto Scaling API operations in the AWS China (Beijing) Region and AWS China (Ningxia) Region.&lt;/p&gt; 
&lt;p&gt;The following are the general steps for setting up an interface endpoint:&lt;/p&gt; 
&lt;p&gt;1. Choose the VPC in which to create the interface endpoint, and provide the name of the AWS service, endpoint service, or AWS Marketplace service to which you're connecting.&lt;/p&gt; 
&lt;p&gt;2. Choose a subnet in your VPC to use the interface endpoint. We create an endpoint network interface in the subnet. You can specify more than one subnet in different Availability Zones (as supported by the service) to help ensure that your interface endpoint is resilient to Availability Zone failures. In that case, we create an endpoint network interface in each subnet that you specify.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; An endpoint network interface is a requester-managed network interface. You can view it in your account, but you cannot manage it yourself. For more information, see Elastic Network Interfaces.&lt;/p&gt; 
&lt;p&gt;3. Specify the security groups to associate with the endpoint network interface. The security group rules control the traffic to the endpoint network interface from resources in your VPC. If you do not specify a security group, we associate the default security group for the VPC.&lt;/p&gt; 
&lt;p&gt;4. (Optional, AWS services and AWS Marketplace Partner services only) Enable private DNS for the endpoint to enable you to make requests to the service using its default DNS hostname.&lt;/p&gt; 
&lt;p&gt;Important&lt;br&gt; Private DNS is enabled by default for endpoints created for AWS services and AWS Marketplace Partner services.&lt;/p&gt; 
&lt;p&gt;Private DNS is enabled in the other subnets which are in the same VPC and Availability Zone or Local Zone.&lt;/p&gt; 
&lt;p&gt;5. When the service provider and the consumer are in different accounts, see Interface endpoint Availability Zone considerations for information about how to use Availability Zone IDs to identify the interface endpoint Availability Zone.&lt;/p&gt; 
&lt;p&gt;6. After you create the interface endpoint, it's available to use when it's accepted by the service provider. The service provider must configure the service to accept requests automatically or manually. AWS services and AWS Marketplace services generally accept all endpoint requests automatically.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon EC2 Auto Scaling and interface VPC endpoints" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-vpc-endpoints.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Viewing your interface endpoint&lt;br /&gt;
After you've created an interface endpoint, you can view information about it using the Console or the Command line.&lt;/p&gt;

	&lt;p&gt;To view information about an interface endpoint using the console:&lt;/p&gt;

	&lt;p&gt;1. Open the Amazon VPC console.&lt;/p&gt;

	&lt;p&gt;2. In the navigation pane, choose Endpoints and select your interface endpoint.&lt;/p&gt;

	&lt;p&gt;3. To view information about the interface endpoint, choose Details. The DNS Names field displays the DNS names to use to access the service.&lt;/p&gt;

	&lt;p&gt;4. To view the subnets in which the interface endpoint has been created, and the ID of the endpoint network interface in each subnet, choose Subnets.&lt;/p&gt;

	&lt;p&gt;5. To view the security groups that are associated with the endpoint network interface, choose Security Groups.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.607">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" name="Control access to AWS EC2 Auto Scaling" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Control access to AWS EC2 Auto Scaling&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; By default, IAM users and roles don't have permission to create or modify Amazon EC2 Auto Scaling resources. They also can't perform tasks using the AWS Management Console, AWS CLI, or AWS API. An IAM administrator must create IAM policies that give users and roles permission to perform specific API operations on the specified resources they need. The administrator must then attach those policies to the IAM users or groups that require those permissions.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Example - Control access to creating and managing Auto Scaling groups and scaling policies&lt;/p&gt; 
&lt;p&gt;The following policy gives users permissions to use all Amazon EC2 Auto Scaling actions that include the string Scaling in their names, as long as the Auto Scaling group has the tag purpose=webserver. Because the Describe actions do not support resource-level permissions, you must specify them in a separate statement without conditions.&lt;/p&gt; 
&lt;p&gt;{ "Version": "2012-10-17", "Statement": [ { "Effect": "Allow", "Action": ["autoscaling:&lt;strong&gt;Scaling&lt;/strong&gt;"], "Resource": "*", "Condition": { "StringEquals": { "autoscaling:ResourceTag/purpose": "webserver" } } }, { "Effect": "Allow", "Action": "autoscaling:Describe*Scaling*", "Resource": "*" }]&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon EC2 Auto Scaling identity-based policy examples" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/security_iam_id-based-policy-examples.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.606">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" name="Create a CloudWatch alarms for AWS EC2 Auto Scaling group" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create a CloudWatch alarms for AWS EC2 Auto Scaling group&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; One purpose for monitoring metrics is to verify that your application is performing as expected. In Amazon CloudWatch, you can create an alarm that sends a notification when the value of a certain metric is beyond what you consider an acceptable threshold. The metrics are available at one-minute granularity at no additional charge, but you must enable them. &lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Start by identifying the metric to monitor. For example, you can configure an alarm to watch over the average CPU utilization of the EC2 instances in your Auto Scaling group. The action can be a notification that is sent to you when the average CPU utilization of the group's instances breaches the threshold that you specified for the consecutive periods you specified. For example, if the metric stays at or above 70 percent for 4 consecutive periods of 1 minute each.&lt;/p&gt; 
&lt;p&gt;To create a CloudWatch alarm for your Auto Scaling group&lt;/p&gt; 
&lt;p&gt;1. Open the CloudWatch console.&lt;/p&gt; 
&lt;p&gt;2. If necessary, change the region. From the navigation bar, select the region where your Auto Scaling group resides.&lt;/p&gt; 
&lt;p&gt;3. On the navigation pane, choose Alarms and then choose Create alarm.&lt;/p&gt; 
&lt;p&gt;4. Choose Select metric.&lt;/p&gt; 
&lt;p&gt;5. On the All metrics tab, select a metric as follows:&lt;/p&gt; 
&lt;p&gt;- To display only the metrics reported for your Auto Scaling groups, choose EC2, and then choose By Auto Scaling Group. To view the metrics for a single Auto Scaling group, type its name in the search field.&lt;/p&gt; 
&lt;p&gt;- Select the row that contains the metric for the Auto Scaling group that you want to create an alarm on.&lt;/p&gt; 
&lt;p&gt;- Choose Select metric. The Specify metric and conditions page appears, showing a graph and other information about the metric.&lt;/p&gt; 
&lt;p&gt;6. For Period, choose the evaluation period for the alarm, for example, 1 minute. When evaluating the alarm, each period is aggregated into one data point.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; A shorter period creates a more sensitive alarm.&lt;/p&gt; 
&lt;p&gt;7. Under Conditions, do the following:&lt;/p&gt; 
&lt;p&gt;- For Threshold type, choose Static.&lt;/p&gt; 
&lt;p&gt;- For Whenever metric is, specify whether you want the value of the metric to be greater than, greater than or equal to, less than, or less than or equal to the threshold to trigger the alarm. Then, under than, enter the threshold value that you want to trigger the alarm.&lt;/p&gt; 
&lt;p&gt;8. Under Additional configuration, do the following:&lt;/p&gt; 
&lt;p&gt;- For Datapoints to alarm, enter the number of data points (evaluation periods) during which the metric value must meet the threshold conditions to trigger the alarm. For example, two consecutive periods of 5 minutes would take 10 minutes to trigger the alarm.&lt;/p&gt; 
&lt;p&gt;- For Missing data treatment, choose what you want the alarm to do if some data is missing. For more information, see Configuring how CloudWatch alarms treat missing data in the Amazon CloudWatch User Guide.&lt;/p&gt; 
&lt;p&gt;9. Choose Next.&lt;/p&gt; 
&lt;p&gt;10. Under Notification, you can choose or create the Amazon SNS topic you want to use to receive notifications. Otherwise, you can remove the notification now and add one later when you are ready.&lt;/p&gt; 
&lt;p&gt;11. Choose Next.&lt;/p&gt; 
&lt;p&gt;12. Enter a name and, optionally, a description for the alarm, and then choose Next.&lt;/p&gt; 
&lt;p&gt;13. Choose Create Alarm.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring CloudWatch metrics for your Auto Scaling groups and instances" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;To test your rule that triggers on an API call, you have to trigger it with its Specific operation as defined into the CloudWatch console.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.607">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" name="Enable Auto Scaling group metrics" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable AWS EC2 Auto Scaling group metrics&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Metrics are the fundamental concept in CloudWatch. A metric represents a time-ordered set of data points that are published to CloudWatch. Think of a metric as a variable to monitor, and the data points as representing the values of that variable over time. You can use these metrics to verify that your system is performing as expected.&lt;br&gt; Amazon EC2 Auto Scaling publishes data points to CloudWatch about your Auto Scaling groups. The metrics are available at one-minute granularity at no additional charge, but you must enable them. By doing this, you get continuous visibility into the operations of your Auto Scaling groups so that you can quickly respond to changes in your workloads.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable Auto Scaling group metrics (console)&lt;/p&gt; 
&lt;p&gt;When you enable Auto Scaling group metrics, your Auto Scaling group sends sampled data to CloudWatch every minute. There is no charge for enabling these metrics.&lt;/p&gt; 
&lt;p&gt;To enable group metrics&lt;/p&gt; 
&lt;p&gt;1. Open the Amazon EC2 Auto Scaling console.&lt;/p&gt; 
&lt;p&gt;2. Select the check box next to your Auto Scaling group. A split pane opens up in the bottom part of the page, showing information about the group that's selected.&lt;/p&gt; 
&lt;p&gt;3. On the Monitoring tab, select the Auto Scaling group metrics collection, Enable check box located at the top of the page under Auto Scaling.&lt;/p&gt; 
&lt;p&gt;Enable Auto Scaling group metrics (AWS CLI)&lt;/p&gt; 
&lt;p&gt;To enable group metrics&lt;/p&gt; 
&lt;p&gt;Enable one or more group metrics using the enable-metrics-collection command. For example, the following command enables the GroupDesiredCapacity metric.&lt;/p&gt; 
&lt;p&gt;aws autoscaling enable-metrics-collection -auto-scaling-group-name my-asg \&lt;br&gt; -metrics GroupDesiredCapacity -granularity "1Minute"&lt;/p&gt; 
&lt;p&gt;If you omit the -metrics option, all metrics are enabled.&lt;/p&gt; 
&lt;p&gt;aws autoscaling enable-metrics-collection -auto-scaling-group-name my-asg \&lt;br&gt; -granularity "1Minute"&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring CloudWatch metrics for your Auto Scaling groups and instances" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;To view CloudWatch metrics (AWS CLI)&lt;/p&gt;

	&lt;p&gt;To view all metrics for all your Auto Scaling groups, use the following list-metrics command.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling"&lt;/p&gt;

	&lt;p&gt;To view the metrics for a single Auto Scaling group, specify the AutoScalingGroupName dimension as follows.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling" -dimensions Name=AutoScalingGroupName,Value=my-asg&lt;/p&gt;

	&lt;p&gt;To view a single metric for all your Auto Scaling groups, specify the name of the metric as follows.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling" -metric-name GroupDesiredCapacity&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.607">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.5-1.6" name="Encrypt all EBS Volumes for tier" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;&lt;br&gt;Elastic Block Storage (EBS) volumes can be encrypted using AWS Key Management Service (KMS). In this configuration, encryption and decryption are handled transparently and require no additional action from the user, an Amazon EC2 instance, or an application. When an encrypted Amazon EBS volume is attached to a supported Amazon EC2 instance type, the data stored at rest on the volume, disk I/O, and snapshots created from the volume are all encrypted. The encryption occurs on the servers that host Amazon EC2 instances. Additionally, snapshots of encrypted volumes are automatically encrypted, and volumes that are created from encrypted snapshots are also automatically encrypted. It is recommended that all EBS volumes for the web tier be encrypted.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;*Note: references to Web tier are also applicable to App tier.&lt;/p&gt;&lt;p&gt;&lt;br&gt;Using the Amazon unified command line interface:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Note all the volume ids of unencrypted EBS volumes and create a snapshot for each of them:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-snapshot --volume-id &amp;lt;unencrypted_ebs_volume&amp;gt; --description "Snapshot for encryption operation"&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Note the SnapshotIdelement from the output of step 1 and copy the snapshot to an encrypted snapshot using the KMS key created for the Web-tier:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 copy-snapshot --source-region &amp;lt;application_region&amp;gt; --source-snapshot-id &amp;lt;unencrypted_ebs_snapshot&amp;gt; --description "Encrypted snapshot." --encrypted --kms-keyid &amp;lt;web_tier_kms_key&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Note the SnapshotId element from the output of step 2 and create a new EBS volume from the encrypted snapshot in the same Availability Zone as the unencrypted volume:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-volume --availability-zone &amp;lt;application_az&amp;gt; --snapshot-id &amp;lt;encrypted_ebs_snapshot&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Tag the newly created EBS volume using the Volume Id from the previous step &amp;lt;encrypted_ebs_volume&amp;gt;:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-tags --resources &amp;lt;encrypted_ebs_volume&amp;gt; --tags Key=&amp;lt;web_tier_tag&amp;gt;,Value=&amp;lt;web_tier_tag_value&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Delete unencrypted EBS volume:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 delete-volume --volume-id &amp;lt;unencrypted_ebs_volume&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Copy snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/copy-snapshot.html"/>
            <reference name="Create snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-snapshot.html"/>
            <reference name="Create volume" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-volume.html"/>
            <reference name="Delete volume" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-volume.html"/>
            <reference name="Describe volumes" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-volumes.html"/>
            <reference name="EBS Encryption Considerations" url="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html"/>
          </references>
          <standards>
            <standard ref="1.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="1.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Using the Amazon unified command line interface: (Note that you should replace &amp;lt;web_tier_tag&amp;gt;:&amp;lt;web_tier_tag_value&amp;gt; with your own tag and value for the Web tier)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Note the EBS volume ids, Instance ids, Availability Zones, and check if the Encrypted element is True or False&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 describe-volumes --filters Name=tag:&amp;lt;web_tier_tag&amp;gt;,Values=&amp;lt;web_tier_tag_value&amp;gt; --query 'Volumes[*].{VolumeId:VolumeId, Encrypted:Encrypted, AvailabilityZone:AvailabilityZone, InstanceId:Attachments[*].InstanceId}' --output table&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.607">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.1" name="Tag all resources" issueId="" issueLink="" platform="" cost="0" risk="23" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
 &lt;b&gt;Description&lt;/b&gt;:
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Tags enable customers to categorize AWS resources in different ways, for example, by purpose, owner, or environment.
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Each tag consists of a key and an optional value, both of which customer's define.
  You should define a set of tags for the following items to help you track each instance's owner and operating environment, cost center, and other items.
&lt;/div&gt;
&lt;div&gt;
 &lt;ol&gt;
  &lt;li&gt;Amazon EC2 instances&lt;/li&gt;
  &lt;li&gt;ELB&lt;/li&gt;
  &lt;li&gt;EBS Volumes&lt;/li&gt;
  &lt;li&gt;S3 Buckets&lt;/li&gt;
 &lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  A resource may have up to 10 tags associated with key &amp;amp; value such as:
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Key=tier, Value=app&lt;/li&gt;
  &lt;li&gt;Key=environment, Value=production&lt;/li&gt;
  &lt;li&gt;Key=costcenter, Value=sales&lt;/li&gt;
 &lt;/ul&gt;
 &lt;div&gt;
  &lt;b&gt;Remediation:&lt;/b&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;&lt;br&gt;&lt;/b&gt;
  Tag all your 3 tier Web Application resources based on their tier membership (Web, App, Data), and your organizational requirements.
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Cloud Compliance" url="https://d0.awsstatic.com/whitepapers/compliance/AWS_Anitian_Wookbook_PCI_Cloud_Compliance.pdf"/>
            <reference name="Resource groups and tagging" url="https://aws.amazon.com/blogs/aws/resource-groups-and-tagging/"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify tags are being used.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.607">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="VOLUMES-NOT-ENCRYPTED">
                  <countermeasures>
                    <countermeasure ref="aws-tier-1.5-1.6" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-1.5-1.6" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="OWASP-A10-2017" issueId="" issueLink="" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" mitigation="34"/>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" mitigation="33"/>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" mitigation="34"/>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" mitigation="33"/>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-NET-01">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.1" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" mitigation="50"/>
                <countermeasure ref="aws-tier-5.1" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="133f5a93-eaaf-4c23-b937-88cdc1f2df2d" diagramComponentId="e20cabff-c086-4beb-9122-2e6f936b94a7" ref="2138013b-51f6-4875-b870-5a1604bb154e" name="AWS EC2 Auto Scaling" desc="" library="Hydras-AWS-Foundation" parentComponentRef="ade2b1c6-8bd1-4ccb-a9eb-4ca92d553182" componentDefinitionRef="CD-EC2-AUTO-SCALING" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.862">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.862">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.861">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="VOLUMES-NOT-ENCRYPTED" name="The volumes are not encrypted" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Volumes are not encrypted, leading to the disclosure of information.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.863">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-01" name="Unauthorized connection attempts are allowed on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To avoid this, access to network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.862">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" name="Add Elastic Load Balancing health checks to an Auto Scaling group" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The default health checks for an Auto Scaling group are EC2 status checks only. If an instance fails these status checks, it is marked unhealthy and is terminated while Amazon EC2 Auto Scaling launches a new replacement instance.&lt;/p&gt;&lt;p&gt;You can attach one or more load balancer target groups, one or more Classic Load Balancers, or both to your Auto Scaling group. However, by default, the Auto Scaling group does not consider an instance unhealthy and replace it if it fails the Elastic Load Balancing health checks.&lt;/p&gt;&lt;p&gt;Use the following procedure to add Elastic Load Balancing (ELB) health checks to an Auto Scaling group.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;To add Elastic Load Balancing health checks&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Open the Amazon EC2 Auto Scaling console at &lt;a href="https://console.aws.amazon.com/ec2autoscaling/"&gt;https://console.aws.amazon.com/ec2autoscaling/&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Select the check box next to an existing group.&lt;/p&gt;&lt;p&gt;A split pane opens up in the bottom of the &lt;strong&gt;Auto Scaling groups&lt;/strong&gt; page.&lt;/p&gt;&lt;p&gt;On the &lt;strong&gt;Details&lt;/strong&gt; tab, choose &lt;strong&gt;Health checks&lt;/strong&gt;, &lt;strong&gt;Edit&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;For &lt;strong&gt;Health check type&lt;/strong&gt;, select &lt;strong&gt;Enable ELB health checks&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;For &lt;strong&gt;Health check grace period&lt;/strong&gt;, enter the amount of time, in seconds, that Amazon EC2 Auto Scaling needs to wait before checking the health status of an instance after it enters the InService state. For more information, see &lt;a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-health-checks.html#health-check-grace-period"&gt;Health check grace period&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Choose &lt;strong&gt;Update&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;On the &lt;strong&gt;Instance management&lt;/strong&gt; tab, under &lt;strong&gt;Instances&lt;/strong&gt;, you can view the health status of instances. The &lt;strong&gt;Health Status&lt;/strong&gt; column displays the results of the newly added health checks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Add Elastic Load Balancing health checks" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-add-elb-healthcheck.html"/>
          </references>
          <standards>
            <standard ref="2.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;To ensure that your Auto Scaling group can determine instance health based on additional load balancer tests, configure the Auto Scaling group to use Elastic Load Balancing (ELB) health checks. The load balancer periodically sends pings, attempts connections, or sends requests to test the EC2 instances and determines if an instance is unhealthy. If you configure the Auto Scaling group to use Elastic Load Balancing health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the Elastic Load Balancing health checks. If you attach multiple load balancer target groups or Classic Load Balancers to the group, all of them must report that an instance is healthy in order for it to consider the instance healthy. If any one of them reports an instance as unhealthy, the Auto Scaling group replaces the instance, even if others report it as healthy.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.768">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" name="Connect to AWS EC2 Auto Scaling using an Interface VPC Endpoint" issueId="" issueLink="" platform="" cost="0" risk="23" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Connect to AWS EC2 Auto Scaling using an Interface VPC Endpoint&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can improve the security posture of your VPC by configuring Amazon EC2 Auto Scaling to use an interface VPC endpoint. Interface endpoints are powered by AWS PrivateLink, a technology that enables you to privately access Amazon EC2 Auto Scaling APIs by restricting all network traffic between your VPC and Amazon EC2 Auto Scaling to the Amazon network. With interface endpoints, you also don't need an internet gateway, a NAT device, or a virtual private gateway.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create an interface VPC endpoint&lt;/p&gt; 
&lt;p&gt;You can create a VPC endpoint for the Amazon EC2 Auto Scaling service using either the Amazon VPC console or the AWS Command Line Interface (AWS CLI).&lt;/p&gt; 
&lt;p&gt;Create an endpoint for Amazon EC2 Auto Scaling using the following service name:&lt;/p&gt; 
&lt;p&gt;com.amazonaws.region.autoscaling - Creates an endpoint for the Amazon EC2 Auto Scaling API operations.&lt;/p&gt; 
&lt;p&gt;cn.com.amazonaws.region.autoscaling - Creates an endpoint for the Amazon EC2 Auto Scaling API operations in the AWS China (Beijing) Region and AWS China (Ningxia) Region.&lt;/p&gt; 
&lt;p&gt;The following are the general steps for setting up an interface endpoint:&lt;/p&gt; 
&lt;p&gt;1. Choose the VPC in which to create the interface endpoint, and provide the name of the AWS service, endpoint service, or AWS Marketplace service to which you're connecting.&lt;/p&gt; 
&lt;p&gt;2. Choose a subnet in your VPC to use the interface endpoint. We create an endpoint network interface in the subnet. You can specify more than one subnet in different Availability Zones (as supported by the service) to help ensure that your interface endpoint is resilient to Availability Zone failures. In that case, we create an endpoint network interface in each subnet that you specify.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; An endpoint network interface is a requester-managed network interface. You can view it in your account, but you cannot manage it yourself. For more information, see Elastic Network Interfaces.&lt;/p&gt; 
&lt;p&gt;3. Specify the security groups to associate with the endpoint network interface. The security group rules control the traffic to the endpoint network interface from resources in your VPC. If you do not specify a security group, we associate the default security group for the VPC.&lt;/p&gt; 
&lt;p&gt;4. (Optional, AWS services and AWS Marketplace Partner services only) Enable private DNS for the endpoint to enable you to make requests to the service using its default DNS hostname.&lt;/p&gt; 
&lt;p&gt;Important&lt;br&gt; Private DNS is enabled by default for endpoints created for AWS services and AWS Marketplace Partner services.&lt;/p&gt; 
&lt;p&gt;Private DNS is enabled in the other subnets which are in the same VPC and Availability Zone or Local Zone.&lt;/p&gt; 
&lt;p&gt;5. When the service provider and the consumer are in different accounts, see Interface endpoint Availability Zone considerations for information about how to use Availability Zone IDs to identify the interface endpoint Availability Zone.&lt;/p&gt; 
&lt;p&gt;6. After you create the interface endpoint, it's available to use when it's accepted by the service provider. The service provider must configure the service to accept requests automatically or manually. AWS services and AWS Marketplace services generally accept all endpoint requests automatically.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon EC2 Auto Scaling and interface VPC endpoints" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-vpc-endpoints.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Viewing your interface endpoint&lt;br /&gt;
After you've created an interface endpoint, you can view information about it using the Console or the Command line.&lt;/p&gt;

	&lt;p&gt;To view information about an interface endpoint using the console:&lt;/p&gt;

	&lt;p&gt;1. Open the Amazon VPC console.&lt;/p&gt;

	&lt;p&gt;2. In the navigation pane, choose Endpoints and select your interface endpoint.&lt;/p&gt;

	&lt;p&gt;3. To view information about the interface endpoint, choose Details. The DNS Names field displays the DNS names to use to access the service.&lt;/p&gt;

	&lt;p&gt;4. To view the subnets in which the interface endpoint has been created, and the ID of the endpoint network interface in each subnet, choose Subnets.&lt;/p&gt;

	&lt;p&gt;5. To view the security groups that are associated with the endpoint network interface, choose Security Groups.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.768">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" name="Control access to AWS EC2 Auto Scaling" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Control access to AWS EC2 Auto Scaling&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; By default, IAM users and roles don't have permission to create or modify Amazon EC2 Auto Scaling resources. They also can't perform tasks using the AWS Management Console, AWS CLI, or AWS API. An IAM administrator must create IAM policies that give users and roles permission to perform specific API operations on the specified resources they need. The administrator must then attach those policies to the IAM users or groups that require those permissions.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Example - Control access to creating and managing Auto Scaling groups and scaling policies&lt;/p&gt; 
&lt;p&gt;The following policy gives users permissions to use all Amazon EC2 Auto Scaling actions that include the string Scaling in their names, as long as the Auto Scaling group has the tag purpose=webserver. Because the Describe actions do not support resource-level permissions, you must specify them in a separate statement without conditions.&lt;/p&gt; 
&lt;p&gt;{ "Version": "2012-10-17", "Statement": [ { "Effect": "Allow", "Action": ["autoscaling:&lt;strong&gt;Scaling&lt;/strong&gt;"], "Resource": "*", "Condition": { "StringEquals": { "autoscaling:ResourceTag/purpose": "webserver" } } }, { "Effect": "Allow", "Action": "autoscaling:Describe*Scaling*", "Resource": "*" }]&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon EC2 Auto Scaling identity-based policy examples" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/security_iam_id-based-policy-examples.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.766">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" name="Create a CloudWatch alarms for AWS EC2 Auto Scaling group" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create a CloudWatch alarms for AWS EC2 Auto Scaling group&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; One purpose for monitoring metrics is to verify that your application is performing as expected. In Amazon CloudWatch, you can create an alarm that sends a notification when the value of a certain metric is beyond what you consider an acceptable threshold. The metrics are available at one-minute granularity at no additional charge, but you must enable them. &lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Start by identifying the metric to monitor. For example, you can configure an alarm to watch over the average CPU utilization of the EC2 instances in your Auto Scaling group. The action can be a notification that is sent to you when the average CPU utilization of the group's instances breaches the threshold that you specified for the consecutive periods you specified. For example, if the metric stays at or above 70 percent for 4 consecutive periods of 1 minute each.&lt;/p&gt; 
&lt;p&gt;To create a CloudWatch alarm for your Auto Scaling group&lt;/p&gt; 
&lt;p&gt;1. Open the CloudWatch console.&lt;/p&gt; 
&lt;p&gt;2. If necessary, change the region. From the navigation bar, select the region where your Auto Scaling group resides.&lt;/p&gt; 
&lt;p&gt;3. On the navigation pane, choose Alarms and then choose Create alarm.&lt;/p&gt; 
&lt;p&gt;4. Choose Select metric.&lt;/p&gt; 
&lt;p&gt;5. On the All metrics tab, select a metric as follows:&lt;/p&gt; 
&lt;p&gt;- To display only the metrics reported for your Auto Scaling groups, choose EC2, and then choose By Auto Scaling Group. To view the metrics for a single Auto Scaling group, type its name in the search field.&lt;/p&gt; 
&lt;p&gt;- Select the row that contains the metric for the Auto Scaling group that you want to create an alarm on.&lt;/p&gt; 
&lt;p&gt;- Choose Select metric. The Specify metric and conditions page appears, showing a graph and other information about the metric.&lt;/p&gt; 
&lt;p&gt;6. For Period, choose the evaluation period for the alarm, for example, 1 minute. When evaluating the alarm, each period is aggregated into one data point.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; A shorter period creates a more sensitive alarm.&lt;/p&gt; 
&lt;p&gt;7. Under Conditions, do the following:&lt;/p&gt; 
&lt;p&gt;- For Threshold type, choose Static.&lt;/p&gt; 
&lt;p&gt;- For Whenever metric is, specify whether you want the value of the metric to be greater than, greater than or equal to, less than, or less than or equal to the threshold to trigger the alarm. Then, under than, enter the threshold value that you want to trigger the alarm.&lt;/p&gt; 
&lt;p&gt;8. Under Additional configuration, do the following:&lt;/p&gt; 
&lt;p&gt;- For Datapoints to alarm, enter the number of data points (evaluation periods) during which the metric value must meet the threshold conditions to trigger the alarm. For example, two consecutive periods of 5 minutes would take 10 minutes to trigger the alarm.&lt;/p&gt; 
&lt;p&gt;- For Missing data treatment, choose what you want the alarm to do if some data is missing. For more information, see Configuring how CloudWatch alarms treat missing data in the Amazon CloudWatch User Guide.&lt;/p&gt; 
&lt;p&gt;9. Choose Next.&lt;/p&gt; 
&lt;p&gt;10. Under Notification, you can choose or create the Amazon SNS topic you want to use to receive notifications. Otherwise, you can remove the notification now and add one later when you are ready.&lt;/p&gt; 
&lt;p&gt;11. Choose Next.&lt;/p&gt; 
&lt;p&gt;12. Enter a name and, optionally, a description for the alarm, and then choose Next.&lt;/p&gt; 
&lt;p&gt;13. Choose Create Alarm.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring CloudWatch metrics for your Auto Scaling groups and instances" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;To test your rule that triggers on an API call, you have to trigger it with its Specific operation as defined into the CloudWatch console.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.767">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" name="Enable Auto Scaling group metrics" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable AWS EC2 Auto Scaling group metrics&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Metrics are the fundamental concept in CloudWatch. A metric represents a time-ordered set of data points that are published to CloudWatch. Think of a metric as a variable to monitor, and the data points as representing the values of that variable over time. You can use these metrics to verify that your system is performing as expected.&lt;br&gt; Amazon EC2 Auto Scaling publishes data points to CloudWatch about your Auto Scaling groups. The metrics are available at one-minute granularity at no additional charge, but you must enable them. By doing this, you get continuous visibility into the operations of your Auto Scaling groups so that you can quickly respond to changes in your workloads.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable Auto Scaling group metrics (console)&lt;/p&gt; 
&lt;p&gt;When you enable Auto Scaling group metrics, your Auto Scaling group sends sampled data to CloudWatch every minute. There is no charge for enabling these metrics.&lt;/p&gt; 
&lt;p&gt;To enable group metrics&lt;/p&gt; 
&lt;p&gt;1. Open the Amazon EC2 Auto Scaling console.&lt;/p&gt; 
&lt;p&gt;2. Select the check box next to your Auto Scaling group. A split pane opens up in the bottom part of the page, showing information about the group that's selected.&lt;/p&gt; 
&lt;p&gt;3. On the Monitoring tab, select the Auto Scaling group metrics collection, Enable check box located at the top of the page under Auto Scaling.&lt;/p&gt; 
&lt;p&gt;Enable Auto Scaling group metrics (AWS CLI)&lt;/p&gt; 
&lt;p&gt;To enable group metrics&lt;/p&gt; 
&lt;p&gt;Enable one or more group metrics using the enable-metrics-collection command. For example, the following command enables the GroupDesiredCapacity metric.&lt;/p&gt; 
&lt;p&gt;aws autoscaling enable-metrics-collection -auto-scaling-group-name my-asg \&lt;br&gt; -metrics GroupDesiredCapacity -granularity "1Minute"&lt;/p&gt; 
&lt;p&gt;If you omit the -metrics option, all metrics are enabled.&lt;/p&gt; 
&lt;p&gt;aws autoscaling enable-metrics-collection -auto-scaling-group-name my-asg \&lt;br&gt; -granularity "1Minute"&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring CloudWatch metrics for your Auto Scaling groups and instances" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;To view CloudWatch metrics (AWS CLI)&lt;/p&gt;

	&lt;p&gt;To view all metrics for all your Auto Scaling groups, use the following list-metrics command.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling"&lt;/p&gt;

	&lt;p&gt;To view the metrics for a single Auto Scaling group, specify the AutoScalingGroupName dimension as follows.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling" -dimensions Name=AutoScalingGroupName,Value=my-asg&lt;/p&gt;

	&lt;p&gt;To view a single metric for all your Auto Scaling groups, specify the name of the metric as follows.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling" -metric-name GroupDesiredCapacity&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.767">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.5-1.6" name="Encrypt all EBS Volumes for tier" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;&lt;br&gt;Elastic Block Storage (EBS) volumes can be encrypted using AWS Key Management Service (KMS). In this configuration, encryption and decryption are handled transparently and require no additional action from the user, an Amazon EC2 instance, or an application. When an encrypted Amazon EBS volume is attached to a supported Amazon EC2 instance type, the data stored at rest on the volume, disk I/O, and snapshots created from the volume are all encrypted. The encryption occurs on the servers that host Amazon EC2 instances. Additionally, snapshots of encrypted volumes are automatically encrypted, and volumes that are created from encrypted snapshots are also automatically encrypted. It is recommended that all EBS volumes for the web tier be encrypted.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;*Note: references to Web tier are also applicable to App tier.&lt;/p&gt;&lt;p&gt;&lt;br&gt;Using the Amazon unified command line interface:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Note all the volume ids of unencrypted EBS volumes and create a snapshot for each of them:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-snapshot --volume-id &amp;lt;unencrypted_ebs_volume&amp;gt; --description "Snapshot for encryption operation"&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Note the SnapshotIdelement from the output of step 1 and copy the snapshot to an encrypted snapshot using the KMS key created for the Web-tier:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 copy-snapshot --source-region &amp;lt;application_region&amp;gt; --source-snapshot-id &amp;lt;unencrypted_ebs_snapshot&amp;gt; --description "Encrypted snapshot." --encrypted --kms-keyid &amp;lt;web_tier_kms_key&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Note the SnapshotId element from the output of step 2 and create a new EBS volume from the encrypted snapshot in the same Availability Zone as the unencrypted volume:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-volume --availability-zone &amp;lt;application_az&amp;gt; --snapshot-id &amp;lt;encrypted_ebs_snapshot&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Tag the newly created EBS volume using the Volume Id from the previous step &amp;lt;encrypted_ebs_volume&amp;gt;:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-tags --resources &amp;lt;encrypted_ebs_volume&amp;gt; --tags Key=&amp;lt;web_tier_tag&amp;gt;,Value=&amp;lt;web_tier_tag_value&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Delete unencrypted EBS volume:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 delete-volume --volume-id &amp;lt;unencrypted_ebs_volume&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Copy snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/copy-snapshot.html"/>
            <reference name="Create snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-snapshot.html"/>
            <reference name="Create volume" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-volume.html"/>
            <reference name="Delete volume" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-volume.html"/>
            <reference name="Describe volumes" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-volumes.html"/>
            <reference name="EBS Encryption Considerations" url="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html"/>
          </references>
          <standards>
            <standard ref="1.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="1.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Using the Amazon unified command line interface: (Note that you should replace &amp;lt;web_tier_tag&amp;gt;:&amp;lt;web_tier_tag_value&amp;gt; with your own tag and value for the Web tier)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Note the EBS volume ids, Instance ids, Availability Zones, and check if the Encrypted element is True or False&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 describe-volumes --filters Name=tag:&amp;lt;web_tier_tag&amp;gt;,Values=&amp;lt;web_tier_tag_value&amp;gt; --query 'Volumes[*].{VolumeId:VolumeId, Encrypted:Encrypted, AvailabilityZone:AvailabilityZone, InstanceId:Attachments[*].InstanceId}' --output table&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.768">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.1" name="Tag all resources" issueId="" issueLink="" platform="" cost="0" risk="23" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
 &lt;b&gt;Description&lt;/b&gt;:
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Tags enable customers to categorize AWS resources in different ways, for example, by purpose, owner, or environment.
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Each tag consists of a key and an optional value, both of which customer's define.
  You should define a set of tags for the following items to help you track each instance's owner and operating environment, cost center, and other items.
&lt;/div&gt;
&lt;div&gt;
 &lt;ol&gt;
  &lt;li&gt;Amazon EC2 instances&lt;/li&gt;
  &lt;li&gt;ELB&lt;/li&gt;
  &lt;li&gt;EBS Volumes&lt;/li&gt;
  &lt;li&gt;S3 Buckets&lt;/li&gt;
 &lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  A resource may have up to 10 tags associated with key &amp;amp; value such as:
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Key=tier, Value=app&lt;/li&gt;
  &lt;li&gt;Key=environment, Value=production&lt;/li&gt;
  &lt;li&gt;Key=costcenter, Value=sales&lt;/li&gt;
 &lt;/ul&gt;
 &lt;div&gt;
  &lt;b&gt;Remediation:&lt;/b&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;&lt;br&gt;&lt;/b&gt;
  Tag all your 3 tier Web Application resources based on their tier membership (Web, App, Data), and your organizational requirements.
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Cloud Compliance" url="https://d0.awsstatic.com/whitepapers/compliance/AWS_Anitian_Wookbook_PCI_Cloud_Compliance.pdf"/>
            <reference name="Resource groups and tagging" url="https://aws.amazon.com/blogs/aws/resource-groups-and-tagging/"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify tags are being used.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.768">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="VOLUMES-NOT-ENCRYPTED">
                  <countermeasures>
                    <countermeasure ref="aws-tier-1.5-1.6" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-1.5-1.6" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="OWASP-A10-2017" issueId="" issueLink="" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" mitigation="34"/>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" mitigation="33"/>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" mitigation="34"/>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" mitigation="33"/>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-NET-01">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.1" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" mitigation="50"/>
                <countermeasure ref="aws-tier-5.1" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="72836961-4ccd-41f3-9b03-520dcf13e88d" diagramComponentId="8fac023a-474a-4750-b6c9-d0cbe0846906" ref="4b4306bd-4d04-488a-b8d4-54ba23d40506" name="AWS EC2 Auto Scaling" desc="" library="Hydras-AWS-Foundation" parentComponentRef="010dfedc-7ef1-48b5-bed8-3c139b9cd3c1" componentDefinitionRef="CD-EC2-AUTO-SCALING" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.411">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.410">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.410">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="VOLUMES-NOT-ENCRYPTED" name="The volumes are not encrypted" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Volumes are not encrypted, leading to the disclosure of information.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.411">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-01" name="Unauthorized connection attempts are allowed on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To avoid this, access to network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.410">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" name="Add Elastic Load Balancing health checks to an Auto Scaling group" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The default health checks for an Auto Scaling group are EC2 status checks only. If an instance fails these status checks, it is marked unhealthy and is terminated while Amazon EC2 Auto Scaling launches a new replacement instance.&lt;/p&gt;&lt;p&gt;You can attach one or more load balancer target groups, one or more Classic Load Balancers, or both to your Auto Scaling group. However, by default, the Auto Scaling group does not consider an instance unhealthy and replace it if it fails the Elastic Load Balancing health checks.&lt;/p&gt;&lt;p&gt;Use the following procedure to add Elastic Load Balancing (ELB) health checks to an Auto Scaling group.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;To add Elastic Load Balancing health checks&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Open the Amazon EC2 Auto Scaling console at &lt;a href="https://console.aws.amazon.com/ec2autoscaling/"&gt;https://console.aws.amazon.com/ec2autoscaling/&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Select the check box next to an existing group.&lt;/p&gt;&lt;p&gt;A split pane opens up in the bottom of the &lt;strong&gt;Auto Scaling groups&lt;/strong&gt; page.&lt;/p&gt;&lt;p&gt;On the &lt;strong&gt;Details&lt;/strong&gt; tab, choose &lt;strong&gt;Health checks&lt;/strong&gt;, &lt;strong&gt;Edit&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;For &lt;strong&gt;Health check type&lt;/strong&gt;, select &lt;strong&gt;Enable ELB health checks&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;For &lt;strong&gt;Health check grace period&lt;/strong&gt;, enter the amount of time, in seconds, that Amazon EC2 Auto Scaling needs to wait before checking the health status of an instance after it enters the InService state. For more information, see &lt;a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-health-checks.html#health-check-grace-period"&gt;Health check grace period&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Choose &lt;strong&gt;Update&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;On the &lt;strong&gt;Instance management&lt;/strong&gt; tab, under &lt;strong&gt;Instances&lt;/strong&gt;, you can view the health status of instances. The &lt;strong&gt;Health Status&lt;/strong&gt; column displays the results of the newly added health checks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Add Elastic Load Balancing health checks" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-add-elb-healthcheck.html"/>
          </references>
          <standards>
            <standard ref="2.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;To ensure that your Auto Scaling group can determine instance health based on additional load balancer tests, configure the Auto Scaling group to use Elastic Load Balancing (ELB) health checks. The load balancer periodically sends pings, attempts connections, or sends requests to test the EC2 instances and determines if an instance is unhealthy. If you configure the Auto Scaling group to use Elastic Load Balancing health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the Elastic Load Balancing health checks. If you attach multiple load balancer target groups or Classic Load Balancers to the group, all of them must report that an instance is healthy in order for it to consider the instance healthy. If any one of them reports an instance as unhealthy, the Auto Scaling group replaces the instance, even if others report it as healthy.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.334">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" name="Connect to AWS EC2 Auto Scaling using an Interface VPC Endpoint" issueId="" issueLink="" platform="" cost="0" risk="23" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Connect to AWS EC2 Auto Scaling using an Interface VPC Endpoint&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can improve the security posture of your VPC by configuring Amazon EC2 Auto Scaling to use an interface VPC endpoint. Interface endpoints are powered by AWS PrivateLink, a technology that enables you to privately access Amazon EC2 Auto Scaling APIs by restricting all network traffic between your VPC and Amazon EC2 Auto Scaling to the Amazon network. With interface endpoints, you also don't need an internet gateway, a NAT device, or a virtual private gateway.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create an interface VPC endpoint&lt;/p&gt; 
&lt;p&gt;You can create a VPC endpoint for the Amazon EC2 Auto Scaling service using either the Amazon VPC console or the AWS Command Line Interface (AWS CLI).&lt;/p&gt; 
&lt;p&gt;Create an endpoint for Amazon EC2 Auto Scaling using the following service name:&lt;/p&gt; 
&lt;p&gt;com.amazonaws.region.autoscaling - Creates an endpoint for the Amazon EC2 Auto Scaling API operations.&lt;/p&gt; 
&lt;p&gt;cn.com.amazonaws.region.autoscaling - Creates an endpoint for the Amazon EC2 Auto Scaling API operations in the AWS China (Beijing) Region and AWS China (Ningxia) Region.&lt;/p&gt; 
&lt;p&gt;The following are the general steps for setting up an interface endpoint:&lt;/p&gt; 
&lt;p&gt;1. Choose the VPC in which to create the interface endpoint, and provide the name of the AWS service, endpoint service, or AWS Marketplace service to which you're connecting.&lt;/p&gt; 
&lt;p&gt;2. Choose a subnet in your VPC to use the interface endpoint. We create an endpoint network interface in the subnet. You can specify more than one subnet in different Availability Zones (as supported by the service) to help ensure that your interface endpoint is resilient to Availability Zone failures. In that case, we create an endpoint network interface in each subnet that you specify.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; An endpoint network interface is a requester-managed network interface. You can view it in your account, but you cannot manage it yourself. For more information, see Elastic Network Interfaces.&lt;/p&gt; 
&lt;p&gt;3. Specify the security groups to associate with the endpoint network interface. The security group rules control the traffic to the endpoint network interface from resources in your VPC. If you do not specify a security group, we associate the default security group for the VPC.&lt;/p&gt; 
&lt;p&gt;4. (Optional, AWS services and AWS Marketplace Partner services only) Enable private DNS for the endpoint to enable you to make requests to the service using its default DNS hostname.&lt;/p&gt; 
&lt;p&gt;Important&lt;br&gt; Private DNS is enabled by default for endpoints created for AWS services and AWS Marketplace Partner services.&lt;/p&gt; 
&lt;p&gt;Private DNS is enabled in the other subnets which are in the same VPC and Availability Zone or Local Zone.&lt;/p&gt; 
&lt;p&gt;5. When the service provider and the consumer are in different accounts, see Interface endpoint Availability Zone considerations for information about how to use Availability Zone IDs to identify the interface endpoint Availability Zone.&lt;/p&gt; 
&lt;p&gt;6. After you create the interface endpoint, it's available to use when it's accepted by the service provider. The service provider must configure the service to accept requests automatically or manually. AWS services and AWS Marketplace services generally accept all endpoint requests automatically.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon EC2 Auto Scaling and interface VPC endpoints" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-vpc-endpoints.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Viewing your interface endpoint&lt;br /&gt;
After you've created an interface endpoint, you can view information about it using the Console or the Command line.&lt;/p&gt;

	&lt;p&gt;To view information about an interface endpoint using the console:&lt;/p&gt;

	&lt;p&gt;1. Open the Amazon VPC console.&lt;/p&gt;

	&lt;p&gt;2. In the navigation pane, choose Endpoints and select your interface endpoint.&lt;/p&gt;

	&lt;p&gt;3. To view information about the interface endpoint, choose Details. The DNS Names field displays the DNS names to use to access the service.&lt;/p&gt;

	&lt;p&gt;4. To view the subnets in which the interface endpoint has been created, and the ID of the endpoint network interface in each subnet, choose Subnets.&lt;/p&gt;

	&lt;p&gt;5. To view the security groups that are associated with the endpoint network interface, choose Security Groups.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.334">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" name="Control access to AWS EC2 Auto Scaling" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Control access to AWS EC2 Auto Scaling&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; By default, IAM users and roles don't have permission to create or modify Amazon EC2 Auto Scaling resources. They also can't perform tasks using the AWS Management Console, AWS CLI, or AWS API. An IAM administrator must create IAM policies that give users and roles permission to perform specific API operations on the specified resources they need. The administrator must then attach those policies to the IAM users or groups that require those permissions.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Example - Control access to creating and managing Auto Scaling groups and scaling policies&lt;/p&gt; 
&lt;p&gt;The following policy gives users permissions to use all Amazon EC2 Auto Scaling actions that include the string Scaling in their names, as long as the Auto Scaling group has the tag purpose=webserver. Because the Describe actions do not support resource-level permissions, you must specify them in a separate statement without conditions.&lt;/p&gt; 
&lt;p&gt;{ "Version": "2012-10-17", "Statement": [ { "Effect": "Allow", "Action": ["autoscaling:&lt;strong&gt;Scaling&lt;/strong&gt;"], "Resource": "*", "Condition": { "StringEquals": { "autoscaling:ResourceTag/purpose": "webserver" } } }, { "Effect": "Allow", "Action": "autoscaling:Describe*Scaling*", "Resource": "*" }]&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon EC2 Auto Scaling identity-based policy examples" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/security_iam_id-based-policy-examples.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.333">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" name="Create a CloudWatch alarms for AWS EC2 Auto Scaling group" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create a CloudWatch alarms for AWS EC2 Auto Scaling group&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; One purpose for monitoring metrics is to verify that your application is performing as expected. In Amazon CloudWatch, you can create an alarm that sends a notification when the value of a certain metric is beyond what you consider an acceptable threshold. The metrics are available at one-minute granularity at no additional charge, but you must enable them. &lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Start by identifying the metric to monitor. For example, you can configure an alarm to watch over the average CPU utilization of the EC2 instances in your Auto Scaling group. The action can be a notification that is sent to you when the average CPU utilization of the group's instances breaches the threshold that you specified for the consecutive periods you specified. For example, if the metric stays at or above 70 percent for 4 consecutive periods of 1 minute each.&lt;/p&gt; 
&lt;p&gt;To create a CloudWatch alarm for your Auto Scaling group&lt;/p&gt; 
&lt;p&gt;1. Open the CloudWatch console.&lt;/p&gt; 
&lt;p&gt;2. If necessary, change the region. From the navigation bar, select the region where your Auto Scaling group resides.&lt;/p&gt; 
&lt;p&gt;3. On the navigation pane, choose Alarms and then choose Create alarm.&lt;/p&gt; 
&lt;p&gt;4. Choose Select metric.&lt;/p&gt; 
&lt;p&gt;5. On the All metrics tab, select a metric as follows:&lt;/p&gt; 
&lt;p&gt;- To display only the metrics reported for your Auto Scaling groups, choose EC2, and then choose By Auto Scaling Group. To view the metrics for a single Auto Scaling group, type its name in the search field.&lt;/p&gt; 
&lt;p&gt;- Select the row that contains the metric for the Auto Scaling group that you want to create an alarm on.&lt;/p&gt; 
&lt;p&gt;- Choose Select metric. The Specify metric and conditions page appears, showing a graph and other information about the metric.&lt;/p&gt; 
&lt;p&gt;6. For Period, choose the evaluation period for the alarm, for example, 1 minute. When evaluating the alarm, each period is aggregated into one data point.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; A shorter period creates a more sensitive alarm.&lt;/p&gt; 
&lt;p&gt;7. Under Conditions, do the following:&lt;/p&gt; 
&lt;p&gt;- For Threshold type, choose Static.&lt;/p&gt; 
&lt;p&gt;- For Whenever metric is, specify whether you want the value of the metric to be greater than, greater than or equal to, less than, or less than or equal to the threshold to trigger the alarm. Then, under than, enter the threshold value that you want to trigger the alarm.&lt;/p&gt; 
&lt;p&gt;8. Under Additional configuration, do the following:&lt;/p&gt; 
&lt;p&gt;- For Datapoints to alarm, enter the number of data points (evaluation periods) during which the metric value must meet the threshold conditions to trigger the alarm. For example, two consecutive periods of 5 minutes would take 10 minutes to trigger the alarm.&lt;/p&gt; 
&lt;p&gt;- For Missing data treatment, choose what you want the alarm to do if some data is missing. For more information, see Configuring how CloudWatch alarms treat missing data in the Amazon CloudWatch User Guide.&lt;/p&gt; 
&lt;p&gt;9. Choose Next.&lt;/p&gt; 
&lt;p&gt;10. Under Notification, you can choose or create the Amazon SNS topic you want to use to receive notifications. Otherwise, you can remove the notification now and add one later when you are ready.&lt;/p&gt; 
&lt;p&gt;11. Choose Next.&lt;/p&gt; 
&lt;p&gt;12. Enter a name and, optionally, a description for the alarm, and then choose Next.&lt;/p&gt; 
&lt;p&gt;13. Choose Create Alarm.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring CloudWatch metrics for your Auto Scaling groups and instances" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;To test your rule that triggers on an API call, you have to trigger it with its Specific operation as defined into the CloudWatch console.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.334">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" name="Enable Auto Scaling group metrics" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable AWS EC2 Auto Scaling group metrics&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Metrics are the fundamental concept in CloudWatch. A metric represents a time-ordered set of data points that are published to CloudWatch. Think of a metric as a variable to monitor, and the data points as representing the values of that variable over time. You can use these metrics to verify that your system is performing as expected.&lt;br&gt; Amazon EC2 Auto Scaling publishes data points to CloudWatch about your Auto Scaling groups. The metrics are available at one-minute granularity at no additional charge, but you must enable them. By doing this, you get continuous visibility into the operations of your Auto Scaling groups so that you can quickly respond to changes in your workloads.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable Auto Scaling group metrics (console)&lt;/p&gt; 
&lt;p&gt;When you enable Auto Scaling group metrics, your Auto Scaling group sends sampled data to CloudWatch every minute. There is no charge for enabling these metrics.&lt;/p&gt; 
&lt;p&gt;To enable group metrics&lt;/p&gt; 
&lt;p&gt;1. Open the Amazon EC2 Auto Scaling console.&lt;/p&gt; 
&lt;p&gt;2. Select the check box next to your Auto Scaling group. A split pane opens up in the bottom part of the page, showing information about the group that's selected.&lt;/p&gt; 
&lt;p&gt;3. On the Monitoring tab, select the Auto Scaling group metrics collection, Enable check box located at the top of the page under Auto Scaling.&lt;/p&gt; 
&lt;p&gt;Enable Auto Scaling group metrics (AWS CLI)&lt;/p&gt; 
&lt;p&gt;To enable group metrics&lt;/p&gt; 
&lt;p&gt;Enable one or more group metrics using the enable-metrics-collection command. For example, the following command enables the GroupDesiredCapacity metric.&lt;/p&gt; 
&lt;p&gt;aws autoscaling enable-metrics-collection -auto-scaling-group-name my-asg \&lt;br&gt; -metrics GroupDesiredCapacity -granularity "1Minute"&lt;/p&gt; 
&lt;p&gt;If you omit the -metrics option, all metrics are enabled.&lt;/p&gt; 
&lt;p&gt;aws autoscaling enable-metrics-collection -auto-scaling-group-name my-asg \&lt;br&gt; -granularity "1Minute"&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring CloudWatch metrics for your Auto Scaling groups and instances" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;To view CloudWatch metrics (AWS CLI)&lt;/p&gt;

	&lt;p&gt;To view all metrics for all your Auto Scaling groups, use the following list-metrics command.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling"&lt;/p&gt;

	&lt;p&gt;To view the metrics for a single Auto Scaling group, specify the AutoScalingGroupName dimension as follows.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling" -dimensions Name=AutoScalingGroupName,Value=my-asg&lt;/p&gt;

	&lt;p&gt;To view a single metric for all your Auto Scaling groups, specify the name of the metric as follows.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling" -metric-name GroupDesiredCapacity&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.334">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.5-1.6" name="Encrypt all EBS Volumes for tier" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;&lt;br&gt;Elastic Block Storage (EBS) volumes can be encrypted using AWS Key Management Service (KMS). In this configuration, encryption and decryption are handled transparently and require no additional action from the user, an Amazon EC2 instance, or an application. When an encrypted Amazon EBS volume is attached to a supported Amazon EC2 instance type, the data stored at rest on the volume, disk I/O, and snapshots created from the volume are all encrypted. The encryption occurs on the servers that host Amazon EC2 instances. Additionally, snapshots of encrypted volumes are automatically encrypted, and volumes that are created from encrypted snapshots are also automatically encrypted. It is recommended that all EBS volumes for the web tier be encrypted.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;*Note: references to Web tier are also applicable to App tier.&lt;/p&gt;&lt;p&gt;&lt;br&gt;Using the Amazon unified command line interface:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Note all the volume ids of unencrypted EBS volumes and create a snapshot for each of them:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-snapshot --volume-id &amp;lt;unencrypted_ebs_volume&amp;gt; --description "Snapshot for encryption operation"&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Note the SnapshotIdelement from the output of step 1 and copy the snapshot to an encrypted snapshot using the KMS key created for the Web-tier:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 copy-snapshot --source-region &amp;lt;application_region&amp;gt; --source-snapshot-id &amp;lt;unencrypted_ebs_snapshot&amp;gt; --description "Encrypted snapshot." --encrypted --kms-keyid &amp;lt;web_tier_kms_key&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Note the SnapshotId element from the output of step 2 and create a new EBS volume from the encrypted snapshot in the same Availability Zone as the unencrypted volume:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-volume --availability-zone &amp;lt;application_az&amp;gt; --snapshot-id &amp;lt;encrypted_ebs_snapshot&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Tag the newly created EBS volume using the Volume Id from the previous step &amp;lt;encrypted_ebs_volume&amp;gt;:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-tags --resources &amp;lt;encrypted_ebs_volume&amp;gt; --tags Key=&amp;lt;web_tier_tag&amp;gt;,Value=&amp;lt;web_tier_tag_value&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Delete unencrypted EBS volume:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 delete-volume --volume-id &amp;lt;unencrypted_ebs_volume&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Copy snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/copy-snapshot.html"/>
            <reference name="Create snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-snapshot.html"/>
            <reference name="Create volume" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-volume.html"/>
            <reference name="Delete volume" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-volume.html"/>
            <reference name="Describe volumes" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-volumes.html"/>
            <reference name="EBS Encryption Considerations" url="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html"/>
          </references>
          <standards>
            <standard ref="1.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="1.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Using the Amazon unified command line interface: (Note that you should replace &amp;lt;web_tier_tag&amp;gt;:&amp;lt;web_tier_tag_value&amp;gt; with your own tag and value for the Web tier)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Note the EBS volume ids, Instance ids, Availability Zones, and check if the Encrypted element is True or False&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 describe-volumes --filters Name=tag:&amp;lt;web_tier_tag&amp;gt;,Values=&amp;lt;web_tier_tag_value&amp;gt; --query 'Volumes[*].{VolumeId:VolumeId, Encrypted:Encrypted, AvailabilityZone:AvailabilityZone, InstanceId:Attachments[*].InstanceId}' --output table&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.334">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.1" name="Tag all resources" issueId="" issueLink="" platform="" cost="0" risk="23" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
 &lt;b&gt;Description&lt;/b&gt;:
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Tags enable customers to categorize AWS resources in different ways, for example, by purpose, owner, or environment.
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Each tag consists of a key and an optional value, both of which customer's define.
  You should define a set of tags for the following items to help you track each instance's owner and operating environment, cost center, and other items.
&lt;/div&gt;
&lt;div&gt;
 &lt;ol&gt;
  &lt;li&gt;Amazon EC2 instances&lt;/li&gt;
  &lt;li&gt;ELB&lt;/li&gt;
  &lt;li&gt;EBS Volumes&lt;/li&gt;
  &lt;li&gt;S3 Buckets&lt;/li&gt;
 &lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  A resource may have up to 10 tags associated with key &amp;amp; value such as:
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Key=tier, Value=app&lt;/li&gt;
  &lt;li&gt;Key=environment, Value=production&lt;/li&gt;
  &lt;li&gt;Key=costcenter, Value=sales&lt;/li&gt;
 &lt;/ul&gt;
 &lt;div&gt;
  &lt;b&gt;Remediation:&lt;/b&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;&lt;br&gt;&lt;/b&gt;
  Tag all your 3 tier Web Application resources based on their tier membership (Web, App, Data), and your organizational requirements.
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Cloud Compliance" url="https://d0.awsstatic.com/whitepapers/compliance/AWS_Anitian_Wookbook_PCI_Cloud_Compliance.pdf"/>
            <reference name="Resource groups and tagging" url="https://aws.amazon.com/blogs/aws/resource-groups-and-tagging/"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify tags are being used.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.334">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="VOLUMES-NOT-ENCRYPTED">
                  <countermeasures>
                    <countermeasure ref="aws-tier-1.5-1.6" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-1.5-1.6" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="OWASP-A10-2017" issueId="" issueLink="" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" mitigation="34"/>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" mitigation="33"/>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" mitigation="34"/>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" mitigation="33"/>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-NET-01">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.1" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" mitigation="50"/>
                <countermeasure ref="aws-tier-5.1" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="c68ff4ea-7b5d-482f-b3b1-ed151021cff2" diagramComponentId="8d817700-cf63-4e3a-bb66-e6db08f6aadb" ref="51f33723-dffe-47d6-8875-f07fe6a109c9" name="AWS EC2 Auto Scaling" desc="" library="Hydras-AWS-Foundation" parentComponentRef="010dfedc-7ef1-48b5-bed8-3c139b9cd3c1" componentDefinitionRef="CD-EC2-AUTO-SCALING" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.959">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.959">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.958">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="VOLUMES-NOT-ENCRYPTED" name="The volumes are not encrypted" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Volumes are not encrypted, leading to the disclosure of information.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.959">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-01" name="Unauthorized connection attempts are allowed on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To avoid this, access to network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.959">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" name="Add Elastic Load Balancing health checks to an Auto Scaling group" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The default health checks for an Auto Scaling group are EC2 status checks only. If an instance fails these status checks, it is marked unhealthy and is terminated while Amazon EC2 Auto Scaling launches a new replacement instance.&lt;/p&gt;&lt;p&gt;You can attach one or more load balancer target groups, one or more Classic Load Balancers, or both to your Auto Scaling group. However, by default, the Auto Scaling group does not consider an instance unhealthy and replace it if it fails the Elastic Load Balancing health checks.&lt;/p&gt;&lt;p&gt;Use the following procedure to add Elastic Load Balancing (ELB) health checks to an Auto Scaling group.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;To add Elastic Load Balancing health checks&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Open the Amazon EC2 Auto Scaling console at &lt;a href="https://console.aws.amazon.com/ec2autoscaling/"&gt;https://console.aws.amazon.com/ec2autoscaling/&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Select the check box next to an existing group.&lt;/p&gt;&lt;p&gt;A split pane opens up in the bottom of the &lt;strong&gt;Auto Scaling groups&lt;/strong&gt; page.&lt;/p&gt;&lt;p&gt;On the &lt;strong&gt;Details&lt;/strong&gt; tab, choose &lt;strong&gt;Health checks&lt;/strong&gt;, &lt;strong&gt;Edit&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;For &lt;strong&gt;Health check type&lt;/strong&gt;, select &lt;strong&gt;Enable ELB health checks&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;For &lt;strong&gt;Health check grace period&lt;/strong&gt;, enter the amount of time, in seconds, that Amazon EC2 Auto Scaling needs to wait before checking the health status of an instance after it enters the InService state. For more information, see &lt;a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-health-checks.html#health-check-grace-period"&gt;Health check grace period&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Choose &lt;strong&gt;Update&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;On the &lt;strong&gt;Instance management&lt;/strong&gt; tab, under &lt;strong&gt;Instances&lt;/strong&gt;, you can view the health status of instances. The &lt;strong&gt;Health Status&lt;/strong&gt; column displays the results of the newly added health checks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Add Elastic Load Balancing health checks" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-add-elb-healthcheck.html"/>
          </references>
          <standards>
            <standard ref="2.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;To ensure that your Auto Scaling group can determine instance health based on additional load balancer tests, configure the Auto Scaling group to use Elastic Load Balancing (ELB) health checks. The load balancer periodically sends pings, attempts connections, or sends requests to test the EC2 instances and determines if an instance is unhealthy. If you configure the Auto Scaling group to use Elastic Load Balancing health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the Elastic Load Balancing health checks. If you attach multiple load balancer target groups or Classic Load Balancers to the group, all of them must report that an instance is healthy in order for it to consider the instance healthy. If any one of them reports an instance as unhealthy, the Auto Scaling group replaces the instance, even if others report it as healthy.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.866">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" name="Connect to AWS EC2 Auto Scaling using an Interface VPC Endpoint" issueId="" issueLink="" platform="" cost="0" risk="23" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Connect to AWS EC2 Auto Scaling using an Interface VPC Endpoint&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can improve the security posture of your VPC by configuring Amazon EC2 Auto Scaling to use an interface VPC endpoint. Interface endpoints are powered by AWS PrivateLink, a technology that enables you to privately access Amazon EC2 Auto Scaling APIs by restricting all network traffic between your VPC and Amazon EC2 Auto Scaling to the Amazon network. With interface endpoints, you also don't need an internet gateway, a NAT device, or a virtual private gateway.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create an interface VPC endpoint&lt;/p&gt; 
&lt;p&gt;You can create a VPC endpoint for the Amazon EC2 Auto Scaling service using either the Amazon VPC console or the AWS Command Line Interface (AWS CLI).&lt;/p&gt; 
&lt;p&gt;Create an endpoint for Amazon EC2 Auto Scaling using the following service name:&lt;/p&gt; 
&lt;p&gt;com.amazonaws.region.autoscaling - Creates an endpoint for the Amazon EC2 Auto Scaling API operations.&lt;/p&gt; 
&lt;p&gt;cn.com.amazonaws.region.autoscaling - Creates an endpoint for the Amazon EC2 Auto Scaling API operations in the AWS China (Beijing) Region and AWS China (Ningxia) Region.&lt;/p&gt; 
&lt;p&gt;The following are the general steps for setting up an interface endpoint:&lt;/p&gt; 
&lt;p&gt;1. Choose the VPC in which to create the interface endpoint, and provide the name of the AWS service, endpoint service, or AWS Marketplace service to which you're connecting.&lt;/p&gt; 
&lt;p&gt;2. Choose a subnet in your VPC to use the interface endpoint. We create an endpoint network interface in the subnet. You can specify more than one subnet in different Availability Zones (as supported by the service) to help ensure that your interface endpoint is resilient to Availability Zone failures. In that case, we create an endpoint network interface in each subnet that you specify.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; An endpoint network interface is a requester-managed network interface. You can view it in your account, but you cannot manage it yourself. For more information, see Elastic Network Interfaces.&lt;/p&gt; 
&lt;p&gt;3. Specify the security groups to associate with the endpoint network interface. The security group rules control the traffic to the endpoint network interface from resources in your VPC. If you do not specify a security group, we associate the default security group for the VPC.&lt;/p&gt; 
&lt;p&gt;4. (Optional, AWS services and AWS Marketplace Partner services only) Enable private DNS for the endpoint to enable you to make requests to the service using its default DNS hostname.&lt;/p&gt; 
&lt;p&gt;Important&lt;br&gt; Private DNS is enabled by default for endpoints created for AWS services and AWS Marketplace Partner services.&lt;/p&gt; 
&lt;p&gt;Private DNS is enabled in the other subnets which are in the same VPC and Availability Zone or Local Zone.&lt;/p&gt; 
&lt;p&gt;5. When the service provider and the consumer are in different accounts, see Interface endpoint Availability Zone considerations for information about how to use Availability Zone IDs to identify the interface endpoint Availability Zone.&lt;/p&gt; 
&lt;p&gt;6. After you create the interface endpoint, it's available to use when it's accepted by the service provider. The service provider must configure the service to accept requests automatically or manually. AWS services and AWS Marketplace services generally accept all endpoint requests automatically.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon EC2 Auto Scaling and interface VPC endpoints" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-vpc-endpoints.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Viewing your interface endpoint&lt;br /&gt;
After you've created an interface endpoint, you can view information about it using the Console or the Command line.&lt;/p&gt;

	&lt;p&gt;To view information about an interface endpoint using the console:&lt;/p&gt;

	&lt;p&gt;1. Open the Amazon VPC console.&lt;/p&gt;

	&lt;p&gt;2. In the navigation pane, choose Endpoints and select your interface endpoint.&lt;/p&gt;

	&lt;p&gt;3. To view information about the interface endpoint, choose Details. The DNS Names field displays the DNS names to use to access the service.&lt;/p&gt;

	&lt;p&gt;4. To view the subnets in which the interface endpoint has been created, and the ID of the endpoint network interface in each subnet, choose Subnets.&lt;/p&gt;

	&lt;p&gt;5. To view the security groups that are associated with the endpoint network interface, choose Security Groups.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.866">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" name="Control access to AWS EC2 Auto Scaling" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Control access to AWS EC2 Auto Scaling&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; By default, IAM users and roles don't have permission to create or modify Amazon EC2 Auto Scaling resources. They also can't perform tasks using the AWS Management Console, AWS CLI, or AWS API. An IAM administrator must create IAM policies that give users and roles permission to perform specific API operations on the specified resources they need. The administrator must then attach those policies to the IAM users or groups that require those permissions.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Example - Control access to creating and managing Auto Scaling groups and scaling policies&lt;/p&gt; 
&lt;p&gt;The following policy gives users permissions to use all Amazon EC2 Auto Scaling actions that include the string Scaling in their names, as long as the Auto Scaling group has the tag purpose=webserver. Because the Describe actions do not support resource-level permissions, you must specify them in a separate statement without conditions.&lt;/p&gt; 
&lt;p&gt;{ "Version": "2012-10-17", "Statement": [ { "Effect": "Allow", "Action": ["autoscaling:&lt;strong&gt;Scaling&lt;/strong&gt;"], "Resource": "*", "Condition": { "StringEquals": { "autoscaling:ResourceTag/purpose": "webserver" } } }, { "Effect": "Allow", "Action": "autoscaling:Describe*Scaling*", "Resource": "*" }]&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon EC2 Auto Scaling identity-based policy examples" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/security_iam_id-based-policy-examples.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.865">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" name="Create a CloudWatch alarms for AWS EC2 Auto Scaling group" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create a CloudWatch alarms for AWS EC2 Auto Scaling group&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; One purpose for monitoring metrics is to verify that your application is performing as expected. In Amazon CloudWatch, you can create an alarm that sends a notification when the value of a certain metric is beyond what you consider an acceptable threshold. The metrics are available at one-minute granularity at no additional charge, but you must enable them. &lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Start by identifying the metric to monitor. For example, you can configure an alarm to watch over the average CPU utilization of the EC2 instances in your Auto Scaling group. The action can be a notification that is sent to you when the average CPU utilization of the group's instances breaches the threshold that you specified for the consecutive periods you specified. For example, if the metric stays at or above 70 percent for 4 consecutive periods of 1 minute each.&lt;/p&gt; 
&lt;p&gt;To create a CloudWatch alarm for your Auto Scaling group&lt;/p&gt; 
&lt;p&gt;1. Open the CloudWatch console.&lt;/p&gt; 
&lt;p&gt;2. If necessary, change the region. From the navigation bar, select the region where your Auto Scaling group resides.&lt;/p&gt; 
&lt;p&gt;3. On the navigation pane, choose Alarms and then choose Create alarm.&lt;/p&gt; 
&lt;p&gt;4. Choose Select metric.&lt;/p&gt; 
&lt;p&gt;5. On the All metrics tab, select a metric as follows:&lt;/p&gt; 
&lt;p&gt;- To display only the metrics reported for your Auto Scaling groups, choose EC2, and then choose By Auto Scaling Group. To view the metrics for a single Auto Scaling group, type its name in the search field.&lt;/p&gt; 
&lt;p&gt;- Select the row that contains the metric for the Auto Scaling group that you want to create an alarm on.&lt;/p&gt; 
&lt;p&gt;- Choose Select metric. The Specify metric and conditions page appears, showing a graph and other information about the metric.&lt;/p&gt; 
&lt;p&gt;6. For Period, choose the evaluation period for the alarm, for example, 1 minute. When evaluating the alarm, each period is aggregated into one data point.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; A shorter period creates a more sensitive alarm.&lt;/p&gt; 
&lt;p&gt;7. Under Conditions, do the following:&lt;/p&gt; 
&lt;p&gt;- For Threshold type, choose Static.&lt;/p&gt; 
&lt;p&gt;- For Whenever metric is, specify whether you want the value of the metric to be greater than, greater than or equal to, less than, or less than or equal to the threshold to trigger the alarm. Then, under than, enter the threshold value that you want to trigger the alarm.&lt;/p&gt; 
&lt;p&gt;8. Under Additional configuration, do the following:&lt;/p&gt; 
&lt;p&gt;- For Datapoints to alarm, enter the number of data points (evaluation periods) during which the metric value must meet the threshold conditions to trigger the alarm. For example, two consecutive periods of 5 minutes would take 10 minutes to trigger the alarm.&lt;/p&gt; 
&lt;p&gt;- For Missing data treatment, choose what you want the alarm to do if some data is missing. For more information, see Configuring how CloudWatch alarms treat missing data in the Amazon CloudWatch User Guide.&lt;/p&gt; 
&lt;p&gt;9. Choose Next.&lt;/p&gt; 
&lt;p&gt;10. Under Notification, you can choose or create the Amazon SNS topic you want to use to receive notifications. Otherwise, you can remove the notification now and add one later when you are ready.&lt;/p&gt; 
&lt;p&gt;11. Choose Next.&lt;/p&gt; 
&lt;p&gt;12. Enter a name and, optionally, a description for the alarm, and then choose Next.&lt;/p&gt; 
&lt;p&gt;13. Choose Create Alarm.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring CloudWatch metrics for your Auto Scaling groups and instances" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;To test your rule that triggers on an API call, you have to trigger it with its Specific operation as defined into the CloudWatch console.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.866">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" name="Enable Auto Scaling group metrics" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable AWS EC2 Auto Scaling group metrics&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Metrics are the fundamental concept in CloudWatch. A metric represents a time-ordered set of data points that are published to CloudWatch. Think of a metric as a variable to monitor, and the data points as representing the values of that variable over time. You can use these metrics to verify that your system is performing as expected.&lt;br&gt; Amazon EC2 Auto Scaling publishes data points to CloudWatch about your Auto Scaling groups. The metrics are available at one-minute granularity at no additional charge, but you must enable them. By doing this, you get continuous visibility into the operations of your Auto Scaling groups so that you can quickly respond to changes in your workloads.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable Auto Scaling group metrics (console)&lt;/p&gt; 
&lt;p&gt;When you enable Auto Scaling group metrics, your Auto Scaling group sends sampled data to CloudWatch every minute. There is no charge for enabling these metrics.&lt;/p&gt; 
&lt;p&gt;To enable group metrics&lt;/p&gt; 
&lt;p&gt;1. Open the Amazon EC2 Auto Scaling console.&lt;/p&gt; 
&lt;p&gt;2. Select the check box next to your Auto Scaling group. A split pane opens up in the bottom part of the page, showing information about the group that's selected.&lt;/p&gt; 
&lt;p&gt;3. On the Monitoring tab, select the Auto Scaling group metrics collection, Enable check box located at the top of the page under Auto Scaling.&lt;/p&gt; 
&lt;p&gt;Enable Auto Scaling group metrics (AWS CLI)&lt;/p&gt; 
&lt;p&gt;To enable group metrics&lt;/p&gt; 
&lt;p&gt;Enable one or more group metrics using the enable-metrics-collection command. For example, the following command enables the GroupDesiredCapacity metric.&lt;/p&gt; 
&lt;p&gt;aws autoscaling enable-metrics-collection -auto-scaling-group-name my-asg \&lt;br&gt; -metrics GroupDesiredCapacity -granularity "1Minute"&lt;/p&gt; 
&lt;p&gt;If you omit the -metrics option, all metrics are enabled.&lt;/p&gt; 
&lt;p&gt;aws autoscaling enable-metrics-collection -auto-scaling-group-name my-asg \&lt;br&gt; -granularity "1Minute"&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring CloudWatch metrics for your Auto Scaling groups and instances" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;To view CloudWatch metrics (AWS CLI)&lt;/p&gt;

	&lt;p&gt;To view all metrics for all your Auto Scaling groups, use the following list-metrics command.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling"&lt;/p&gt;

	&lt;p&gt;To view the metrics for a single Auto Scaling group, specify the AutoScalingGroupName dimension as follows.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling" -dimensions Name=AutoScalingGroupName,Value=my-asg&lt;/p&gt;

	&lt;p&gt;To view a single metric for all your Auto Scaling groups, specify the name of the metric as follows.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling" -metric-name GroupDesiredCapacity&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.866">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.5-1.6" name="Encrypt all EBS Volumes for tier" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;&lt;br&gt;Elastic Block Storage (EBS) volumes can be encrypted using AWS Key Management Service (KMS). In this configuration, encryption and decryption are handled transparently and require no additional action from the user, an Amazon EC2 instance, or an application. When an encrypted Amazon EBS volume is attached to a supported Amazon EC2 instance type, the data stored at rest on the volume, disk I/O, and snapshots created from the volume are all encrypted. The encryption occurs on the servers that host Amazon EC2 instances. Additionally, snapshots of encrypted volumes are automatically encrypted, and volumes that are created from encrypted snapshots are also automatically encrypted. It is recommended that all EBS volumes for the web tier be encrypted.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;*Note: references to Web tier are also applicable to App tier.&lt;/p&gt;&lt;p&gt;&lt;br&gt;Using the Amazon unified command line interface:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Note all the volume ids of unencrypted EBS volumes and create a snapshot for each of them:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-snapshot --volume-id &amp;lt;unencrypted_ebs_volume&amp;gt; --description "Snapshot for encryption operation"&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Note the SnapshotIdelement from the output of step 1 and copy the snapshot to an encrypted snapshot using the KMS key created for the Web-tier:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 copy-snapshot --source-region &amp;lt;application_region&amp;gt; --source-snapshot-id &amp;lt;unencrypted_ebs_snapshot&amp;gt; --description "Encrypted snapshot." --encrypted --kms-keyid &amp;lt;web_tier_kms_key&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Note the SnapshotId element from the output of step 2 and create a new EBS volume from the encrypted snapshot in the same Availability Zone as the unencrypted volume:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-volume --availability-zone &amp;lt;application_az&amp;gt; --snapshot-id &amp;lt;encrypted_ebs_snapshot&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Tag the newly created EBS volume using the Volume Id from the previous step &amp;lt;encrypted_ebs_volume&amp;gt;:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-tags --resources &amp;lt;encrypted_ebs_volume&amp;gt; --tags Key=&amp;lt;web_tier_tag&amp;gt;,Value=&amp;lt;web_tier_tag_value&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Delete unencrypted EBS volume:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 delete-volume --volume-id &amp;lt;unencrypted_ebs_volume&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Copy snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/copy-snapshot.html"/>
            <reference name="Create snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-snapshot.html"/>
            <reference name="Create volume" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-volume.html"/>
            <reference name="Delete volume" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-volume.html"/>
            <reference name="Describe volumes" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-volumes.html"/>
            <reference name="EBS Encryption Considerations" url="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html"/>
          </references>
          <standards>
            <standard ref="1.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="1.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Using the Amazon unified command line interface: (Note that you should replace &amp;lt;web_tier_tag&amp;gt;:&amp;lt;web_tier_tag_value&amp;gt; with your own tag and value for the Web tier)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Note the EBS volume ids, Instance ids, Availability Zones, and check if the Encrypted element is True or False&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 describe-volumes --filters Name=tag:&amp;lt;web_tier_tag&amp;gt;,Values=&amp;lt;web_tier_tag_value&amp;gt; --query 'Volumes[*].{VolumeId:VolumeId, Encrypted:Encrypted, AvailabilityZone:AvailabilityZone, InstanceId:Attachments[*].InstanceId}' --output table&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.866">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.1" name="Tag all resources" issueId="" issueLink="" platform="" cost="0" risk="23" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
 &lt;b&gt;Description&lt;/b&gt;:
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Tags enable customers to categorize AWS resources in different ways, for example, by purpose, owner, or environment.
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Each tag consists of a key and an optional value, both of which customer's define.
  You should define a set of tags for the following items to help you track each instance's owner and operating environment, cost center, and other items.
&lt;/div&gt;
&lt;div&gt;
 &lt;ol&gt;
  &lt;li&gt;Amazon EC2 instances&lt;/li&gt;
  &lt;li&gt;ELB&lt;/li&gt;
  &lt;li&gt;EBS Volumes&lt;/li&gt;
  &lt;li&gt;S3 Buckets&lt;/li&gt;
 &lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  A resource may have up to 10 tags associated with key &amp;amp; value such as:
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Key=tier, Value=app&lt;/li&gt;
  &lt;li&gt;Key=environment, Value=production&lt;/li&gt;
  &lt;li&gt;Key=costcenter, Value=sales&lt;/li&gt;
 &lt;/ul&gt;
 &lt;div&gt;
  &lt;b&gt;Remediation:&lt;/b&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;&lt;br&gt;&lt;/b&gt;
  Tag all your 3 tier Web Application resources based on their tier membership (Web, App, Data), and your organizational requirements.
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Cloud Compliance" url="https://d0.awsstatic.com/whitepapers/compliance/AWS_Anitian_Wookbook_PCI_Cloud_Compliance.pdf"/>
            <reference name="Resource groups and tagging" url="https://aws.amazon.com/blogs/aws/resource-groups-and-tagging/"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify tags are being used.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.866">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="VOLUMES-NOT-ENCRYPTED">
                  <countermeasures>
                    <countermeasure ref="aws-tier-1.5-1.6" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-1.5-1.6" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="OWASP-A10-2017" issueId="" issueLink="" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" mitigation="34"/>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" mitigation="33"/>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" mitigation="34"/>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" mitigation="33"/>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-NET-01">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.1" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" mitigation="50"/>
                <countermeasure ref="aws-tier-5.1" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="4b8773b2-57d4-4f92-9829-3b1aff6ceff4" diagramComponentId="efc34b33-9365-464d-bd69-337317474f1e" ref="c9f38dcb-e6f8-469b-b027-3db87175608b" name="AWS EC2 Auto Scaling" desc="" library="Hydras-AWS-Foundation" parentComponentRef="ade2b1c6-8bd1-4ccb-a9eb-4ca92d553182" componentDefinitionRef="CD-EC2-AUTO-SCALING" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.500">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.500">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.499">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="VOLUMES-NOT-ENCRYPTED" name="The volumes are not encrypted" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Volumes are not encrypted, leading to the disclosure of information.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.500">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-01" name="Unauthorized connection attempts are allowed on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To avoid this, access to network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.500">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" name="Add Elastic Load Balancing health checks to an Auto Scaling group" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The default health checks for an Auto Scaling group are EC2 status checks only. If an instance fails these status checks, it is marked unhealthy and is terminated while Amazon EC2 Auto Scaling launches a new replacement instance.&lt;/p&gt;&lt;p&gt;You can attach one or more load balancer target groups, one or more Classic Load Balancers, or both to your Auto Scaling group. However, by default, the Auto Scaling group does not consider an instance unhealthy and replace it if it fails the Elastic Load Balancing health checks.&lt;/p&gt;&lt;p&gt;Use the following procedure to add Elastic Load Balancing (ELB) health checks to an Auto Scaling group.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;To add Elastic Load Balancing health checks&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Open the Amazon EC2 Auto Scaling console at &lt;a href="https://console.aws.amazon.com/ec2autoscaling/"&gt;https://console.aws.amazon.com/ec2autoscaling/&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Select the check box next to an existing group.&lt;/p&gt;&lt;p&gt;A split pane opens up in the bottom of the &lt;strong&gt;Auto Scaling groups&lt;/strong&gt; page.&lt;/p&gt;&lt;p&gt;On the &lt;strong&gt;Details&lt;/strong&gt; tab, choose &lt;strong&gt;Health checks&lt;/strong&gt;, &lt;strong&gt;Edit&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;For &lt;strong&gt;Health check type&lt;/strong&gt;, select &lt;strong&gt;Enable ELB health checks&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;For &lt;strong&gt;Health check grace period&lt;/strong&gt;, enter the amount of time, in seconds, that Amazon EC2 Auto Scaling needs to wait before checking the health status of an instance after it enters the InService state. For more information, see &lt;a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-health-checks.html#health-check-grace-period"&gt;Health check grace period&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Choose &lt;strong&gt;Update&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;On the &lt;strong&gt;Instance management&lt;/strong&gt; tab, under &lt;strong&gt;Instances&lt;/strong&gt;, you can view the health status of instances. The &lt;strong&gt;Health Status&lt;/strong&gt; column displays the results of the newly added health checks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Add Elastic Load Balancing health checks" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-add-elb-healthcheck.html"/>
          </references>
          <standards>
            <standard ref="2.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;To ensure that your Auto Scaling group can determine instance health based on additional load balancer tests, configure the Auto Scaling group to use Elastic Load Balancing (ELB) health checks. The load balancer periodically sends pings, attempts connections, or sends requests to test the EC2 instances and determines if an instance is unhealthy. If you configure the Auto Scaling group to use Elastic Load Balancing health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the Elastic Load Balancing health checks. If you attach multiple load balancer target groups or Classic Load Balancers to the group, all of them must report that an instance is healthy in order for it to consider the instance healthy. If any one of them reports an instance as unhealthy, the Auto Scaling group replaces the instance, even if others report it as healthy.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.391">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" name="Connect to AWS EC2 Auto Scaling using an Interface VPC Endpoint" issueId="" issueLink="" platform="" cost="0" risk="23" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Connect to AWS EC2 Auto Scaling using an Interface VPC Endpoint&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can improve the security posture of your VPC by configuring Amazon EC2 Auto Scaling to use an interface VPC endpoint. Interface endpoints are powered by AWS PrivateLink, a technology that enables you to privately access Amazon EC2 Auto Scaling APIs by restricting all network traffic between your VPC and Amazon EC2 Auto Scaling to the Amazon network. With interface endpoints, you also don't need an internet gateway, a NAT device, or a virtual private gateway.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create an interface VPC endpoint&lt;/p&gt; 
&lt;p&gt;You can create a VPC endpoint for the Amazon EC2 Auto Scaling service using either the Amazon VPC console or the AWS Command Line Interface (AWS CLI).&lt;/p&gt; 
&lt;p&gt;Create an endpoint for Amazon EC2 Auto Scaling using the following service name:&lt;/p&gt; 
&lt;p&gt;com.amazonaws.region.autoscaling - Creates an endpoint for the Amazon EC2 Auto Scaling API operations.&lt;/p&gt; 
&lt;p&gt;cn.com.amazonaws.region.autoscaling - Creates an endpoint for the Amazon EC2 Auto Scaling API operations in the AWS China (Beijing) Region and AWS China (Ningxia) Region.&lt;/p&gt; 
&lt;p&gt;The following are the general steps for setting up an interface endpoint:&lt;/p&gt; 
&lt;p&gt;1. Choose the VPC in which to create the interface endpoint, and provide the name of the AWS service, endpoint service, or AWS Marketplace service to which you're connecting.&lt;/p&gt; 
&lt;p&gt;2. Choose a subnet in your VPC to use the interface endpoint. We create an endpoint network interface in the subnet. You can specify more than one subnet in different Availability Zones (as supported by the service) to help ensure that your interface endpoint is resilient to Availability Zone failures. In that case, we create an endpoint network interface in each subnet that you specify.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; An endpoint network interface is a requester-managed network interface. You can view it in your account, but you cannot manage it yourself. For more information, see Elastic Network Interfaces.&lt;/p&gt; 
&lt;p&gt;3. Specify the security groups to associate with the endpoint network interface. The security group rules control the traffic to the endpoint network interface from resources in your VPC. If you do not specify a security group, we associate the default security group for the VPC.&lt;/p&gt; 
&lt;p&gt;4. (Optional, AWS services and AWS Marketplace Partner services only) Enable private DNS for the endpoint to enable you to make requests to the service using its default DNS hostname.&lt;/p&gt; 
&lt;p&gt;Important&lt;br&gt; Private DNS is enabled by default for endpoints created for AWS services and AWS Marketplace Partner services.&lt;/p&gt; 
&lt;p&gt;Private DNS is enabled in the other subnets which are in the same VPC and Availability Zone or Local Zone.&lt;/p&gt; 
&lt;p&gt;5. When the service provider and the consumer are in different accounts, see Interface endpoint Availability Zone considerations for information about how to use Availability Zone IDs to identify the interface endpoint Availability Zone.&lt;/p&gt; 
&lt;p&gt;6. After you create the interface endpoint, it's available to use when it's accepted by the service provider. The service provider must configure the service to accept requests automatically or manually. AWS services and AWS Marketplace services generally accept all endpoint requests automatically.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon EC2 Auto Scaling and interface VPC endpoints" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-vpc-endpoints.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Viewing your interface endpoint&lt;br /&gt;
After you've created an interface endpoint, you can view information about it using the Console or the Command line.&lt;/p&gt;

	&lt;p&gt;To view information about an interface endpoint using the console:&lt;/p&gt;

	&lt;p&gt;1. Open the Amazon VPC console.&lt;/p&gt;

	&lt;p&gt;2. In the navigation pane, choose Endpoints and select your interface endpoint.&lt;/p&gt;

	&lt;p&gt;3. To view information about the interface endpoint, choose Details. The DNS Names field displays the DNS names to use to access the service.&lt;/p&gt;

	&lt;p&gt;4. To view the subnets in which the interface endpoint has been created, and the ID of the endpoint network interface in each subnet, choose Subnets.&lt;/p&gt;

	&lt;p&gt;5. To view the security groups that are associated with the endpoint network interface, choose Security Groups.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.391">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" name="Control access to AWS EC2 Auto Scaling" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Control access to AWS EC2 Auto Scaling&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; By default, IAM users and roles don't have permission to create or modify Amazon EC2 Auto Scaling resources. They also can't perform tasks using the AWS Management Console, AWS CLI, or AWS API. An IAM administrator must create IAM policies that give users and roles permission to perform specific API operations on the specified resources they need. The administrator must then attach those policies to the IAM users or groups that require those permissions.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Example - Control access to creating and managing Auto Scaling groups and scaling policies&lt;/p&gt; 
&lt;p&gt;The following policy gives users permissions to use all Amazon EC2 Auto Scaling actions that include the string Scaling in their names, as long as the Auto Scaling group has the tag purpose=webserver. Because the Describe actions do not support resource-level permissions, you must specify them in a separate statement without conditions.&lt;/p&gt; 
&lt;p&gt;{ "Version": "2012-10-17", "Statement": [ { "Effect": "Allow", "Action": ["autoscaling:&lt;strong&gt;Scaling&lt;/strong&gt;"], "Resource": "*", "Condition": { "StringEquals": { "autoscaling:ResourceTag/purpose": "webserver" } } }, { "Effect": "Allow", "Action": "autoscaling:Describe*Scaling*", "Resource": "*" }]&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon EC2 Auto Scaling identity-based policy examples" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/security_iam_id-based-policy-examples.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.390">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" name="Create a CloudWatch alarms for AWS EC2 Auto Scaling group" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create a CloudWatch alarms for AWS EC2 Auto Scaling group&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; One purpose for monitoring metrics is to verify that your application is performing as expected. In Amazon CloudWatch, you can create an alarm that sends a notification when the value of a certain metric is beyond what you consider an acceptable threshold. The metrics are available at one-minute granularity at no additional charge, but you must enable them. &lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Start by identifying the metric to monitor. For example, you can configure an alarm to watch over the average CPU utilization of the EC2 instances in your Auto Scaling group. The action can be a notification that is sent to you when the average CPU utilization of the group's instances breaches the threshold that you specified for the consecutive periods you specified. For example, if the metric stays at or above 70 percent for 4 consecutive periods of 1 minute each.&lt;/p&gt; 
&lt;p&gt;To create a CloudWatch alarm for your Auto Scaling group&lt;/p&gt; 
&lt;p&gt;1. Open the CloudWatch console.&lt;/p&gt; 
&lt;p&gt;2. If necessary, change the region. From the navigation bar, select the region where your Auto Scaling group resides.&lt;/p&gt; 
&lt;p&gt;3. On the navigation pane, choose Alarms and then choose Create alarm.&lt;/p&gt; 
&lt;p&gt;4. Choose Select metric.&lt;/p&gt; 
&lt;p&gt;5. On the All metrics tab, select a metric as follows:&lt;/p&gt; 
&lt;p&gt;- To display only the metrics reported for your Auto Scaling groups, choose EC2, and then choose By Auto Scaling Group. To view the metrics for a single Auto Scaling group, type its name in the search field.&lt;/p&gt; 
&lt;p&gt;- Select the row that contains the metric for the Auto Scaling group that you want to create an alarm on.&lt;/p&gt; 
&lt;p&gt;- Choose Select metric. The Specify metric and conditions page appears, showing a graph and other information about the metric.&lt;/p&gt; 
&lt;p&gt;6. For Period, choose the evaluation period for the alarm, for example, 1 minute. When evaluating the alarm, each period is aggregated into one data point.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; A shorter period creates a more sensitive alarm.&lt;/p&gt; 
&lt;p&gt;7. Under Conditions, do the following:&lt;/p&gt; 
&lt;p&gt;- For Threshold type, choose Static.&lt;/p&gt; 
&lt;p&gt;- For Whenever metric is, specify whether you want the value of the metric to be greater than, greater than or equal to, less than, or less than or equal to the threshold to trigger the alarm. Then, under than, enter the threshold value that you want to trigger the alarm.&lt;/p&gt; 
&lt;p&gt;8. Under Additional configuration, do the following:&lt;/p&gt; 
&lt;p&gt;- For Datapoints to alarm, enter the number of data points (evaluation periods) during which the metric value must meet the threshold conditions to trigger the alarm. For example, two consecutive periods of 5 minutes would take 10 minutes to trigger the alarm.&lt;/p&gt; 
&lt;p&gt;- For Missing data treatment, choose what you want the alarm to do if some data is missing. For more information, see Configuring how CloudWatch alarms treat missing data in the Amazon CloudWatch User Guide.&lt;/p&gt; 
&lt;p&gt;9. Choose Next.&lt;/p&gt; 
&lt;p&gt;10. Under Notification, you can choose or create the Amazon SNS topic you want to use to receive notifications. Otherwise, you can remove the notification now and add one later when you are ready.&lt;/p&gt; 
&lt;p&gt;11. Choose Next.&lt;/p&gt; 
&lt;p&gt;12. Enter a name and, optionally, a description for the alarm, and then choose Next.&lt;/p&gt; 
&lt;p&gt;13. Choose Create Alarm.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring CloudWatch metrics for your Auto Scaling groups and instances" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;To test your rule that triggers on an API call, you have to trigger it with its Specific operation as defined into the CloudWatch console.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.391">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" name="Enable Auto Scaling group metrics" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable AWS EC2 Auto Scaling group metrics&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Metrics are the fundamental concept in CloudWatch. A metric represents a time-ordered set of data points that are published to CloudWatch. Think of a metric as a variable to monitor, and the data points as representing the values of that variable over time. You can use these metrics to verify that your system is performing as expected.&lt;br&gt; Amazon EC2 Auto Scaling publishes data points to CloudWatch about your Auto Scaling groups. The metrics are available at one-minute granularity at no additional charge, but you must enable them. By doing this, you get continuous visibility into the operations of your Auto Scaling groups so that you can quickly respond to changes in your workloads.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable Auto Scaling group metrics (console)&lt;/p&gt; 
&lt;p&gt;When you enable Auto Scaling group metrics, your Auto Scaling group sends sampled data to CloudWatch every minute. There is no charge for enabling these metrics.&lt;/p&gt; 
&lt;p&gt;To enable group metrics&lt;/p&gt; 
&lt;p&gt;1. Open the Amazon EC2 Auto Scaling console.&lt;/p&gt; 
&lt;p&gt;2. Select the check box next to your Auto Scaling group. A split pane opens up in the bottom part of the page, showing information about the group that's selected.&lt;/p&gt; 
&lt;p&gt;3. On the Monitoring tab, select the Auto Scaling group metrics collection, Enable check box located at the top of the page under Auto Scaling.&lt;/p&gt; 
&lt;p&gt;Enable Auto Scaling group metrics (AWS CLI)&lt;/p&gt; 
&lt;p&gt;To enable group metrics&lt;/p&gt; 
&lt;p&gt;Enable one or more group metrics using the enable-metrics-collection command. For example, the following command enables the GroupDesiredCapacity metric.&lt;/p&gt; 
&lt;p&gt;aws autoscaling enable-metrics-collection -auto-scaling-group-name my-asg \&lt;br&gt; -metrics GroupDesiredCapacity -granularity "1Minute"&lt;/p&gt; 
&lt;p&gt;If you omit the -metrics option, all metrics are enabled.&lt;/p&gt; 
&lt;p&gt;aws autoscaling enable-metrics-collection -auto-scaling-group-name my-asg \&lt;br&gt; -granularity "1Minute"&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring CloudWatch metrics for your Auto Scaling groups and instances" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;To view CloudWatch metrics (AWS CLI)&lt;/p&gt;

	&lt;p&gt;To view all metrics for all your Auto Scaling groups, use the following list-metrics command.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling"&lt;/p&gt;

	&lt;p&gt;To view the metrics for a single Auto Scaling group, specify the AutoScalingGroupName dimension as follows.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling" -dimensions Name=AutoScalingGroupName,Value=my-asg&lt;/p&gt;

	&lt;p&gt;To view a single metric for all your Auto Scaling groups, specify the name of the metric as follows.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling" -metric-name GroupDesiredCapacity&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.391">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.5-1.6" name="Encrypt all EBS Volumes for tier" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;&lt;br&gt;Elastic Block Storage (EBS) volumes can be encrypted using AWS Key Management Service (KMS). In this configuration, encryption and decryption are handled transparently and require no additional action from the user, an Amazon EC2 instance, or an application. When an encrypted Amazon EBS volume is attached to a supported Amazon EC2 instance type, the data stored at rest on the volume, disk I/O, and snapshots created from the volume are all encrypted. The encryption occurs on the servers that host Amazon EC2 instances. Additionally, snapshots of encrypted volumes are automatically encrypted, and volumes that are created from encrypted snapshots are also automatically encrypted. It is recommended that all EBS volumes for the web tier be encrypted.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;*Note: references to Web tier are also applicable to App tier.&lt;/p&gt;&lt;p&gt;&lt;br&gt;Using the Amazon unified command line interface:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Note all the volume ids of unencrypted EBS volumes and create a snapshot for each of them:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-snapshot --volume-id &amp;lt;unencrypted_ebs_volume&amp;gt; --description "Snapshot for encryption operation"&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Note the SnapshotIdelement from the output of step 1 and copy the snapshot to an encrypted snapshot using the KMS key created for the Web-tier:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 copy-snapshot --source-region &amp;lt;application_region&amp;gt; --source-snapshot-id &amp;lt;unencrypted_ebs_snapshot&amp;gt; --description "Encrypted snapshot." --encrypted --kms-keyid &amp;lt;web_tier_kms_key&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Note the SnapshotId element from the output of step 2 and create a new EBS volume from the encrypted snapshot in the same Availability Zone as the unencrypted volume:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-volume --availability-zone &amp;lt;application_az&amp;gt; --snapshot-id &amp;lt;encrypted_ebs_snapshot&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Tag the newly created EBS volume using the Volume Id from the previous step &amp;lt;encrypted_ebs_volume&amp;gt;:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-tags --resources &amp;lt;encrypted_ebs_volume&amp;gt; --tags Key=&amp;lt;web_tier_tag&amp;gt;,Value=&amp;lt;web_tier_tag_value&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Delete unencrypted EBS volume:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 delete-volume --volume-id &amp;lt;unencrypted_ebs_volume&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Copy snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/copy-snapshot.html"/>
            <reference name="Create snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-snapshot.html"/>
            <reference name="Create volume" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-volume.html"/>
            <reference name="Delete volume" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-volume.html"/>
            <reference name="Describe volumes" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-volumes.html"/>
            <reference name="EBS Encryption Considerations" url="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html"/>
          </references>
          <standards>
            <standard ref="1.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="1.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Using the Amazon unified command line interface: (Note that you should replace &amp;lt;web_tier_tag&amp;gt;:&amp;lt;web_tier_tag_value&amp;gt; with your own tag and value for the Web tier)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Note the EBS volume ids, Instance ids, Availability Zones, and check if the Encrypted element is True or False&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 describe-volumes --filters Name=tag:&amp;lt;web_tier_tag&amp;gt;,Values=&amp;lt;web_tier_tag_value&amp;gt; --query 'Volumes[*].{VolumeId:VolumeId, Encrypted:Encrypted, AvailabilityZone:AvailabilityZone, InstanceId:Attachments[*].InstanceId}' --output table&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.391">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.1" name="Tag all resources" issueId="" issueLink="" platform="" cost="0" risk="23" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
 &lt;b&gt;Description&lt;/b&gt;:
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Tags enable customers to categorize AWS resources in different ways, for example, by purpose, owner, or environment.
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Each tag consists of a key and an optional value, both of which customer's define.
  You should define a set of tags for the following items to help you track each instance's owner and operating environment, cost center, and other items.
&lt;/div&gt;
&lt;div&gt;
 &lt;ol&gt;
  &lt;li&gt;Amazon EC2 instances&lt;/li&gt;
  &lt;li&gt;ELB&lt;/li&gt;
  &lt;li&gt;EBS Volumes&lt;/li&gt;
  &lt;li&gt;S3 Buckets&lt;/li&gt;
 &lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  A resource may have up to 10 tags associated with key &amp;amp; value such as:
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Key=tier, Value=app&lt;/li&gt;
  &lt;li&gt;Key=environment, Value=production&lt;/li&gt;
  &lt;li&gt;Key=costcenter, Value=sales&lt;/li&gt;
 &lt;/ul&gt;
 &lt;div&gt;
  &lt;b&gt;Remediation:&lt;/b&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;&lt;br&gt;&lt;/b&gt;
  Tag all your 3 tier Web Application resources based on their tier membership (Web, App, Data), and your organizational requirements.
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Cloud Compliance" url="https://d0.awsstatic.com/whitepapers/compliance/AWS_Anitian_Wookbook_PCI_Cloud_Compliance.pdf"/>
            <reference name="Resource groups and tagging" url="https://aws.amazon.com/blogs/aws/resource-groups-and-tagging/"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify tags are being used.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:20.391">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="VOLUMES-NOT-ENCRYPTED">
                  <countermeasures>
                    <countermeasure ref="aws-tier-1.5-1.6" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-1.5-1.6" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="OWASP-A10-2017" issueId="" issueLink="" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" mitigation="34"/>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" mitigation="33"/>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" mitigation="34"/>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" mitigation="33"/>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-NET-01">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.1" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" mitigation="50"/>
                <countermeasure ref="aws-tier-5.1" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="a458ac28-66e9-4e77-928b-f2712a50e198" diagramComponentId="4f555da8-7e94-4bbf-a849-54cdfbbc55cc" ref="d85b7d1a-165f-49b1-a71b-d998bcb5edb3" name="AWS EC2 Auto Scaling" desc="" library="Hydras-AWS-Foundation" parentComponentRef="ade2b1c6-8bd1-4ccb-a9eb-4ca92d553182" componentDefinitionRef="CD-EC2-AUTO-SCALING" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.563">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.563">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.559">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="VOLUMES-NOT-ENCRYPTED" name="The volumes are not encrypted" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Volumes are not encrypted, leading to the disclosure of information.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.563">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-01" name="Unauthorized connection attempts are allowed on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To avoid this, access to network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.563">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" name="Add Elastic Load Balancing health checks to an Auto Scaling group" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The default health checks for an Auto Scaling group are EC2 status checks only. If an instance fails these status checks, it is marked unhealthy and is terminated while Amazon EC2 Auto Scaling launches a new replacement instance.&lt;/p&gt;&lt;p&gt;You can attach one or more load balancer target groups, one or more Classic Load Balancers, or both to your Auto Scaling group. However, by default, the Auto Scaling group does not consider an instance unhealthy and replace it if it fails the Elastic Load Balancing health checks.&lt;/p&gt;&lt;p&gt;Use the following procedure to add Elastic Load Balancing (ELB) health checks to an Auto Scaling group.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;To add Elastic Load Balancing health checks&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Open the Amazon EC2 Auto Scaling console at &lt;a href="https://console.aws.amazon.com/ec2autoscaling/"&gt;https://console.aws.amazon.com/ec2autoscaling/&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Select the check box next to an existing group.&lt;/p&gt;&lt;p&gt;A split pane opens up in the bottom of the &lt;strong&gt;Auto Scaling groups&lt;/strong&gt; page.&lt;/p&gt;&lt;p&gt;On the &lt;strong&gt;Details&lt;/strong&gt; tab, choose &lt;strong&gt;Health checks&lt;/strong&gt;, &lt;strong&gt;Edit&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;For &lt;strong&gt;Health check type&lt;/strong&gt;, select &lt;strong&gt;Enable ELB health checks&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;For &lt;strong&gt;Health check grace period&lt;/strong&gt;, enter the amount of time, in seconds, that Amazon EC2 Auto Scaling needs to wait before checking the health status of an instance after it enters the InService state. For more information, see &lt;a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-health-checks.html#health-check-grace-period"&gt;Health check grace period&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Choose &lt;strong&gt;Update&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;On the &lt;strong&gt;Instance management&lt;/strong&gt; tab, under &lt;strong&gt;Instances&lt;/strong&gt;, you can view the health status of instances. The &lt;strong&gt;Health Status&lt;/strong&gt; column displays the results of the newly added health checks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Add Elastic Load Balancing health checks" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-add-elb-healthcheck.html"/>
          </references>
          <standards>
            <standard ref="2.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;To ensure that your Auto Scaling group can determine instance health based on additional load balancer tests, configure the Auto Scaling group to use Elastic Load Balancing (ELB) health checks. The load balancer periodically sends pings, attempts connections, or sends requests to test the EC2 instances and determines if an instance is unhealthy. If you configure the Auto Scaling group to use Elastic Load Balancing health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the Elastic Load Balancing health checks. If you attach multiple load balancer target groups or Classic Load Balancers to the group, all of them must report that an instance is healthy in order for it to consider the instance healthy. If any one of them reports an instance as unhealthy, the Auto Scaling group replaces the instance, even if others report it as healthy.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.431">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" name="Connect to AWS EC2 Auto Scaling using an Interface VPC Endpoint" issueId="" issueLink="" platform="" cost="0" risk="23" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Connect to AWS EC2 Auto Scaling using an Interface VPC Endpoint&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can improve the security posture of your VPC by configuring Amazon EC2 Auto Scaling to use an interface VPC endpoint. Interface endpoints are powered by AWS PrivateLink, a technology that enables you to privately access Amazon EC2 Auto Scaling APIs by restricting all network traffic between your VPC and Amazon EC2 Auto Scaling to the Amazon network. With interface endpoints, you also don't need an internet gateway, a NAT device, or a virtual private gateway.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create an interface VPC endpoint&lt;/p&gt; 
&lt;p&gt;You can create a VPC endpoint for the Amazon EC2 Auto Scaling service using either the Amazon VPC console or the AWS Command Line Interface (AWS CLI).&lt;/p&gt; 
&lt;p&gt;Create an endpoint for Amazon EC2 Auto Scaling using the following service name:&lt;/p&gt; 
&lt;p&gt;com.amazonaws.region.autoscaling - Creates an endpoint for the Amazon EC2 Auto Scaling API operations.&lt;/p&gt; 
&lt;p&gt;cn.com.amazonaws.region.autoscaling - Creates an endpoint for the Amazon EC2 Auto Scaling API operations in the AWS China (Beijing) Region and AWS China (Ningxia) Region.&lt;/p&gt; 
&lt;p&gt;The following are the general steps for setting up an interface endpoint:&lt;/p&gt; 
&lt;p&gt;1. Choose the VPC in which to create the interface endpoint, and provide the name of the AWS service, endpoint service, or AWS Marketplace service to which you're connecting.&lt;/p&gt; 
&lt;p&gt;2. Choose a subnet in your VPC to use the interface endpoint. We create an endpoint network interface in the subnet. You can specify more than one subnet in different Availability Zones (as supported by the service) to help ensure that your interface endpoint is resilient to Availability Zone failures. In that case, we create an endpoint network interface in each subnet that you specify.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; An endpoint network interface is a requester-managed network interface. You can view it in your account, but you cannot manage it yourself. For more information, see Elastic Network Interfaces.&lt;/p&gt; 
&lt;p&gt;3. Specify the security groups to associate with the endpoint network interface. The security group rules control the traffic to the endpoint network interface from resources in your VPC. If you do not specify a security group, we associate the default security group for the VPC.&lt;/p&gt; 
&lt;p&gt;4. (Optional, AWS services and AWS Marketplace Partner services only) Enable private DNS for the endpoint to enable you to make requests to the service using its default DNS hostname.&lt;/p&gt; 
&lt;p&gt;Important&lt;br&gt; Private DNS is enabled by default for endpoints created for AWS services and AWS Marketplace Partner services.&lt;/p&gt; 
&lt;p&gt;Private DNS is enabled in the other subnets which are in the same VPC and Availability Zone or Local Zone.&lt;/p&gt; 
&lt;p&gt;5. When the service provider and the consumer are in different accounts, see Interface endpoint Availability Zone considerations for information about how to use Availability Zone IDs to identify the interface endpoint Availability Zone.&lt;/p&gt; 
&lt;p&gt;6. After you create the interface endpoint, it's available to use when it's accepted by the service provider. The service provider must configure the service to accept requests automatically or manually. AWS services and AWS Marketplace services generally accept all endpoint requests automatically.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon EC2 Auto Scaling and interface VPC endpoints" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-vpc-endpoints.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Viewing your interface endpoint&lt;br /&gt;
After you've created an interface endpoint, you can view information about it using the Console or the Command line.&lt;/p&gt;

	&lt;p&gt;To view information about an interface endpoint using the console:&lt;/p&gt;

	&lt;p&gt;1. Open the Amazon VPC console.&lt;/p&gt;

	&lt;p&gt;2. In the navigation pane, choose Endpoints and select your interface endpoint.&lt;/p&gt;

	&lt;p&gt;3. To view information about the interface endpoint, choose Details. The DNS Names field displays the DNS names to use to access the service.&lt;/p&gt;

	&lt;p&gt;4. To view the subnets in which the interface endpoint has been created, and the ID of the endpoint network interface in each subnet, choose Subnets.&lt;/p&gt;

	&lt;p&gt;5. To view the security groups that are associated with the endpoint network interface, choose Security Groups.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.431">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" name="Control access to AWS EC2 Auto Scaling" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Control access to AWS EC2 Auto Scaling&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; By default, IAM users and roles don't have permission to create or modify Amazon EC2 Auto Scaling resources. They also can't perform tasks using the AWS Management Console, AWS CLI, or AWS API. An IAM administrator must create IAM policies that give users and roles permission to perform specific API operations on the specified resources they need. The administrator must then attach those policies to the IAM users or groups that require those permissions.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Example - Control access to creating and managing Auto Scaling groups and scaling policies&lt;/p&gt; 
&lt;p&gt;The following policy gives users permissions to use all Amazon EC2 Auto Scaling actions that include the string Scaling in their names, as long as the Auto Scaling group has the tag purpose=webserver. Because the Describe actions do not support resource-level permissions, you must specify them in a separate statement without conditions.&lt;/p&gt; 
&lt;p&gt;{ "Version": "2012-10-17", "Statement": [ { "Effect": "Allow", "Action": ["autoscaling:&lt;strong&gt;Scaling&lt;/strong&gt;"], "Resource": "*", "Condition": { "StringEquals": { "autoscaling:ResourceTag/purpose": "webserver" } } }, { "Effect": "Allow", "Action": "autoscaling:Describe*Scaling*", "Resource": "*" }]&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon EC2 Auto Scaling identity-based policy examples" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/security_iam_id-based-policy-examples.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.429">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" name="Create a CloudWatch alarms for AWS EC2 Auto Scaling group" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create a CloudWatch alarms for AWS EC2 Auto Scaling group&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; One purpose for monitoring metrics is to verify that your application is performing as expected. In Amazon CloudWatch, you can create an alarm that sends a notification when the value of a certain metric is beyond what you consider an acceptable threshold. The metrics are available at one-minute granularity at no additional charge, but you must enable them. &lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Start by identifying the metric to monitor. For example, you can configure an alarm to watch over the average CPU utilization of the EC2 instances in your Auto Scaling group. The action can be a notification that is sent to you when the average CPU utilization of the group's instances breaches the threshold that you specified for the consecutive periods you specified. For example, if the metric stays at or above 70 percent for 4 consecutive periods of 1 minute each.&lt;/p&gt; 
&lt;p&gt;To create a CloudWatch alarm for your Auto Scaling group&lt;/p&gt; 
&lt;p&gt;1. Open the CloudWatch console.&lt;/p&gt; 
&lt;p&gt;2. If necessary, change the region. From the navigation bar, select the region where your Auto Scaling group resides.&lt;/p&gt; 
&lt;p&gt;3. On the navigation pane, choose Alarms and then choose Create alarm.&lt;/p&gt; 
&lt;p&gt;4. Choose Select metric.&lt;/p&gt; 
&lt;p&gt;5. On the All metrics tab, select a metric as follows:&lt;/p&gt; 
&lt;p&gt;- To display only the metrics reported for your Auto Scaling groups, choose EC2, and then choose By Auto Scaling Group. To view the metrics for a single Auto Scaling group, type its name in the search field.&lt;/p&gt; 
&lt;p&gt;- Select the row that contains the metric for the Auto Scaling group that you want to create an alarm on.&lt;/p&gt; 
&lt;p&gt;- Choose Select metric. The Specify metric and conditions page appears, showing a graph and other information about the metric.&lt;/p&gt; 
&lt;p&gt;6. For Period, choose the evaluation period for the alarm, for example, 1 minute. When evaluating the alarm, each period is aggregated into one data point.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; A shorter period creates a more sensitive alarm.&lt;/p&gt; 
&lt;p&gt;7. Under Conditions, do the following:&lt;/p&gt; 
&lt;p&gt;- For Threshold type, choose Static.&lt;/p&gt; 
&lt;p&gt;- For Whenever metric is, specify whether you want the value of the metric to be greater than, greater than or equal to, less than, or less than or equal to the threshold to trigger the alarm. Then, under than, enter the threshold value that you want to trigger the alarm.&lt;/p&gt; 
&lt;p&gt;8. Under Additional configuration, do the following:&lt;/p&gt; 
&lt;p&gt;- For Datapoints to alarm, enter the number of data points (evaluation periods) during which the metric value must meet the threshold conditions to trigger the alarm. For example, two consecutive periods of 5 minutes would take 10 minutes to trigger the alarm.&lt;/p&gt; 
&lt;p&gt;- For Missing data treatment, choose what you want the alarm to do if some data is missing. For more information, see Configuring how CloudWatch alarms treat missing data in the Amazon CloudWatch User Guide.&lt;/p&gt; 
&lt;p&gt;9. Choose Next.&lt;/p&gt; 
&lt;p&gt;10. Under Notification, you can choose or create the Amazon SNS topic you want to use to receive notifications. Otherwise, you can remove the notification now and add one later when you are ready.&lt;/p&gt; 
&lt;p&gt;11. Choose Next.&lt;/p&gt; 
&lt;p&gt;12. Enter a name and, optionally, a description for the alarm, and then choose Next.&lt;/p&gt; 
&lt;p&gt;13. Choose Create Alarm.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring CloudWatch metrics for your Auto Scaling groups and instances" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;To test your rule that triggers on an API call, you have to trigger it with its Specific operation as defined into the CloudWatch console.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.431">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" name="Enable Auto Scaling group metrics" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable AWS EC2 Auto Scaling group metrics&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Metrics are the fundamental concept in CloudWatch. A metric represents a time-ordered set of data points that are published to CloudWatch. Think of a metric as a variable to monitor, and the data points as representing the values of that variable over time. You can use these metrics to verify that your system is performing as expected.&lt;br&gt; Amazon EC2 Auto Scaling publishes data points to CloudWatch about your Auto Scaling groups. The metrics are available at one-minute granularity at no additional charge, but you must enable them. By doing this, you get continuous visibility into the operations of your Auto Scaling groups so that you can quickly respond to changes in your workloads.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable Auto Scaling group metrics (console)&lt;/p&gt; 
&lt;p&gt;When you enable Auto Scaling group metrics, your Auto Scaling group sends sampled data to CloudWatch every minute. There is no charge for enabling these metrics.&lt;/p&gt; 
&lt;p&gt;To enable group metrics&lt;/p&gt; 
&lt;p&gt;1. Open the Amazon EC2 Auto Scaling console.&lt;/p&gt; 
&lt;p&gt;2. Select the check box next to your Auto Scaling group. A split pane opens up in the bottom part of the page, showing information about the group that's selected.&lt;/p&gt; 
&lt;p&gt;3. On the Monitoring tab, select the Auto Scaling group metrics collection, Enable check box located at the top of the page under Auto Scaling.&lt;/p&gt; 
&lt;p&gt;Enable Auto Scaling group metrics (AWS CLI)&lt;/p&gt; 
&lt;p&gt;To enable group metrics&lt;/p&gt; 
&lt;p&gt;Enable one or more group metrics using the enable-metrics-collection command. For example, the following command enables the GroupDesiredCapacity metric.&lt;/p&gt; 
&lt;p&gt;aws autoscaling enable-metrics-collection -auto-scaling-group-name my-asg \&lt;br&gt; -metrics GroupDesiredCapacity -granularity "1Minute"&lt;/p&gt; 
&lt;p&gt;If you omit the -metrics option, all metrics are enabled.&lt;/p&gt; 
&lt;p&gt;aws autoscaling enable-metrics-collection -auto-scaling-group-name my-asg \&lt;br&gt; -granularity "1Minute"&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring CloudWatch metrics for your Auto Scaling groups and instances" url="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;To view CloudWatch metrics (AWS CLI)&lt;/p&gt;

	&lt;p&gt;To view all metrics for all your Auto Scaling groups, use the following list-metrics command.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling"&lt;/p&gt;

	&lt;p&gt;To view the metrics for a single Auto Scaling group, specify the AutoScalingGroupName dimension as follows.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling" -dimensions Name=AutoScalingGroupName,Value=my-asg&lt;/p&gt;

	&lt;p&gt;To view a single metric for all your Auto Scaling groups, specify the name of the metric as follows.&lt;/p&gt;

	&lt;p&gt;aws cloudwatch list-metrics -namespace "AWS/AutoScaling" -metric-name GroupDesiredCapacity&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.431">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.5-1.6" name="Encrypt all EBS Volumes for tier" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;&lt;br&gt;Elastic Block Storage (EBS) volumes can be encrypted using AWS Key Management Service (KMS). In this configuration, encryption and decryption are handled transparently and require no additional action from the user, an Amazon EC2 instance, or an application. When an encrypted Amazon EBS volume is attached to a supported Amazon EC2 instance type, the data stored at rest on the volume, disk I/O, and snapshots created from the volume are all encrypted. The encryption occurs on the servers that host Amazon EC2 instances. Additionally, snapshots of encrypted volumes are automatically encrypted, and volumes that are created from encrypted snapshots are also automatically encrypted. It is recommended that all EBS volumes for the web tier be encrypted.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;*Note: references to Web tier are also applicable to App tier.&lt;/p&gt;&lt;p&gt;&lt;br&gt;Using the Amazon unified command line interface:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Note all the volume ids of unencrypted EBS volumes and create a snapshot for each of them:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-snapshot --volume-id &amp;lt;unencrypted_ebs_volume&amp;gt; --description "Snapshot for encryption operation"&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Note the SnapshotIdelement from the output of step 1 and copy the snapshot to an encrypted snapshot using the KMS key created for the Web-tier:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 copy-snapshot --source-region &amp;lt;application_region&amp;gt; --source-snapshot-id &amp;lt;unencrypted_ebs_snapshot&amp;gt; --description "Encrypted snapshot." --encrypted --kms-keyid &amp;lt;web_tier_kms_key&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Note the SnapshotId element from the output of step 2 and create a new EBS volume from the encrypted snapshot in the same Availability Zone as the unencrypted volume:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-volume --availability-zone &amp;lt;application_az&amp;gt; --snapshot-id &amp;lt;encrypted_ebs_snapshot&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Tag the newly created EBS volume using the Volume Id from the previous step &amp;lt;encrypted_ebs_volume&amp;gt;:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-tags --resources &amp;lt;encrypted_ebs_volume&amp;gt; --tags Key=&amp;lt;web_tier_tag&amp;gt;,Value=&amp;lt;web_tier_tag_value&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Delete unencrypted EBS volume:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 delete-volume --volume-id &amp;lt;unencrypted_ebs_volume&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Copy snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/copy-snapshot.html"/>
            <reference name="Create snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-snapshot.html"/>
            <reference name="Create volume" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-volume.html"/>
            <reference name="Delete volume" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-volume.html"/>
            <reference name="Describe volumes" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-volumes.html"/>
            <reference name="EBS Encryption Considerations" url="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html"/>
          </references>
          <standards>
            <standard ref="1.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="1.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Using the Amazon unified command line interface: (Note that you should replace &amp;lt;web_tier_tag&amp;gt;:&amp;lt;web_tier_tag_value&amp;gt; with your own tag and value for the Web tier)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Note the EBS volume ids, Instance ids, Availability Zones, and check if the Encrypted element is True or False&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 describe-volumes --filters Name=tag:&amp;lt;web_tier_tag&amp;gt;,Values=&amp;lt;web_tier_tag_value&amp;gt; --query 'Volumes[*].{VolumeId:VolumeId, Encrypted:Encrypted, AvailabilityZone:AvailabilityZone, InstanceId:Attachments[*].InstanceId}' --output table&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.432">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.1" name="Tag all resources" issueId="" issueLink="" platform="" cost="0" risk="23" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
 &lt;b&gt;Description&lt;/b&gt;:
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Tags enable customers to categorize AWS resources in different ways, for example, by purpose, owner, or environment.
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Each tag consists of a key and an optional value, both of which customer's define.
  You should define a set of tags for the following items to help you track each instance's owner and operating environment, cost center, and other items.
&lt;/div&gt;
&lt;div&gt;
 &lt;ol&gt;
  &lt;li&gt;Amazon EC2 instances&lt;/li&gt;
  &lt;li&gt;ELB&lt;/li&gt;
  &lt;li&gt;EBS Volumes&lt;/li&gt;
  &lt;li&gt;S3 Buckets&lt;/li&gt;
 &lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  A resource may have up to 10 tags associated with key &amp;amp; value such as:
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Key=tier, Value=app&lt;/li&gt;
  &lt;li&gt;Key=environment, Value=production&lt;/li&gt;
  &lt;li&gt;Key=costcenter, Value=sales&lt;/li&gt;
 &lt;/ul&gt;
 &lt;div&gt;
  &lt;b&gt;Remediation:&lt;/b&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;&lt;br&gt;&lt;/b&gt;
  Tag all your 3 tier Web Application resources based on their tier membership (Web, App, Data), and your organizational requirements.
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Cloud Compliance" url="https://d0.awsstatic.com/whitepapers/compliance/AWS_Anitian_Wookbook_PCI_Cloud_Compliance.pdf"/>
            <reference name="Resource groups and tagging" url="https://aws.amazon.com/blogs/aws/resource-groups-and-tagging/"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify tags are being used.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:14.432">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="VOLUMES-NOT-ENCRYPTED">
                  <countermeasures>
                    <countermeasure ref="aws-tier-1.5-1.6" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-1.5-1.6" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="OWASP-A10-2017" issueId="" issueLink="" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" mitigation="34"/>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" mitigation="33"/>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING2" mitigation="34"/>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING3" mitigation="33"/>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING5" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-NET-01">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.1" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-AUTO-SCALING4" mitigation="50"/>
                <countermeasure ref="aws-tier-5.1" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="f66ff311-f7e1-46be-be89-e69ada0bd719" diagramComponentId="8897d03b-6d11-4070-878f-98968025048f" ref="028a9259-ab7e-477e-a087-c10ebb03998e" name="AWS ELB (Elastic Load Balancer)" desc="" library="Hydras-AWS-Foundation" parentComponentRef="010dfedc-7ef1-48b5-bed8-3c139b9cd3c1" componentDefinitionRef="load-balancer" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-295" name="Improper Certificate Validation" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not validate, or incorrectly validates, a certificate.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.155">
              <output/>
            </source>
            <references>
              <reference name="CWE-295: Improper Certificate Validation" url="https://cwe.mitre.org/data/definitions/295.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-326" name="Inadequate Encryption Strength" state="0" impact="100" issueId="" issueLink="">
          <desc>The software stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required. A weak encryption scheme can be subjected to brute force attacks that have a reasonable chance of succeeding using current attack methods and resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.155">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.155">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.155">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.2" name="Networks for Amazon resources are not properly segmented" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.155">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Logging-3.4" name="Non-auditable actions in the resources" state="0" impact="100" issueId="" issueLink="">
          <desc>The actions in the resources are not audited and not recorded in the logs.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.153">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not use or incorrectly uses a protection
                        mechanism that provides sufficient defense against directed attacks against the
                        product.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.155">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="SYSTEM-VUL-DOS" name="System is vulnerable to a denial of service attack" state="0" impact="100" issueId="" issueLink="">
          <desc>Attackers can perform a successful denial of service on the system</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.155">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-01" name="Unauthorized connection attempts are allowed on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To avoid this, access to network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.155">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="unknown-resource-status" name="Unknown resource status" state="0" impact="100" issueId="" issueLink="">
          <desc>We do not have our resources current status and as a result lose control of some resources,
                        for example, we may believe these resources are inactive when in fact the status has changed and we are unaware.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:17.155">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="aws-tier-1.12" name="Add SSL/TLS Certificate to App Tier ELB" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>When you use HTTPS for your front-end listener, you must deploy an SSL/TLS certificate on your load balancer. The load balancer uses the certificate to terminate the connection and then decrypt requests from clients before sending them to the back-end instances. 
&lt;br&gt; 
&lt;br&gt; The SSL\TLS protocol uses an X.509 certificate (SSL\TLS server certificate) to authenticate both the client and the back-end application. An X.509 certificate is a digital form of identification issued by a trusted certificate authority (CA) and contains identification information, a validity period, a public key, a serial number, and the digital signature of the issuer. 
&lt;br&gt; 
&lt;br&gt; You can create a certificate using a Third Party Certificate Authority, AWS Certificate Manager or a self signed certificate like OpenSSL. 
&lt;br&gt; 
&lt;br&gt; Note: an SSL certificate configured on the ELB is not mandatory if you are terminating SSL connections directly on the App Tier EC2 instances, and using a TCP listener on the ELB (TCP pass-through) 
&lt;br&gt; 
&lt;br&gt; All the application traffic between the Web Tier instances and the App Tier ELB nodes should be encrypted using an SSL\TLS certificate. 
&lt;br&gt; 
&lt;b&gt;Remediation:&lt;/b&gt; 
&lt;br&gt; 
&lt;br&gt; Using the Amazon unified command line interface: 
&lt;ul&gt; 
 &lt;li&gt;Adding a HTTPS listener configured with a SSL\TLS certificate (the listener forwards traffic to the backend instances on port 80, but this can be modified by editing InstancePort=80): &lt;br&gt; 
  &lt;blockquote&gt;
    aws elb create-load-balancer-listeners --load-balancer-name &amp;lt;app_tier_elb&amp;gt; --listeners Protocol=HTTPS,LoadBalancerPort=443,InstanceProtocol=HTTP,InstancePort=80, SSLCertificateId=ssl_certificate_arn 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: ELB add/delete listeners" url="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-add-or-delete-listeners.html#add-listener-cli"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
          </references>
          <standards>
            <standard ref="1.12" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
  (Note that you should replace &amp;lt;app_tier_elb&amp;gt; with your App-tier ELB name) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Note that if the ListenerDescriptions is empty, the ELB does not have a listener configured with a SSL\TLS certificate, or a TCP listener (TCP pass-through):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-names &amp;lt;app_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName, DNSName:DNSName, Scheme:Scheme, ListenerDescriptions:ListenerDescriptions[?Listener.SSLCertificateId != null || Listener.Protocol == 'TCP']}&amp;quot; --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.931">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.9" name="Add SSL/TLS Certificate to Web Tier ELB" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  When you use HTTPS for your front-end listener, you must deploy an SSL/TLS certificate on your load balancer. The load balancer uses the certificate to terminate the connection and then decrypt requests from clients before sending them to the back-end instances. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The TLS protocol uses an X.509 certificate (SSL/TLS server certificate) to authenticate both the client and the back-end application. An X.509 certificate is a digital form of identification issued by a trusted certificate authority (CA) and contains identification information, a validity period, a public key, a serial number, and the digital signature of the issuer. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  You can create a certificate using a Third Party Certificate Authority or AWS Certificate Manager. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Note: an SSL certificate configured on the ELB is not mandatory if you are terminating SSL connections directly on the Web Tier EC2 instances, and using a TCP listener on the ELB (TCP pass-through) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  All the application traffic between the clients and the Web Tier ELB nodes should be encrypted using a SSL/TLS certificate. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Adding a HTTPS listener configured with a SSL/TLS certificate (the listener forwards traffic to the backend instances on port 80, but this can be modified by editing InstancePort=80):&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb create-load-balancer-listeners --load-balancer-name &amp;lt;web_tier_elb&amp;gt; --listeners Protocol=HTTPS,LoadBalancerPort=443,InstanceProtocol=HTTP,InstancePort=80, SSLCertificateId=ssl_certificate_arn 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: ELB add/delete listeners" url="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-add-or-delete-listeners.html#add-listener-cli"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
          </references>
          <standards>
            <standard ref="1.9" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.9" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
  (Note that you should replace &amp;lt;web_tier_elb&amp;gt; with your Web-tier ELB name) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Note that if the ListenerDescriptions element is empty, the ELB does not have a listener configured with a SSL/TLS certificate, or a TCP listener (TCP pass-through):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-names &amp;lt;web_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName, DNSName:DNSName, Scheme:Scheme, ListenerDescriptions:ListenerDescriptions[?Listener.SSLCertificateId != null ||&amp;nbsp; Listener.Protocol == 'TCP']}&amp;quot; --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.931">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.13" name="Allow connectivity to the VPC Internet Gateway (IGW) and associate the Routing Table with Web tier ELB subnet (by default route (0.0.0.0/0))" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  A route table contains a set of rules, called routes, that are used to determine where network traffic is directed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Each subnet in your VPC must be associated with a route table; the table controls the routing for the subnet. A subnet can only be associated with one route table at a time, but you can associate multiple subnets with the same route table. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  The default route (0.0.0.0/0) should be pointing to the Internet Gateway in order to provide internet connectivity for the Web tier ELB. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;For the above route tables, if the default route (0.0.0.0/0) exists but it doesn't have an IGW configured as gateway:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws ec2 replace-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidr-block 0.0.0.0/0 --gateway-id &amp;lt;vpc_igw&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;For the above route tables, if the default route (0.0.0.0/0) doesn't exist:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws ec2 create-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidr-block 0.0.0.0/0 --gateway-id &amp;lt;vpc_igw&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: EC2 replace route" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/replace-route.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Create route" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-route.html"/>
            <reference name="Describe route tables" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-route-tables.html"/>
          </references>
          <standards>
            <standard ref="6.13" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.13" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the subnets associated with the Web tier ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-name &amp;lt;web_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].Subnets&amp;quot; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the routes of the route tables associated with the above subnets, and check if the default route (0.0.0.0/0) has an IGW configured as gateway:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-route-tables --filters Name=association.subnet-id,Values=&amp;lt;web_tier_elb_subnet1&amp;gt;,&amp;lt;web_tier_elb_subnet2&amp;gt; --query &amp;quot;RouteTables[*].{RouteTableId:RouteTableId, Routes:Routes}&amp;quot; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.931">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.15" name="Associate App Tier Auto-Scaling Group to ELB" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Elastic Load Balancing automatically distributes incoming application traffic across multiple Amazon EC2 instances within a VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  It enables greater levels of fault tolerance in your applications, seamlessly providing the required amount of load balancing capacity needed to distribute application traffic across 1 or more Availability Zones within a VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Elastic Load Balancing must be integrated with Auto Scaling Groups to ensure that you have availability of compute resources in the event of a failure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Integrating Auto Scaling Groups with an Elastic Load Balancer will help provide high availability and back-end EC2 instance scaling. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Through Auto-Scaling Group configuration you can define: 
  minimum / maximum number of EC2 instances to be launched by the Auto-Scaling Group 
  Availability Zones / subnets used 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;List existing load balancers:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb describe-load-balancers --query 'LoadBalancerDescriptions[*].{ELBName:LoadBalancerName}' 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div style=""&gt;
   or 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create new load balancer:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb create-load-balancer --load-balancer-name &amp;lt;app_tier_elb&amp;gt; --scheme internal --listeners &amp;lt;listener_config&amp;gt; --subnets &amp;lt;app_tier_subnet1&amp;gt; &amp;lt;app_tier_subnet2&amp;gt; --security-groups &amp;lt;app_tier_elb_security_group&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Attached load balancer from previous steps to autoscaling group:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws autoscaling attach-load-balancers --load-balancer-names &amp;lt;app_tier_elb&amp;gt; --auto-scaling-group-name &amp;lt;app_tier_autoscaling_group_name&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: attach load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/attach-load-balancers.html"/>
            <reference name="Amazon docs: create load balancer" url="https://docs.aws.amazon.com/cli/latest/reference/elb/create-load-balancer.html"/>
            <reference name="Amazon docs: describe autoscaling load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-load-balancers.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Describe autoscaling groups" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html"/>
          </references>
          <standards>
            <standard ref="3.15" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.15" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Identify Autoscaling Group Name and associated ELB name:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-auto-scaling-groups&amp;nbsp; --query 'AutoScalingGroups[*].{ELB:LoadBalancerNames, ASGName:AutoScalingGroupName}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Identify current status of the ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-load-balancers --auto-scaling-group-name &amp;lt;app_tier_autoscaling_group_name&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.931">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.1" name="Associate each Auto-Scaling Group to ELB" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Elastic Load Balancing automatically distributes incoming application traffic across multiple Amazon EC2 instances within a VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  It enables greater levels of fault tolerance in your applications, seamlessly providing the required amount of load balancing capacity needed to distribute application traffic across 1 or more Availability Zones within a VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Elastic Load Balancing must be integrated with Auto Scaling Groups to ensure that you have availability of compute resources in the event of a failure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Integrating Auto Scaling Groups with an Elastic Load Balancer will help provide high availability and back-end EC2 instance scaling. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Through Auto-Scaling Group configuration you can define: 
  minimum / maximum number of EC2 instances to be launched by the Auto-Scaling Group 
  Availability Zones / subnets used 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;List existing load balancers:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb describe-load-balancers --query 'LoadBalancerDescriptions[*].{ELBName:LoadBalancerName}' 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;br /&gt; 
 &lt;/div&gt; 
 &lt;div style=""&gt;
   or 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create new load balancer:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb create-load-balancer --load-balancer-name &amp;lt;elb_name&amp;gt; --listeners &amp;lt;listener_config&amp;gt; --subnets &amp;lt;application_subnet&amp;gt; --security-groups &amp;lt;application_security_groups&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Attached load balancer from previous steps to autoscaling group:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws autoscaling attach-load-balancers --load-balancer-names &amp;lt;elb_name&amp;gt; --auto-scaling-group-name &amp;lt;autoscaling_group_name&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: attach load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/attach-load-balancers.html"/>
            <reference name="Amazon docs: create load balancer" url="https://docs.aws.amazon.com/cli/latest/reference/elb/create-load-balancer.html"/>
            <reference name="Amazon docs: describe autoscaling load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-load-balancers.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Describe autoscaling groups" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html"/>
          </references>
          <standards>
            <standard ref="3.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Identify Autoscaling Group Name and associated ELB name:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-auto-scaling-groups&amp;nbsp; --query 'AutoScalingGroups[*].{ELB:LoadBalancerNames, ASGName:AutoScalingGroupName}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Identify current status of the ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-load-balancers --auto-scaling-group-name &amp;lt;autoscaling_group_name&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.931">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.14" name="Associate Web Tier Auto-Scaling Group to ELB" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Elastic Load Balancing automatically distributes incoming application traffic across multiple Amazon EC2 instances within a VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  It enables greater levels of fault tolerance in your applications, seamlessly providing the required amount of load balancing capacity needed to distribute application traffic across 1 or more Availability Zones within a VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Elastic Load Balancing must be integrated with Auto Scaling Groups to ensure that you have availability of compute resources in the event of a failure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Integrating Auto Scaling Groups with an Elastic Load Balancer will help provide high availability and back-end EC2 instance scaling. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Through Auto-Scaling Group configuration you can define: 
  minimum / maximum number of EC2 instances to be launched by the Auto-Scaling Group 
  Availability Zones / subnets used 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;List existing load balancers:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb describe-load-balancers --query 'LoadBalancerDescriptions[*].{ELBName:LoadBalancerName}' 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   or 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create new load balancer:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb create-load-balancer --load-balancer-name &amp;lt;web_tier_elb&amp;gt; --listeners &amp;lt;listener_config&amp;gt; --subnets &amp;lt;web_tier_elb_subnet1&amp;gt; &amp;lt;web_tier_elb_subnet2&amp;gt; --security-groups &amp;lt;web_tier_elb_security_group&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Attached load balancer from previous steps to autoscaling group:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws autoscaling attach-load-balancers --load-balancer-names &amp;lt;web_tier_elb&amp;gt; --auto-scaling-group-name &amp;lt;web_tier_autoscaling_group_name&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: attach load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/attach-load-balancers.html"/>
            <reference name="Amazon docs: create load balancer" url="https://docs.aws.amazon.com/cli/latest/reference/elb/create-load-balancer.html"/>
            <reference name="Amazon docs: describe autoscaling load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-load-balancers.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Describe autoscaling groups" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html"/>
          </references>
          <standards>
            <standard ref="3.14" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.14" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Identify Autoscaling Group Name and associated ELB name:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-auto-scaling-groups&amp;nbsp; --query 'AutoScalingGroups[*].{ELB:LoadBalancerNames, ASGName:AutoScalingGroupName}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Identify current status of the ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-load-balancers --auto-scaling-group-name &amp;lt;web_tier_autoscaling_group_name&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.931">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-ELB1" name="Configure ALB to redirect all HTTP requests to HTTPS" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Before you start to use your Application Load Balancer, you must add one or more listeners. A listener is a process that uses the configured protocol and port to check for connection requests. Listeners support both the HTTP and HTTPS protocols. You can use an HTTPS listener to offload the work of encryption and decryption to your load balancer. To enforce encryption in transit, you should use redirect actions with Application Load Balancers to redirect client HTTP requests to an HTTPS request on port 443.&lt;/p&gt;&lt;p&gt;If you use Application Load Balancers with an HTTP listener, ensure that the listener is redirected to HTTPS for any nonconsole administrative access. Allowing unencrypted authentication over HTTP for administrators of the cardholder data environment might violate the requirement to encrypt all nonconsole administrative access using strong cryptography.&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;To remediate this issue, you redirect HTTP request to HTTPS.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;To redirect HTTP requests to HTTPS on an Application Load Balancer&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.&lt;/li&gt;&lt;li&gt;In the navigation pane, under &lt;strong&gt;Load Balancing&lt;/strong&gt;, choose &lt;strong&gt;Load balancers&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Choose an Application Load Balancer.&lt;/li&gt;&lt;li&gt;Choose &lt;strong&gt;Listeners&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Select the check box for an HTTP listener (port 80 TCP) and then choose &lt;strong&gt;Edit&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;If there is an existing rule, you must delete it. Otherwise, choose &lt;strong&gt;Add action&lt;/strong&gt; and then choose &lt;strong&gt;Redirect to...&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Choose &lt;strong&gt;HTTPS&lt;/strong&gt; and then enter &lt;strong&gt;443&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Choose the check mark in a circle symbol and then choose &lt;strong&gt;Update&lt;/strong&gt;.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS PCI-DSS Controls" url="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-pci-controls.html"/>
          </references>
          <standards>
            <standard ref="2.2.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="4.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.927">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.10" name="Configure Health Check for App Tier ELB" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  By default, an Auto-Scaling Group periodically uses the results of the EC2 instance status checks to determine the health status of each instance. If an instance fails the EC2 instance status checks, Auto-Scaling marks the instance as unhealthy and replaces the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  However, if you have attached one or more Elastic Load Balancing (ELB) load balancers to your Auto-Scaling Group and the instance fails the ELB health checks, Auto-Scaling does not replace the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Amazon ELB will periodically sends pings, attempts connections, or sends requests to test the EC2 instances, these tests are called health checks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The status of the instances that are healthy at the time of the health check is InService. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The status of any instances that are unhealthy at the time of the health check is OutOfService. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The load balancer performs health checks on all registered instances, whether the instance is in a healthy state or an unhealthy state. The load balancer routes requests only to the healthy instances. When the load balancer determines that an instance is unhealthy, it stops routing requests to that instance. The load balancer resumes routing requests to the instance when it has been restored to a healthy state 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Ensures availability of back-end EC2 instances associated with an Amazon ELB through application layer health check (ex: http) instead of TCP health checks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified CLI: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a JSON file containing the attributes you want to modify and save it locally as /tmp/ELBhealthcheck.json:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     { 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; "Target": "&amp;lt;string&amp;gt;", 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; "Interval": &amp;lt;integer&amp;gt;, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; "Timeout": &amp;lt;integer&amp;gt;, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; "UnhealthyThreshold": &amp;lt;integer&amp;gt;, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; "HealthyThreshold": &amp;lt;integer&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     } 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Modify App tier ELB to include appropriate health check:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb configure-health-check --load-balancer-name &amp;lt;app_tier_elb&amp;gt; --health-check file:///tmp/ELBhealthcheck.json 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: ELB healthchecks" url="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-healthchecks.html"/>
            <reference name="Amazon docs: configure health check" url="https://docs.aws.amazon.com/cli/latest/reference/elb/configure-health-check.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Describe autoscaling groups" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html"/>
          </references>
          <standards>
            <standard ref="3.10" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.10" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Identify if health check is in place on the App tier ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-names &amp;lt;app_tier_elb&amp;gt; --query 'LoadBalancerDescriptions[*].{ELBName:LoadBalancerName,HealthCheck:HealthCheck}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.931">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.9" name="Configure Health Check for Web Tier ELB" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  By default, an Auto-Scaling Group periodically uses the results of the EC2 instance status checks to determine the health status of each instance. If an instance fails the EC2 instance status checks, Auto-Scaling marks the instance as unhealthy and replaces the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  However, if you have attached one or more Elastic Load Balancing (ELB) load balancers to your Auto-Scaling Group and the instance fails the ELB health checks, Auto-Scaling does not replace the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Amazon ELB will periodically sends pings, attempt connections, or sends requests to test the EC2 instances, these tests are called health checks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The status of the instances that are healthy at the time of the health check is InService. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The status of any instances that are unhealthy at the time of the health check is OutOfService. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The load balancer performs health checks on all registered instances, whether the instance is in a healthy state or an unhealthy state. The load balancer routes requests only to the healthy instances. When the load balancer determines that an instance is unhealthy, it stops routing requests to that instance. The load balancer resumes routing requests to the instance when it has been restored to a healthy state 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Ensure availability of back-end EC2 instances associated with an Amazon ELB through application layer health check (ex: http) instead of TCP health checks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified CLI: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a JSON file containing the attributes you want to modify and save it locally as /tmp/ELBhealthcheck.json:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     { 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; "Target": "&amp;lt;string&amp;gt;", 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; "Interval": &amp;lt;integer&amp;gt;, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; "Timeout": &amp;lt;integer&amp;gt;, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; "UnhealthyThreshold": &amp;lt;integer&amp;gt;, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; "HealthyThreshold": &amp;lt;integer&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     } 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Modify Web tier ELB to include appropriate health check:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb configure-health-check --load-balancer-name &amp;lt;web_tier_elb&amp;gt; --health-check file:///tmp/ELBhealthcheck.json 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: configure health check" url="https://docs.aws.amazon.com/cli/latest/reference/elb/configure-health-check.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Describe autoscaling groups" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html"/>
          </references>
          <standards>
            <standard ref="3.9" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.9" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Identify if health check is in place on the Web tier ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-names &amp;lt;web_tier_elb&amp;gt; --query 'LoadBalancerDescriptions[*].{ELBName:LoadBalancerName,HealthCheck:HealthCheck}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.931">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.13" name="Configure the latest SSL Security Policies for App Tier ELB" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Elastic Load Balancing uses an Secure Socket Layer (SSL) negotiation configuration, known as a security policy, to negotiate SSL/TLS connections between a client and the load balancer. A security policy is a combination of SSL/TLS protocols, ciphers, and the Server Order Preference option. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Elastic Load Balancing supports configuring your load balancer to use either predefined or custom security policies. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Secure Sockets Layer (SSL) and Transport Layer Security (TLS) are cryptographic protocols that are used to encrypt confidential data over insecure networks such as the Internet. The TLS protocol is a newer version of the SSL protocol. In the Elastic Load Balancing documentation, we refer to both SSL and TLS protocols as the SSL protocol. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Note: an SSL certificate configured on the ELB and an SSL Security Policy is not mandatory if you are terminating SSL connections directly on the App Tier EC2 instances, and using a TCP listener on the ELB (TCP pass-through) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Making sure the latest ELB SSL Security Policy is used will ensure the SSL/TLS connection will be negotiated using only the appropriate cryptographic protocols deemed safe with no proven vulnerabilities. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div style=""&gt; 
 &lt;ul&gt; 
  &lt;li&gt;(Note that you should replace &amp;lt;app\_tier\_elb&amp;gt; with your App-tier ELB name, and &amp;lt;latest\_ssl\_policy&amp;gt; with the proper policy name)&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb set-load-balancer-policies-of-listener --load-balancer-name &amp;lt;app_tier_elb&amp;gt; --load-balancer-port 443 --policy-names&amp;nbsp; &amp;lt;latest_ssl_policy&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: ELB listener policy" url="https://aws.amazon.com/premiumsupport/knowledge-center/elb-listener-policy-cli/"/>
            <reference name="Amazon docs: ELB security policy options" url="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-security-policy-options.html"/>
            <reference name="Amazon docs: describe load balancer policies" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancer-policies.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Amazon docs: set load balancer policies of listener" url="https://docs.aws.amazon.com/cli/latest/reference/elb/set-load-balancer-policies-of-listener.html"/>
          </references>
          <standards>
            <standard ref="1.13" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
  (Note that you should replace &amp;lt;app_tier_elb&amp;gt; with your App-tier ELB name) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Find all the SSL security policies associated with your load balancer listener:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancer-policies --load-balancer-name &amp;lt;app_tier_elb&amp;gt; --query 'PolicyDescriptions[?PolicyTypeName==`SSLNegotiationPolicyType`].{PolicyName:PolicyName,ReferenceSecurityPolicy:PolicyAttributeDescriptions[0].AttributeValue}' --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Find which of the above policies is currently active, and check on AWS documentation if it is the latest (note that for the TCP listeners the PolicyNames element will be empty, but the TCP listener is still compliant when using SSL certificates on the back-end EC2 instances):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-name &amp;lt;app_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].{CompliantListeners:ListenerDescriptions[?Listener.SSLCertificateId != null || Listener.Protocol == 'TCP']}&amp;quot; --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.931">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.10" name="Configure the latest SSL Security Policies for Web Tier ELB" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Elastic Load Balancing uses an Secure Socket Layer (SSL) negotiation configuration, known as a security policy, to negotiate SSL/TLS connections between a client and the load balancer. A security policy is a combination of SSL/TLS protocols, ciphers, and the Server Order Preference option. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Elastic Load Balancing supports configuring your load balancer to use either predefined or custom security policies. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Secure Sockets Layer (SSL) and Transport Layer Security (TLS) are cryptographic protocols that are used to encrypt confidential data over insecure networks such as the Internet. The TLS protocol is a newer version of the SSL protocol. In the Elastic Load Balancing documentation, we refer to both SSL and TLS protocols as the SSL protocol. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Note: an SSL certificate configured on the ELB and an SSL Security Policy is not mandatory if you are terminating SSL connections directly on the Web Tier EC2 instances, and using a TCP listener on the ELB (TCP pass-through) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Making sure the latest ELB SSL Security Policy is used will ensure the SSL/TLS connection will be negotiated using only the appropriate cryptographic protocols deemed safe with no proven vulnerabilities. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt;
   (Note that you should replace &amp;lt;web\_tier\_elb&amp;gt; with your Web-tier ELB name, and _&amp;lt;latest\_ssl\_policy&amp;gt;_ with the proper policy name) 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;div&gt; 
  &lt;div style=""&gt;
    aws elb set-load-balancer-policies-of-listener --load-balancer-name &amp;lt;web_tier_elb&amp;gt; --load-balancer-port 443 --policy-names&amp;nbsp; &amp;lt;latest_ssl_policy&amp;gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: ELB listener policy" url="https://aws.amazon.com/premiumsupport/knowledge-center/elb-listener-policy-cli/"/>
            <reference name="Amazon docs: ELB security policy options" url="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-security-policy-options.html"/>
            <reference name="Amazon docs: describe load balancer policies" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancer-policies.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Amazon docs: set load balancer policies of listener" url="https://docs.aws.amazon.com/cli/latest/reference/elb/set-load-balancer-policies-of-listener.html"/>
          </references>
          <standards>
            <standard ref="1.10" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.10" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
  (Note that you should replace &amp;lt;web_tier_elb&amp;gt; with your Web-tier ELB name) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Find all the SSL security policies associated with your load balancer listener:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancer-policies --load-balancer-name &amp;lt;web_tier_elb&amp;gt; --query 'PolicyDescriptions[?PolicyTypeName==`SSLNegotiationPolicyType`].{PolicyName:PolicyName,ReferenceSecurityPolicy:PolicyAttributeDescriptions[0].AttributeValue}' --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Find which of the above policies is currently active, and check on AWS documentation if it is the latest (note that for the TCP listeners the PolicyNames element will be empty, but the TCP listener is still compliant when using SSL certificates on the back-end EC2 instances):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-name &amp;lt;web_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].{CompliantListeners:ListenerDescriptions[?Listener.SSLCertificateId != null || Listener.Protocol == 'TCP']}&amp;quot; --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.930">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.5" name="Create subnets for the Web Tier ELB" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        You can create a VPC that spans multiple Availability Zones. After creating a VPC, you can add
                        one or more subnets in each Availability Zone. Each subnet must reside entirely within one
                        Availability Zone and cannot span zones. Availability Zones are distinct locations that are
                        engineered to be isolated from failures in other Availability Zones. By launching instances in
                        separate Availability Zones, you can protect your applications from the failure of a single
                        location. AWS assigns a unique ID to each subnet.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        When you create a subnet, you specify the CIDR block for the subnet. The CIDR block of a subnet
                        shouldn't be the same as the CIDR block for the VPC (for a single subnet in the VPC). The
                        allowed block size is between a /28 netmask and /16 netmask. If you create more than one subnet
                        in a VPC, the CIDR blocks of the subnets must not overlap.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Some AWS regions have more than 2 availability zones and it is recommended to use more than 2
                        where possible.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        At least 2 subnets in 2 different availability zones (AZ) should be created in order to have
                        fault tolerance and high availability from the perspective of resource deployment.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        Using the Amazon unified command line interface:
                        &lt;/div&gt;
                        &lt;div style=""&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create subnets for Web tier ELB, and note the subnet id:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        aws ec2 create-subnet --vpc-id application_vpc
                        --cidr-block desired_cidr
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Tag the above subnets with the Web tier ELB tags:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        aws ec2 create-tags --resources web_tier_elb_subnet1
                        web_tier_elb_subnet2 --tags Key=public_tier_tag,Value=public_tier_tag_value
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: create subnet" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-subnet.html"/>
            <reference name="Amazon docs: create tags" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-tags.html"/>
            <reference name="Describe subnets" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-subnets.html"/>
          </references>
          <standards>
            <standard ref="6.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the subnets associated with the Web tier ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-name &amp;lt;web_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].Subnets&amp;quot; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  OR 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the subnets created for the Web tier ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-subnets --filters Name=tag:public_tier_tag,Values=public_tier_tag_value --query &amp;quot;Subnets[*].SubnetId&amp;quot; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.932">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.26" name="Create the App tier ELB as Internal" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  An internal load balancer routes traffic to your EC2 instances in private subnets using private IP addresses. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Create an internal load balancer and register the database servers with it. The web servers receive requests from the Internet-facing load balancer and send requests for the database servers to the internal load balancer. The database servers receive requests from the internal load balancer. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  When an internal load balancer is created, it receives a public DNS name with the following form: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;div&gt;
   internal-name-123456789.region.elb.amazonaws.com 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br /&gt; 
 &lt;/div&gt; 
&lt;/blockquote&gt; 
&lt;div&gt;
  The DNS servers resolve the DNS name of your load balancer to the private IP addresses of the load balancer nodes for your internal load balancer. Each load balancer node is connected to the private IP addresses of the back-end instances that are in its Availability Zone using elastic network interfaces. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Creating the App tier ELB as internal will prevent access to the app tier from the Internet and will allow access from the Web tier instances. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create new internal ELB for your App tier:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb create-load-balancer --load-balancer-name app_tier_elb --scheme internal --listeners listener_config --subnets app_tier_subnet1 app_tier_subnet2 --security-groups app_tier_elb_security_group 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Register App tier instances with the new App tier ELB:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb register-instances-with-load-balancer --load-balancer-name app_tier_elb --instances &amp;lt;app_tier_instance1&amp;gt; &amp;lt;app_tier_instance2&amp;gt; &amp;lt;app_tier_instance3&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: ELB internal load balancers" url="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-internal-load-balancers.html"/>
            <reference name="Amazon docs: create load balancer" url="https://docs.aws.amazon.com/cli/latest/reference/elb/create-load-balancer.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Amazon docs: register instances with load balancer" url="https://docs.aws.amazon.com/cli/latest/reference/elb/register-instances-with-load-balancer.html"/>
          </references>
          <standards>
            <standard ref="6.26" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.26" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check the Scheme of your App tier ELB, and make sure it is &amp;quot;internal&amp;quot;:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-name &amp;lt;app_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName, Scheme:Scheme}&amp;quot; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.932">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.21" name="Create the App tier ELB Security Group to only accept HTTP/HTTPS" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        A security group acts as a virtual firewall for your instance to control inbound and outbound
                        traffic. When you launch an instance in the AWS Virtual Private Cloud (VPC), you can assign the
                        instance to up to five security groups. Security groups act at the instance level, not the
                        subnet level. Therefore, each instance in a subnet in your VPC could be assigned to a different
                        set of security groups. If you don't specify a particular group at launch time, the instance is
                        automatically assigned to the default security group for the VPC.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        For each security group, you add rules that control the inbound traffic to instances, and a
                        separate set of rules that control the outbound traffic.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        The SG associated with the App tier ELB should allow connectivity from the security group
                        associated with Web tier instances only for the HTTP (TCP 80) and HTTPS (TCP 443) ports.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        The defaults for HTTP and HTTPS are used as an example, any other ports would apply depending on
                        the application design.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        Using the Amazon unified command line interface:
                        &lt;/div&gt;
                        &lt;div style=""&gt;
                        &lt;ul&gt;
                        &lt;li&gt;First remove all the ingress rules for the security group associated with the App tier
                        ELB:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        aws ec2 describe-security-groups --group-id app_tier_elb_security_group
                        --query &amp;quot;SecurityGroups[0].IpPermissions&amp;quot; &amp;gt; /tmp/IpPermissions.json
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div style=""&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        aws ec2 revoke-security-group-ingress --group-id app_tier_elb_security_group
                        --ip-permissions file:///tmp/IpPermissions.json
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &lt;ul&gt;
                        &lt;li&gt;create locally the below json file containing ingress rules for HTTP (TCP 80) and
                        HTTPS (TCP 443) ports only from and name it IpPermissions.json:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        [
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; {
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;PrefixListIds&amp;quot;: [],
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;FromPort&amp;quot;: 80,
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;IpRanges&amp;quot;: [],
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;ToPort&amp;quot;: 80,
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;IpProtocol&amp;quot;: &amp;quot;tcp&amp;quot;,
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;UserIdGroupPairs&amp;quot;: [
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;UserId&amp;quot;:
                        &amp;quot;&amp;lt;&amp;lt;em&amp;gt;aws_account_number&amp;gt;&amp;lt;/em&amp;gt;&amp;quot;,
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;GroupId&amp;quot;:
                        &amp;quot;&amp;lt;span style=&amp;quot;font-style: italic;&amp;quot;&amp;gt;&amp;lt;&amp;lt;/span&amp;gt;&amp;lt;span
                        style=&amp;quot;font-style: italic;&amp;quot;&amp;gt;web_tier_security_group&amp;quot;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ]
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; },
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; {
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;PrefixListIds&amp;quot;: [],
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;FromPort&amp;quot;: 443,
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;IpRanges&amp;quot;: [],
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;ToPort&amp;quot;: 443,
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;IpProtocol&amp;quot;: &amp;quot;tcp&amp;quot;,
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;UserIdGroupPairs&amp;quot;: [
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;UserId&amp;quot;:
                        &amp;quot;&amp;lt;&amp;lt;em&amp;gt;aws_account_number&amp;gt;&amp;lt;/em&amp;gt;&amp;quot;,
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;GroupId&amp;quot;:
                        &amp;quot;&amp;lt;span style=&amp;quot;font-style: italic;&amp;quot;&amp;gt;&amp;lt;&amp;lt;/span&amp;gt;&amp;lt;span
                        style=&amp;quot;font-style: italic;&amp;quot;&amp;gt;web_tier_security_group&amp;lt;/span&amp;gt;&amp;gt;&amp;quot;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ]
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; }
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        ]
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Add to the security group associated with the App tier ELB the above ingress rules:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        aws ec2 authorize-security-group-ingress --group-id app_tier_elb_security_group&amp;nbsp;
                        --ip-permissions file:///PathTo/IpPermissions.json
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: authorize security group ingress" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/authorize-security-group-ingress.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Amazon docs: describe security groups" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-security-groups.html"/>
            <reference name="Revoke security group ingress" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/revoke-security-group-ingress.html"/>
          </references>
          <standards>
            <standard ref="6.21" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.21" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the security group associated with the App tier ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-name &amp;lt;app_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].{DNSName:DNSName, AppTierELBSecurityGroups:SecurityGroups, SourceSecurityGroup:SourceSecurityGroup}&amp;quot; --output table&amp;nbsp; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;br /&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt;
  note the &amp;quot;AppTierELBSecurityGroups&amp;quot; from the output 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the ingress rules for the above security group, and make sure that only HTTP (TCP 80) and HTTPS (TCP 443) traffic is allowed from Web tier Security Group:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-security-groups --group-ids&amp;nbsp; &amp;lt;app_tier_elb_security_group&amp;gt; --query &amp;quot;SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions}&amp;quot; --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.932">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.22" name="Create the App tier Security Group to allow inbound connections from App tier ELB Security Group for explicit ports" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        A security group acts as a virtual firewall for your instance to control inbound and outbound
                        traffic. When you launch an instance in the AWS Virtual Private Cloud (VPC), you can assign the
                        instance to up to five security groups. Security groups act at the instance level, not the
                        subnet level. Therefore, each instance in a subnet in your VPC could be assigned to a different
                        set of security groups. If you don't specify a particular group at launch time, the instance is
                        automatically assigned to the default security group for the VPC.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        For each security group, you add rules that control the inbound traffic to instances, and a
                        separate set of rules that control the outbound traffic.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        This is required for both the configured port and protocol for the listener on the back-end
                        instance and the port and protocol used for the health check.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        This protects the App-server tier from unauthorized access, it is recommended to add inbound
                        security group rules that allow traffic for the specific application protocol and ports by
                        referencing as source the security group associated with the App tier ELB.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        Using the Amazon unified command line interface:
                        &lt;/div&gt;
                        &lt;div style=""&gt;
                        &lt;ul&gt;
                        &lt;li&gt;First remove all the ingress rules for the App tier security group (use the &amp;quot;AppTierSecurityGroup&amp;quot;
                        element from Audit procedure):&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        aws ec2 describe-security-groups --group-id app_tier_security_group
                        --query &amp;quot;SecurityGroups[0].IpPermissions&amp;quot; &amp;gt; /tmp/IpPermissions.json
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div style=""&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        aws ec2 revoke-security-group-ingress --group-id app_tier_security_group
                        --ip-permissions file:///tmp/IpPermissions.json
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Add an ingress rule for a specific port, using --source-group option to specify the
                        App tier ELB security group as the source of the connections:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        aws ec2 authorize-security-group-ingress --group-id app_tier_security_group
                        --protocol tcp --port specific_port
                        --source-group app_tier_elb_security_group
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: authorize security group ingress" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/authorize-security-group-ingress.html"/>
            <reference name="Amazon docs: describe launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-launch-configurations.html"/>
            <reference name="Amazon docs: describe security groups" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-security-groups.html"/>
            <reference name="Revoke security group ingress" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/revoke-security-group-ingress.html"/>
          </references>
          <standards>
            <standard ref="6.22" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.22" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;List the ingress rules for the above security group, and make sure that allows
                            connections only from App tier ELB security group on specific ports:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws ec2 describe-security-groups --filters Name=tag:app_tier_tag,Values=app_tier_tag_value
                            --query &amp;quot;SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions,
                            AppTierSecurityGroup:GroupId}&amp;quot; --output table
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.932">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.19" name="Create the Web tier Security Group to allow inbound connections from Web tier ELB Security Group for explicit ports" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A security group acts as a virtual firewall for your instance to control inbound and 
  outbound traffic. When you launch an instance in the AWS Virtual Private Cloud (VPC), you can assign the instance to up to five security groups. Security groups act at the instance level, not the subnet level. Therefore, each instance in a subnet in your VPC could be assigned to a different set of security groups. If you don't specify a particular group at launch time, the instance is automatically assigned to the default security group for the VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  For each security group, you add rules that control the inbound traffic to instances, and a separate set of rules that control the outbound traffic. This is required for both the configured port and protocol for the listener on the back-end instance and the port and protocol used for the health check. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;First remove all the ingress rules for the Web tier security group (use the "WebTierSecurityGroup" element from Audit procedure):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-security-groups --group-id &amp;lt;web_tier_security_group&amp;gt; --query "SecurityGroups[0].IpPermissions" &amp;gt; /tmp/IpPermissions.json 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 revoke-security-group-ingress --group-id &amp;lt;web_tier_security_group&amp;gt; --ippermissions file:///tmp/IpPermissions.json 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Add an ingress rule for a specific port, using --source-group option to specify the Web tier ELB security group as the source of the connections:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 authorize-security-group-ingress --group-id &amp;lt;web_tier_security_group&amp;gt; -- protocol tcp --port &amp;lt;specific_port&amp;gt; --source-group &amp;lt;web_tier_elb_security_group&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: authorize security group ingress" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/authorize-security-group-ingress.html"/>
            <reference name="Amazon docs: describe launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-launch-configurations.html"/>
            <reference name="Amazon docs: describe security groups" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-security-groups.html"/>
            <reference name="Revoke security group ingress" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/revoke-security-group-ingress.html"/>
          </references>
          <standards>
            <standard ref="6.19" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.19" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the ingress rules for the Web tier security group, and make sure that allows connections only from Web tier ELB security group on specific ports:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-security-groups --filters Name=tag:&amp;lt;web_tier_tag&amp;gt;,Values=&amp;lt;web_tier_tag_value&amp;gt; --query "SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions, WebTierSecurityGroup:GroupId}" --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.932">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-SRA-9" name="Deploy AWS WAF policies to protect the ALB" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;For additional layers of defense, you can deploy AWS WAF policies to protect the Application Load Balancer. Having edge policies, application policies, and even private or internal policy enforcement layers adds to the visibility of communication requests and provides unified policy enforcement. For more information, see the blog post Deploying defense in depth using AWS Managed Rules for AWS WAF.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS Security Reference Architecture" url="https://docs.aws.amazon.com/prescriptive-guidance/latest/security-reference-architecture/welcome.html"/>
            <reference name="Deploying defense in depth using AWS Managed Rules for AWS WAF" url="https://aws.amazon.com/blogs/security/deploying-defense-in-depth-using-aws-managed-rules-for-aws-waf-part-2/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that AWS WAF is blocking potentially dangerous requests.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.930">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.18" name="Do not use Web tier ELB Security Group in the Auto Scaling launch configuration of any other tier (Web, App)" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  When you use the AWS Management Console to create a load balancer in a VPC, you can choose an existing security group for the VPC or create a new security group for the VPC. If you choose an existing security group, it must allow traffic in both directions to the listener and health check ports for the load balancer. If you choose to create a security group, the console automatically adds rules to allow all traffic on these ports. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Be sure to review the security group rules to ensure that they allow traffic on the listener and health check ports for the new load balancer. When you delete your load balancer, this security group is not deleted automatically. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  If you add a listener to an existing load balancer, you must review your security groups to ensure they allow traffic on the new listener port in both directions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  The web-tier ELB is the only one that is public facing and should have rules to allow inbound traffic to the application ports (ex: HTTP and HTTPS) from any IP source (0.0.0.0/0). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  The outbound security group rules for the web-tier ELB should be restricted to only the backend web-server instances for the appropriate application ports. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Associating the web-tier ELB security group to any other instances that shouldn't be publicly accessible exposes them to unauthorized access. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create new launch configuration using the correct security groups for Web and/or App tier:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws autoscaling create-launch-configuration --launch-configuration-name &amp;lt;web_tier_launch_config&amp;gt; --image-id &amp;lt;web_tier_ami&amp;gt; --key-name &amp;lt;your_key_pair&amp;gt; --security-groups &amp;lt;web_tier_security_group&amp;gt;/&amp;lt;app_tier_security_group --instance-type &amp;lt;desired_instance_type&amp;gt; --iam-instance-profile &amp;lt;web_tier_instance_profile&amp;gt;/&amp;lt;app_tier_instance_profile&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-launch-configurations.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Create launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/create-launch-configuration.html"/>
          </references>
          <standards>
            <standard ref="6.18" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.18" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the security group associated with the Web tier ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-name &amp;lt;web_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].{DNSName:DNSName, WebTierELBSecurityGroups:SecurityGroups, SourceSecurityGroup:SourceSecurityGroup}&amp;quot; --output table 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;br /&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt;
  note the &amp;quot;WebTierELBSecurityGroups&amp;quot; from the output 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the security groups associated with all Autoscaling launch configurations and make sure that the above Web tier ELB security group is not present:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-launch-configurations --query &amp;quot;LaunchConfigurations[*].{SecurityGroups:SecurityGroups, LaunchConfigurationName:LaunchConfigurationName}&amp;quot; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.932">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.2" name="Enable the ELB logging" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Elastic Load Balancing automatically distributes incoming application traffic across multiple Amazon EC2 instances in the a VPC. It enables you to achieve greater levels of fault tolerance in your applications, seamlessly providing the required amount of load balancing capacity needed to distribute application traffic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  AWS Elastic Load Balancers (ELBs) can record all incoming requests sent to the load balancer and store within logs on S3. This allows for diagnosing application failures and analyzing web traffic and security analysis of incoming traffic 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified CLI: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a JSON file containing the attributes you want to modify and save it locally as /tmp/ElbLogs.json:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     { 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;quot;AccessLog&amp;quot;: { 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;quot;Enabled&amp;quot;: true, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;quot;S3BucketName&amp;quot;: &amp;quot;string&amp;quot;, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;quot;EmitInterval&amp;quot;: integer, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;quot;S3BucketPrefix&amp;quot;: &amp;quot;string&amp;quot; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; } 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     } 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Update the Load Balancer attributes:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb modify-load-balancer-attributes --load-balancer-name &amp;lt;elb_name&amp;gt; --load-balancer-attributes file:///tmp/ElbLogs.json 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe load balancer attributes" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancer-attributes.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Amazon docs: elb describe tags" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-tags.html"/>
            <reference name="Amazon docs: enable access logs" url="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/enable-access-logs.html"/>
            <reference name="Amazon docs: modify load balancer attributes" url="https://docs.aws.amazon.com/cli/latest/reference/elb/modify-load-balancer-attributes.html"/>
          </references>
          <standards>
            <standard ref="5.2" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.2" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Via Amazon unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List all ELB's:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --query 'LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Confirm correct ELB is selected by review ELB tags:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-tags --load-balancer-names &amp;lt;elb_name&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Review selected ELB attributes and ensure Access Log is enabled:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancer-attributes --load-balancer-name &amp;lt;elb_name&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.931">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.15" name="Implement mechanism to check that Public Web Tier SSL\TLS certificates are &gt;30 days from expiration" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;Public SSL\TLS certificates that are used for AWS resources such as the ELB or CloudFront should always be renewed prior to expiration both as a security best practice and to ensure the reputation of the web application is not impacted by an expired certificate. 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation&lt;/b&gt;: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Request a certificate renewal from your CA, and upload the new certificate in IAM:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws iam upload-server-certificate --server-certificate-name &amp;lt;ssl_certificate_name&amp;gt; --certificate-body file://public_key_cert_file.pem --private-key file://my_private_key.pem --certificate-chain file://my_certificate_chain_file.pem 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;For Amazon Certificate Manager users the renewal is managed by ACM service&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Describe certificate" url="https://docs.aws.amazon.com/cli/latest/reference/acm/describe-certificate.html"/>
            <reference name="Id credentials server certs" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html"/>
            <reference name="Id credentials server certs manage" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs_manage.html"/>
            <reference name="List certificates" url="https://docs.aws.amazon.com/cli/latest/reference/acm/list-certificates.html"/>
            <reference name="List server certificates" url="https://docs.aws.amazon.com/cli/latest/reference/iam/list-server-certificates.html"/>
            <reference name="Upload server certs" url="https://docs.aws.amazon.com/cli/latest/reference/iam/upload-server-certificate.html"/>
          </references>
          <standards>
            <standard ref="1.15" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List all SSL\TLS certificates stored in IAM and check the Expiration field&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws iam list-server-certificates 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  For Amazon Certificate Manager users: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List ACM certificates and note the CertificateArnvalue of the certificates used by the app:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws acm list-certificates 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Get the details of the desired certificate and check the ExpirationDatevalue (the certificate expiration time as an Epoch timestamp):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws acm describe-certificate --certificate-arn &amp;lt;ssl_certificate_arn&amp;gt; --query "Certificate.{ExpirationDate:NotAfter, Status:Status, SubjectAlternativeNames:SubjectAlternativeNames, DomainName:DomainName}"&amp;nbsp; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.931">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-ELB-02" name="Select the Server Order Preference option" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Within Elastic Load Balancing ensure the use of newer and stronger cipher suites when
                        establishing a new connection supporting the Server Order Preference option. When this option is
                        selected, the load balancer selects the first cipher in its list that is in the client's list of
                        ciphers.
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;b&gt; &lt;b&gt;Remediation:&lt;/b&gt; &lt;/b&gt;
                        &lt;br /&gt;To enable Server Order Preference:
                        &lt;br /&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Open the Amazon EC2 console.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Under LOAD BALANCING, choose Load Balancers.&lt;br /&gt;&lt;/li&gt;
                        &lt;li&gt;Select your Load Balancer.&lt;br /&gt;&lt;/li&gt;
                        &lt;li&gt;On the Listeners tab, for Cipher, choose Change.&lt;br /&gt;&lt;/li&gt;
                        &lt;li&gt;On the Select a Cipher page, select Custom Security Policy.&lt;br /&gt;&lt;/li&gt;
                        &lt;li&gt;For SSL Options, select Server Order Preference.&lt;br /&gt;&lt;/li&gt;
                        &lt;li&gt;Click Save. &lt;/li&gt;
                        &lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
                            &lt;li&gt;Open the Amazon EC2 console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Under LOAD BALANCING, choose Load Balancers.&lt;br /&gt;&lt;/li&gt;
                            &lt;li&gt;Select your Load Balancer.&lt;br /&gt;&lt;/li&gt;
                            &lt;li&gt;On the Listeners tab, for Cipher, choose Change.&lt;br /&gt;&lt;/li&gt;
                            &lt;li&gt;On the Select a Cipher page, select Custom Security Policy.&lt;br /&gt;&lt;/li&gt;
                            &lt;li&gt;For SSL Options, check that the option Server Order Preference is selected. &lt;/li&gt;
                            &lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.930">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.13" name="Set a HTTPS connection from all CloudFront Distributions to the Web Tier ELB origin" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Configure the Origin Protocol Policy for the Web tier ELB origin either to require that CloudFront fetches objects from your origin by using HTTPS or to require that CloudFront uses the protocol that the viewer used to request the objects. For example, if you choose Match Viewer for the Origin Protocol Policy and the viewer uses HTTPS to request an object from CloudFront, CloudFront also uses HTTPS to forward the request to your origin. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  In order to use HTTPS, an SSL\TLS certificate must be attached. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  To ensure that objects are encrypted from edge locations to the Web-Tier ELB origin according to the data classification policy, use Match Viewer. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;For configuring "OriginProtocolPolicy"first save locally the current distribution config:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws cloudfront get-distribution-config --id application_cfn_distribution_id&amp;nbsp; --query "DistributionConfig" &amp;gt; /tmp/cf-distribution.json 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div style=""&gt;
   Edit and replace "OriginProtocolPolicy"element in /tmp/cf-distribution.json with the below section: 
 &lt;/div&gt; 
 &lt;div style=""&gt;
   "OriginProtocolPolicy": "https-only", 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Retrieve the current ETag of your CloudFront distribution:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws cloudfront get-distribution-config --id &amp;lt;application_cfn_distribution_id&amp;gt;&amp;nbsp; --query "ETag" 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Update the CloudFront distribution using the edited config and the above Etag:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws cloudfront update-distribution --id &amp;lt;application_cfn_distribution_id&amp;gt; --distribution-config file:///tmp/cf-distribution.json --if-match &amp;lt;application_cfn_distribution_etag&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Get streaming distribution config" url="https://docs.aws.amazon.com/cli/latest/reference/cloudfront/get-streaming-distribution-config.html"/>
            <reference name="List distributions" url="https://docs.aws.amazon.com/cli/latest/reference/cloudfront/list-distributions.html"/>
            <reference name="Secure Connections" url="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html"/>
            <reference name="Update distribution" url="https://docs.aws.amazon.com/cli/latest/reference/cloudfront/update-distribution.html"/>
          </references>
          <standards>
            <standard ref="3.13" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check the &amp;quot;OriginProtocolPolicy&amp;quot; used by application Cloudfront
                            distributions (it should be set as https-only):&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws cloudfront list-distributions --query &amp;quot;DistributionList.Items[*].{Id:Id,
                            OriginProtocolPolicy:Origins.Items[*].CustomOriginConfig.OriginProtocolPolicy}&amp;quot;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.931">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.1" name="Tag all resources" issueId="" issueLink="" platform="" cost="0" risk="43" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
 &lt;b&gt;Description&lt;/b&gt;:
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Tags enable customers to categorize AWS resources in different ways, for example, by purpose, owner, or environment.
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Each tag consists of a key and an optional value, both of which customer's define.
  You should define a set of tags for the following items to help you track each instance's owner and operating environment, cost center, and other items.
&lt;/div&gt;
&lt;div&gt;
 &lt;ol&gt;
  &lt;li&gt;Amazon EC2 instances&lt;/li&gt;
  &lt;li&gt;ELB&lt;/li&gt;
  &lt;li&gt;EBS Volumes&lt;/li&gt;
  &lt;li&gt;S3 Buckets&lt;/li&gt;
 &lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  A resource may have up to 10 tags associated with key &amp;amp; value such as:
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Key=tier, Value=app&lt;/li&gt;
  &lt;li&gt;Key=environment, Value=production&lt;/li&gt;
  &lt;li&gt;Key=costcenter, Value=sales&lt;/li&gt;
 &lt;/ul&gt;
 &lt;div&gt;
  &lt;b&gt;Remediation:&lt;/b&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;&lt;br&gt;&lt;/b&gt;
  Tag all your 3 tier Web Application resources based on their tier membership (Web, App, Data), and your organizational requirements.
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Cloud Compliance" url="https://d0.awsstatic.com/whitepapers/compliance/AWS_Anitian_Wookbook_PCI_Cloud_Compliance.pdf"/>
            <reference name="Resource groups and tagging" url="https://aws.amazon.com/blogs/aws/resource-groups-and-tagging/"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify tags are being used.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.931">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.17" name="Use a Web-Tier ELB Security Group to accept only HTTP/HTTPS" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  A security group acts as a virtual firewall for your instance to control inbound and outbound traffic. When you launch an instance in the AWS Virtual Private Cloud (VPC), you can assign the instance up to five security groups. Security groups act at the instance level, not the subnet level. Therefore, each instance in a subnet in your VPC could be assigned to a different set of security groups. If you don't specify a particular group at launch time, the instance is automatically assigned to the default security group for the VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  For each security group, you add rules that control the inbound traffic to instances, and a separate set of rules that control the outbound traffic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  The SG associated with the Web tier ELB should allow connectivity from any source IP (0.0.0.0/0) only for the HTTP (TCP 80) and HTTPS (TCP 443) ports. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;First remove all the ingress rules for the security group associated with the Web tier ELB:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws ec2 describe-security-groups --group-id &amp;lt;security_group_id&amp;gt; --query &amp;quot;SecurityGroups[0].IpPermissions&amp;quot; &amp;gt; /tmp/IpPermissions.json 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div style=""&gt; 
   &lt;br /&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws ec2 revoke-security-group-ingress --group-id &amp;lt;security_group_id&amp;gt; --ip-permissions file:///tmp/IpPermissions.json 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;create locally the below json file containing ingress rules for any source IP (0.0.0.0/0) only for the HTTP (TCP 80) and HTTPS (TCP 443) ports and name it IpPermissions.json:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     [ 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; { 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;PrefixListIds&amp;quot;: [], 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;FromPort&amp;quot;: 80, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;IpRanges&amp;quot;: [ 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; { 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;CidrIp&amp;quot;: &amp;quot;0.0.0.0/0&amp;quot; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ], 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;ToPort&amp;quot;: 80, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;IpProtocol&amp;quot;: &amp;quot;tcp&amp;quot;, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;UserIdGroupPairs&amp;quot;: [] 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; }, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; { 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;PrefixListIds&amp;quot;: [], 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;FromPort&amp;quot;: 443, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;IpRanges&amp;quot;: [ 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; { 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;CidrIp&amp;quot;: &amp;quot;0.0.0.0/0&amp;quot; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ], 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;ToPort&amp;quot;: 443, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;IpProtocol&amp;quot;: &amp;quot;tcp&amp;quot;, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;UserIdGroupPairs&amp;quot;: [] 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; } 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     ] 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Add to the security group associated with the Web tier ELB the above ingress rules:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws ec2 authorize-security-group-ingress --group-id &amp;lt;security_group_id&amp;gt;&amp;nbsp; --ip-permissions file:///PathTo/IpPermissions.json 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.17" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.17" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the security group associated with the Web tier ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-name &amp;lt;your_web_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].{DNSName:DNSName, SecurityGroups:SecurityGroups, SourceSecurityGroup:SourceSecurityGroup}&amp;quot; --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;div&gt; 
  &lt;br /&gt; 
 &lt;/div&gt; 
&lt;/blockquote&gt; 
&lt;div&gt;
  note the security group id from the output 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the ingress rules for the above security group, and make sure that only HTTP (TCP 80) and HTTPS (TCP 443) traffic is allowed from any source IP (0.0.0.0/0)any source IP (0.0.0.0/0):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-security-groups --group-ids&amp;nbsp; &amp;lt;security_group_id&amp;gt; --query &amp;quot;SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions}&amp;quot; --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.931">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.3" name="Use Cloudfront CDN" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Amazon CloudFront can be used to deliver either the entire website, including dynamic, 
  static, streaming, and interactive content using a global network of edge locations. 
  Requests for your content are automatically routed to the nearest edge location, so content 
  is delivered with the best possible performance. Amazon CloudFront is optimized to work 
  with other Amazon Web Services, like Amazon Simple Storage Service (Amazon S3), 
  Amazon Elastic Compute Cloud (Amazon EC2), Amazon Elastic Load Balancing, and 
  Amazon Route 53. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Amazon CloudFront gives you three options for accelerating your entire website while 
  delivering your content securely over HTTPS from all of CloudFront's edge locations. In 
  addition to delivering securely from the edge, you can also configure CloudFront to use 
  HTTPS connections for origin fetches so that your data is encrypted end-to-end from your 
  origin to your end users. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;You can either create a Cloudfront distribution only by specifying the origin domain name (ELB, S3 bucket or web server):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudfront create-distribution --origin-domain-name &amp;lt;your_original_domain_name&amp;gt; -- default-root-object index.html 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Or by creating locally a distribution config file distconfig.json with all the Cloudfront distribution parameters:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudfront create-distribution --distribution-config file://distconfig.json 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create distribution" url="https://docs.aws.amazon.com/cli/latest/reference/cloudfront/create-distribution.html"/>
            <reference name="List distributions" url="https://docs.aws.amazon.com/cli/latest/reference/cloudfront/list-distributions.html"/>
            <reference name="Working with distributions" url="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-working-with.html"/>
          </references>
          <standards>
            <standard ref="6.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the Cloudfront distributions present in the AWS account, and check in the aliases field for the presence of the domain name used by the application:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudfront list-distributions --query "DistributionList.Items[*].{Id:Id, Status:Status, DomainName:DomainName, Aliases:Aliases.Items}" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.932">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.14" name="Use HTTPS listener for App Tier ELB" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  A load balancer takes requests from clients and distributes them across the EC2 instances that are registered with the load balancer (also known as back-end instances). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A listener is a process that checks for connection requests. It is configured with a protocol and a port for front-end (client to load balancer) connections. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Note: an HTTPS listener configured on the ELB is not mandatory if you are terminating SSL connections directly on the App Tier EC2 instances, and using a TCP listener on the ELB (TCP pass-through) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using an HTTPS Elastic Load Balancer listener will make sure the application traffic between the client and the App Tier ELB is encrypted over the SSL\TLS channel. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If the ListenerDescription field is missing, add a new HTTPS listener configured with a SSL\TLS certificate (the listener forwards traffic to the backend instances on port 80, but this can be modified by editing InstancePort=80):&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb create-load-balancer-listeners --load-balancer-name &amp;lt;app_tier_elb&amp;gt; --listeners Protocol=HTTPS,LoadBalancerPort=443,InstanceProtocol=HTTP,InstancePort=80, SSLCertificateId=ssl_certificate_arn 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: ELB listener configuration" url="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-listener-config.html"/>
            <reference name="Amazon docs: create load balancer listeners" url="https://docs.aws.amazon.com/cli/latest/reference/elb/create-load-balancer-listeners.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
          </references>
          <standards>
            <standard ref="1.14" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
  (Note that you should replace &amp;lt;app_tier_elb&amp;gt; with your App tier ELB name) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check if the App Tier ELB is using an HTTPS or TCP listener. Note if the ListenerDescription field is missing or not:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-names &amp;lt;app_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName, DNSName:DNSName, Scheme:Scheme, ListenerDescriptions:ListenerDescriptions[?Listener.Protocol == 'HTTPS' || Listener.Protocol == 'TCP']}&amp;quot; --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.931">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.11" name="Use HTTPS listener for Web Tier ELB" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  A load balancer takes requests from clients and distributes them across the EC2 instances that are registered with the load balancer (also known as back-end instances). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A listener is a process that checks for connection requests. It is configured with a protocol and a port for front-end (client to load balancer) connections 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Note: an HTTPS listener configured on the ELB is not mandatory if you are terminating SSL connections directly on the Web Tier EC2 instances, and using a TCP listener on the ELB (TCP pass-through) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using an HTTPS Elastic Load Balancer listener will make sure the application traffic between the client and the Web Tier ELB is encrypted over the SSL\TLS channel. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;div&gt;
    Using the Amazon unified command line interface: 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;ul&gt; 
    &lt;li&gt;If the ListenerDescription field is missing, add a new HTTPS listener configured with a SSL\TLS certificate (the listener forwards traffic to the backend instances on port 80, but this can be modified by editing InstancePort=80):&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt; 
    &lt;div&gt;
      aws elb create-load-balancer-listeners --load-balancer-name &amp;lt;web_tier_elb&amp;gt; --listeners Protocol=HTTPS,LoadBalancerPort=443,InstanceProtocol=HTTP,InstancePort=80, SSLCertificateId=ssl_certificate_arn 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: ELB listener configuration" url="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-listener-config.html"/>
            <reference name="Amazon docs: create load balancer listeners" url="https://docs.aws.amazon.com/cli/latest/reference/elb/create-load-balancer-listeners.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
          </references>
          <standards>
            <standard ref="1.11" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
  (Note that you should replace &amp;lt;web_tier_elb&amp;gt; with your Web-tier ELB name) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check if the Web Tier ELB is using an HTTPS or TCP listener. Note if the ListenerDescription field is missing or not:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-names &amp;lt;web_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName, DNSName:DNSName, Scheme:Scheme, ListenerDescriptions:ListenerDescriptions[?Listener.Protocol == 'HTTPS' || Listener.Protocol = 'TCP']}&amp;quot; --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.931">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-ELB-01" name="Use the Perfect Forward Secrecy feature" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>For greater communication privacy Elastic Load Balancing allows the use of Perfect Forward
                        Secrecy. This feature provides additional safeguards against eavesdropping on encrypted data,
                        through the use of a unique random session key, and therefore prevents the decoding of captured
                        data, even if the secret long-term key is compromised.
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;b&gt;To begin using Perfect Forward Secrecy: &lt;br /&gt;&lt;/b&gt;Configure your load
                        balancer with the newly added Elliptic Curve Cryptography (ECDHE) cipher suites.</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that your load balancer is configured with the newly added Elliptic Curve
                            Cryptography (ECDHE) cipher suites.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.930">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AMAZON WEB SERVICES" name="Amazon Web Services" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-CF-DOS" issueId="" issueLink="" name="Attackers perform a denial of service" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;A Denial of Service (DoS) attack is a deliberate attempt to make your website unavailable. Attackers use a variety of techniques that consume large amount of resources.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="SYSTEM-VUL-DOS">
                  <countermeasures>
                    <countermeasure ref="aws-tier-6.3" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-6.3" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="EAVESDROPPING-COMMUNICATIONS" issueId="" issueLink="" name="An attacker eavesdrops on the communication between the client and server and decrypts the data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Eavesdropping on communication is a network attack that captures network packets transmitted by other computers and reads the data content. This type of network attack is most effective when weak encryption services are used. An attacker could eavesdrop on the communication between the client and server and decrypt the encrypted data.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-295">
                  <countermeasures>
                    <countermeasure ref="aws-tier-1.12" mitigation="10"/>
                    <countermeasure ref="aws-tier-1.15" mitigation="10"/>
                    <countermeasure ref="aws-tier-1.9" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="aws-tier-1.11" mitigation="10"/>
                    <countermeasure ref="aws-tier-1.14" mitigation="10"/>
                    <countermeasure ref="aws-tier-3.13" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-326">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-ELB-01" mitigation="10"/>
                    <countermeasure ref="Hydras-AWS-ELB-02" mitigation="10"/>
                    <countermeasure ref="aws-tier-1.10" mitigation="10"/>
                    <countermeasure ref="aws-tier-1.13" mitigation="10"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-ELB-01" mitigation="10"/>
                <countermeasure ref="Hydras-AWS-ELB-02" mitigation="10"/>
                <countermeasure ref="aws-tier-1.10" mitigation="10"/>
                <countermeasure ref="aws-tier-1.11" mitigation="10"/>
                <countermeasure ref="aws-tier-1.12" mitigation="10"/>
                <countermeasure ref="aws-tier-1.13" mitigation="10"/>
                <countermeasure ref="aws-tier-1.14" mitigation="10"/>
                <countermeasure ref="aws-tier-1.15" mitigation="10"/>
                <countermeasure ref="aws-tier-1.9" mitigation="10"/>
                <countermeasure ref="aws-tier-3.13" mitigation="10"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="UNAUDITABLE-CHANGES-RESOURCES-AWS" issueId="" issueLink="" name="Attackers make undetected and unaudited changes in the resources" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;div&gt;
                                If audit trails in the resources are not enabled or not protected, attackers could gain
                                access to the system and modify or delete data from the resources and the changes are
                                not detected.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Logging-3.4">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.2" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="unknown-resource-status">
                  <countermeasures>
                    <countermeasure ref="aws-tier-3.10" mitigation="34"/>
                    <countermeasure ref="aws-tier-3.9" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-3.10" mitigation="34"/>
                <countermeasure ref="aws-tier-3.9" mitigation="33"/>
                <countermeasure ref="aws-tier-5.2" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-NET-01">
                  <countermeasures>
                    <countermeasure ref="aws-tier-6.13" mitigation="9"/>
                    <countermeasure ref="aws-tier-6.17" mitigation="7"/>
                    <countermeasure ref="aws-tier-6.19" mitigation="7"/>
                    <countermeasure ref="aws-tier-6.21" mitigation="7"/>
                    <countermeasure ref="aws-tier-6.22" mitigation="7"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.1" mitigation="7"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.2">
                  <countermeasures>
                    <countermeasure ref="C-AWS-ELB1" mitigation="7"/>
                    <countermeasure ref="aws-tier-3.1" mitigation="7"/>
                    <countermeasure ref="aws-tier-3.14" mitigation="7"/>
                    <countermeasure ref="aws-tier-3.15" mitigation="7"/>
                    <countermeasure ref="aws-tier-6.18" mitigation="7"/>
                    <countermeasure ref="aws-tier-6.26" mitigation="7"/>
                    <countermeasure ref="aws-tier-6.5" mitigation="7"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="C-AWS-SRA-9" mitigation="7"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-ELB1" mitigation="7"/>
                <countermeasure ref="C-AWS-SRA-9" mitigation="7"/>
                <countermeasure ref="aws-tier-3.1" mitigation="7"/>
                <countermeasure ref="aws-tier-3.14" mitigation="7"/>
                <countermeasure ref="aws-tier-3.15" mitigation="7"/>
                <countermeasure ref="aws-tier-5.1" mitigation="7"/>
                <countermeasure ref="aws-tier-6.13" mitigation="9"/>
                <countermeasure ref="aws-tier-6.17" mitigation="7"/>
                <countermeasure ref="aws-tier-6.18" mitigation="7"/>
                <countermeasure ref="aws-tier-6.19" mitigation="7"/>
                <countermeasure ref="aws-tier-6.21" mitigation="7"/>
                <countermeasure ref="aws-tier-6.22" mitigation="7"/>
                <countermeasure ref="aws-tier-6.26" mitigation="7"/>
                <countermeasure ref="aws-tier-6.5" mitigation="7"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="0620bb91-d20e-4404-bebe-d9a174b4ba44" diagramComponentId="04611348-08dc-45dd-bd49-d57ff0b83cb2" ref="1e88a75e-5403-4764-96da-46929c4c55dc" name="AWS ELB (Elastic Load Balancer)" desc="" library="Hydras-AWS-Foundation" parentComponentRef="ade2b1c6-8bd1-4ccb-a9eb-4ca92d553182" componentDefinitionRef="load-balancer" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-295" name="Improper Certificate Validation" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not validate, or incorrectly validates, a certificate.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.996">
              <output/>
            </source>
            <references>
              <reference name="CWE-295: Improper Certificate Validation" url="https://cwe.mitre.org/data/definitions/295.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-326" name="Inadequate Encryption Strength" state="0" impact="100" issueId="" issueLink="">
          <desc>The software stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required. A weak encryption scheme can be subjected to brute force attacks that have a reasonable chance of succeeding using current attack methods and resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.996">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.996">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.996">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.2" name="Networks for Amazon resources are not properly segmented" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.996">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Logging-3.4" name="Non-auditable actions in the resources" state="0" impact="100" issueId="" issueLink="">
          <desc>The actions in the resources are not audited and not recorded in the logs.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.995">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not use or incorrectly uses a protection
                        mechanism that provides sufficient defense against directed attacks against the
                        product.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.996">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="SYSTEM-VUL-DOS" name="System is vulnerable to a denial of service attack" state="0" impact="100" issueId="" issueLink="">
          <desc>Attackers can perform a successful denial of service on the system</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.997">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-01" name="Unauthorized connection attempts are allowed on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To avoid this, access to network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.996">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="unknown-resource-status" name="Unknown resource status" state="0" impact="100" issueId="" issueLink="">
          <desc>We do not have our resources current status and as a result lose control of some resources,
                        for example, we may believe these resources are inactive when in fact the status has changed and we are unaware.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.997">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="aws-tier-1.12" name="Add SSL/TLS Certificate to App Tier ELB" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>When you use HTTPS for your front-end listener, you must deploy an SSL/TLS certificate on your load balancer. The load balancer uses the certificate to terminate the connection and then decrypt requests from clients before sending them to the back-end instances. 
&lt;br&gt; 
&lt;br&gt; The SSL\TLS protocol uses an X.509 certificate (SSL\TLS server certificate) to authenticate both the client and the back-end application. An X.509 certificate is a digital form of identification issued by a trusted certificate authority (CA) and contains identification information, a validity period, a public key, a serial number, and the digital signature of the issuer. 
&lt;br&gt; 
&lt;br&gt; You can create a certificate using a Third Party Certificate Authority, AWS Certificate Manager or a self signed certificate like OpenSSL. 
&lt;br&gt; 
&lt;br&gt; Note: an SSL certificate configured on the ELB is not mandatory if you are terminating SSL connections directly on the App Tier EC2 instances, and using a TCP listener on the ELB (TCP pass-through) 
&lt;br&gt; 
&lt;br&gt; All the application traffic between the Web Tier instances and the App Tier ELB nodes should be encrypted using an SSL\TLS certificate. 
&lt;br&gt; 
&lt;b&gt;Remediation:&lt;/b&gt; 
&lt;br&gt; 
&lt;br&gt; Using the Amazon unified command line interface: 
&lt;ul&gt; 
 &lt;li&gt;Adding a HTTPS listener configured with a SSL\TLS certificate (the listener forwards traffic to the backend instances on port 80, but this can be modified by editing InstancePort=80): &lt;br&gt; 
  &lt;blockquote&gt;
    aws elb create-load-balancer-listeners --load-balancer-name &amp;lt;app_tier_elb&amp;gt; --listeners Protocol=HTTPS,LoadBalancerPort=443,InstanceProtocol=HTTP,InstancePort=80, SSLCertificateId=ssl_certificate_arn 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: ELB add/delete listeners" url="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-add-or-delete-listeners.html#add-listener-cli"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
          </references>
          <standards>
            <standard ref="1.12" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
  (Note that you should replace &amp;lt;app_tier_elb&amp;gt; with your App-tier ELB name) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Note that if the ListenerDescriptions is empty, the ELB does not have a listener configured with a SSL\TLS certificate, or a TCP listener (TCP pass-through):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-names &amp;lt;app_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName, DNSName:DNSName, Scheme:Scheme, ListenerDescriptions:ListenerDescriptions[?Listener.SSLCertificateId != null || Listener.Protocol == 'TCP']}&amp;quot; --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.761">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.9" name="Add SSL/TLS Certificate to Web Tier ELB" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  When you use HTTPS for your front-end listener, you must deploy an SSL/TLS certificate on your load balancer. The load balancer uses the certificate to terminate the connection and then decrypt requests from clients before sending them to the back-end instances. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The TLS protocol uses an X.509 certificate (SSL/TLS server certificate) to authenticate both the client and the back-end application. An X.509 certificate is a digital form of identification issued by a trusted certificate authority (CA) and contains identification information, a validity period, a public key, a serial number, and the digital signature of the issuer. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  You can create a certificate using a Third Party Certificate Authority or AWS Certificate Manager. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Note: an SSL certificate configured on the ELB is not mandatory if you are terminating SSL connections directly on the Web Tier EC2 instances, and using a TCP listener on the ELB (TCP pass-through) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  All the application traffic between the clients and the Web Tier ELB nodes should be encrypted using a SSL/TLS certificate. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Adding a HTTPS listener configured with a SSL/TLS certificate (the listener forwards traffic to the backend instances on port 80, but this can be modified by editing InstancePort=80):&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb create-load-balancer-listeners --load-balancer-name &amp;lt;web_tier_elb&amp;gt; --listeners Protocol=HTTPS,LoadBalancerPort=443,InstanceProtocol=HTTP,InstancePort=80, SSLCertificateId=ssl_certificate_arn 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: ELB add/delete listeners" url="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-add-or-delete-listeners.html#add-listener-cli"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
          </references>
          <standards>
            <standard ref="1.9" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.9" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
  (Note that you should replace &amp;lt;web_tier_elb&amp;gt; with your Web-tier ELB name) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Note that if the ListenerDescriptions element is empty, the ELB does not have a listener configured with a SSL/TLS certificate, or a TCP listener (TCP pass-through):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-names &amp;lt;web_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName, DNSName:DNSName, Scheme:Scheme, ListenerDescriptions:ListenerDescriptions[?Listener.SSLCertificateId != null ||&amp;nbsp; Listener.Protocol == 'TCP']}&amp;quot; --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.761">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.13" name="Allow connectivity to the VPC Internet Gateway (IGW) and associate the Routing Table with Web tier ELB subnet (by default route (0.0.0.0/0))" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  A route table contains a set of rules, called routes, that are used to determine where network traffic is directed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Each subnet in your VPC must be associated with a route table; the table controls the routing for the subnet. A subnet can only be associated with one route table at a time, but you can associate multiple subnets with the same route table. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  The default route (0.0.0.0/0) should be pointing to the Internet Gateway in order to provide internet connectivity for the Web tier ELB. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;For the above route tables, if the default route (0.0.0.0/0) exists but it doesn't have an IGW configured as gateway:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws ec2 replace-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidr-block 0.0.0.0/0 --gateway-id &amp;lt;vpc_igw&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;For the above route tables, if the default route (0.0.0.0/0) doesn't exist:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws ec2 create-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidr-block 0.0.0.0/0 --gateway-id &amp;lt;vpc_igw&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: EC2 replace route" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/replace-route.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Create route" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-route.html"/>
            <reference name="Describe route tables" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-route-tables.html"/>
          </references>
          <standards>
            <standard ref="6.13" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.13" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the subnets associated with the Web tier ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-name &amp;lt;web_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].Subnets&amp;quot; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the routes of the route tables associated with the above subnets, and check if the default route (0.0.0.0/0) has an IGW configured as gateway:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-route-tables --filters Name=association.subnet-id,Values=&amp;lt;web_tier_elb_subnet1&amp;gt;,&amp;lt;web_tier_elb_subnet2&amp;gt; --query &amp;quot;RouteTables[*].{RouteTableId:RouteTableId, Routes:Routes}&amp;quot; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.762">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.15" name="Associate App Tier Auto-Scaling Group to ELB" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Elastic Load Balancing automatically distributes incoming application traffic across multiple Amazon EC2 instances within a VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  It enables greater levels of fault tolerance in your applications, seamlessly providing the required amount of load balancing capacity needed to distribute application traffic across 1 or more Availability Zones within a VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Elastic Load Balancing must be integrated with Auto Scaling Groups to ensure that you have availability of compute resources in the event of a failure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Integrating Auto Scaling Groups with an Elastic Load Balancer will help provide high availability and back-end EC2 instance scaling. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Through Auto-Scaling Group configuration you can define: 
  minimum / maximum number of EC2 instances to be launched by the Auto-Scaling Group 
  Availability Zones / subnets used 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;List existing load balancers:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb describe-load-balancers --query 'LoadBalancerDescriptions[*].{ELBName:LoadBalancerName}' 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div style=""&gt;
   or 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create new load balancer:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb create-load-balancer --load-balancer-name &amp;lt;app_tier_elb&amp;gt; --scheme internal --listeners &amp;lt;listener_config&amp;gt; --subnets &amp;lt;app_tier_subnet1&amp;gt; &amp;lt;app_tier_subnet2&amp;gt; --security-groups &amp;lt;app_tier_elb_security_group&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Attached load balancer from previous steps to autoscaling group:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws autoscaling attach-load-balancers --load-balancer-names &amp;lt;app_tier_elb&amp;gt; --auto-scaling-group-name &amp;lt;app_tier_autoscaling_group_name&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: attach load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/attach-load-balancers.html"/>
            <reference name="Amazon docs: create load balancer" url="https://docs.aws.amazon.com/cli/latest/reference/elb/create-load-balancer.html"/>
            <reference name="Amazon docs: describe autoscaling load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-load-balancers.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Describe autoscaling groups" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html"/>
          </references>
          <standards>
            <standard ref="3.15" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.15" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Identify Autoscaling Group Name and associated ELB name:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-auto-scaling-groups&amp;nbsp; --query 'AutoScalingGroups[*].{ELB:LoadBalancerNames, ASGName:AutoScalingGroupName}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Identify current status of the ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-load-balancers --auto-scaling-group-name &amp;lt;app_tier_autoscaling_group_name&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.762">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.1" name="Associate each Auto-Scaling Group to ELB" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Elastic Load Balancing automatically distributes incoming application traffic across multiple Amazon EC2 instances within a VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  It enables greater levels of fault tolerance in your applications, seamlessly providing the required amount of load balancing capacity needed to distribute application traffic across 1 or more Availability Zones within a VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Elastic Load Balancing must be integrated with Auto Scaling Groups to ensure that you have availability of compute resources in the event of a failure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Integrating Auto Scaling Groups with an Elastic Load Balancer will help provide high availability and back-end EC2 instance scaling. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Through Auto-Scaling Group configuration you can define: 
  minimum / maximum number of EC2 instances to be launched by the Auto-Scaling Group 
  Availability Zones / subnets used 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;List existing load balancers:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb describe-load-balancers --query 'LoadBalancerDescriptions[*].{ELBName:LoadBalancerName}' 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;br /&gt; 
 &lt;/div&gt; 
 &lt;div style=""&gt;
   or 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create new load balancer:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb create-load-balancer --load-balancer-name &amp;lt;elb_name&amp;gt; --listeners &amp;lt;listener_config&amp;gt; --subnets &amp;lt;application_subnet&amp;gt; --security-groups &amp;lt;application_security_groups&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Attached load balancer from previous steps to autoscaling group:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws autoscaling attach-load-balancers --load-balancer-names &amp;lt;elb_name&amp;gt; --auto-scaling-group-name &amp;lt;autoscaling_group_name&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: attach load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/attach-load-balancers.html"/>
            <reference name="Amazon docs: create load balancer" url="https://docs.aws.amazon.com/cli/latest/reference/elb/create-load-balancer.html"/>
            <reference name="Amazon docs: describe autoscaling load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-load-balancers.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Describe autoscaling groups" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html"/>
          </references>
          <standards>
            <standard ref="3.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Identify Autoscaling Group Name and associated ELB name:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-auto-scaling-groups&amp;nbsp; --query 'AutoScalingGroups[*].{ELB:LoadBalancerNames, ASGName:AutoScalingGroupName}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Identify current status of the ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-load-balancers --auto-scaling-group-name &amp;lt;autoscaling_group_name&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.761">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.14" name="Associate Web Tier Auto-Scaling Group to ELB" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Elastic Load Balancing automatically distributes incoming application traffic across multiple Amazon EC2 instances within a VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  It enables greater levels of fault tolerance in your applications, seamlessly providing the required amount of load balancing capacity needed to distribute application traffic across 1 or more Availability Zones within a VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Elastic Load Balancing must be integrated with Auto Scaling Groups to ensure that you have availability of compute resources in the event of a failure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Integrating Auto Scaling Groups with an Elastic Load Balancer will help provide high availability and back-end EC2 instance scaling. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Through Auto-Scaling Group configuration you can define: 
  minimum / maximum number of EC2 instances to be launched by the Auto-Scaling Group 
  Availability Zones / subnets used 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;List existing load balancers:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb describe-load-balancers --query 'LoadBalancerDescriptions[*].{ELBName:LoadBalancerName}' 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   or 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create new load balancer:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb create-load-balancer --load-balancer-name &amp;lt;web_tier_elb&amp;gt; --listeners &amp;lt;listener_config&amp;gt; --subnets &amp;lt;web_tier_elb_subnet1&amp;gt; &amp;lt;web_tier_elb_subnet2&amp;gt; --security-groups &amp;lt;web_tier_elb_security_group&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Attached load balancer from previous steps to autoscaling group:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws autoscaling attach-load-balancers --load-balancer-names &amp;lt;web_tier_elb&amp;gt; --auto-scaling-group-name &amp;lt;web_tier_autoscaling_group_name&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: attach load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/attach-load-balancers.html"/>
            <reference name="Amazon docs: create load balancer" url="https://docs.aws.amazon.com/cli/latest/reference/elb/create-load-balancer.html"/>
            <reference name="Amazon docs: describe autoscaling load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-load-balancers.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Describe autoscaling groups" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html"/>
          </references>
          <standards>
            <standard ref="3.14" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.14" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Identify Autoscaling Group Name and associated ELB name:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-auto-scaling-groups&amp;nbsp; --query 'AutoScalingGroups[*].{ELB:LoadBalancerNames, ASGName:AutoScalingGroupName}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Identify current status of the ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-load-balancers --auto-scaling-group-name &amp;lt;web_tier_autoscaling_group_name&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.762">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-ELB1" name="Configure ALB to redirect all HTTP requests to HTTPS" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Before you start to use your Application Load Balancer, you must add one or more listeners. A listener is a process that uses the configured protocol and port to check for connection requests. Listeners support both the HTTP and HTTPS protocols. You can use an HTTPS listener to offload the work of encryption and decryption to your load balancer. To enforce encryption in transit, you should use redirect actions with Application Load Balancers to redirect client HTTP requests to an HTTPS request on port 443.&lt;/p&gt;&lt;p&gt;If you use Application Load Balancers with an HTTP listener, ensure that the listener is redirected to HTTPS for any nonconsole administrative access. Allowing unencrypted authentication over HTTP for administrators of the cardholder data environment might violate the requirement to encrypt all nonconsole administrative access using strong cryptography.&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;To remediate this issue, you redirect HTTP request to HTTPS.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;To redirect HTTP requests to HTTPS on an Application Load Balancer&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.&lt;/li&gt;&lt;li&gt;In the navigation pane, under &lt;strong&gt;Load Balancing&lt;/strong&gt;, choose &lt;strong&gt;Load balancers&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Choose an Application Load Balancer.&lt;/li&gt;&lt;li&gt;Choose &lt;strong&gt;Listeners&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Select the check box for an HTTP listener (port 80 TCP) and then choose &lt;strong&gt;Edit&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;If there is an existing rule, you must delete it. Otherwise, choose &lt;strong&gt;Add action&lt;/strong&gt; and then choose &lt;strong&gt;Redirect to...&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Choose &lt;strong&gt;HTTPS&lt;/strong&gt; and then enter &lt;strong&gt;443&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Choose the check mark in a circle symbol and then choose &lt;strong&gt;Update&lt;/strong&gt;.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS PCI-DSS Controls" url="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-pci-controls.html"/>
          </references>
          <standards>
            <standard ref="2.2.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="4.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.758">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.10" name="Configure Health Check for App Tier ELB" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  By default, an Auto-Scaling Group periodically uses the results of the EC2 instance status checks to determine the health status of each instance. If an instance fails the EC2 instance status checks, Auto-Scaling marks the instance as unhealthy and replaces the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  However, if you have attached one or more Elastic Load Balancing (ELB) load balancers to your Auto-Scaling Group and the instance fails the ELB health checks, Auto-Scaling does not replace the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Amazon ELB will periodically sends pings, attempts connections, or sends requests to test the EC2 instances, these tests are called health checks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The status of the instances that are healthy at the time of the health check is InService. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The status of any instances that are unhealthy at the time of the health check is OutOfService. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The load balancer performs health checks on all registered instances, whether the instance is in a healthy state or an unhealthy state. The load balancer routes requests only to the healthy instances. When the load balancer determines that an instance is unhealthy, it stops routing requests to that instance. The load balancer resumes routing requests to the instance when it has been restored to a healthy state 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Ensures availability of back-end EC2 instances associated with an Amazon ELB through application layer health check (ex: http) instead of TCP health checks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified CLI: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a JSON file containing the attributes you want to modify and save it locally as /tmp/ELBhealthcheck.json:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     { 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; "Target": "&amp;lt;string&amp;gt;", 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; "Interval": &amp;lt;integer&amp;gt;, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; "Timeout": &amp;lt;integer&amp;gt;, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; "UnhealthyThreshold": &amp;lt;integer&amp;gt;, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; "HealthyThreshold": &amp;lt;integer&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     } 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Modify App tier ELB to include appropriate health check:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb configure-health-check --load-balancer-name &amp;lt;app_tier_elb&amp;gt; --health-check file:///tmp/ELBhealthcheck.json 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: ELB healthchecks" url="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-healthchecks.html"/>
            <reference name="Amazon docs: configure health check" url="https://docs.aws.amazon.com/cli/latest/reference/elb/configure-health-check.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Describe autoscaling groups" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html"/>
          </references>
          <standards>
            <standard ref="3.10" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.10" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Identify if health check is in place on the App tier ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-names &amp;lt;app_tier_elb&amp;gt; --query 'LoadBalancerDescriptions[*].{ELBName:LoadBalancerName,HealthCheck:HealthCheck}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.761">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.9" name="Configure Health Check for Web Tier ELB" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  By default, an Auto-Scaling Group periodically uses the results of the EC2 instance status checks to determine the health status of each instance. If an instance fails the EC2 instance status checks, Auto-Scaling marks the instance as unhealthy and replaces the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  However, if you have attached one or more Elastic Load Balancing (ELB) load balancers to your Auto-Scaling Group and the instance fails the ELB health checks, Auto-Scaling does not replace the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Amazon ELB will periodically sends pings, attempt connections, or sends requests to test the EC2 instances, these tests are called health checks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The status of the instances that are healthy at the time of the health check is InService. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The status of any instances that are unhealthy at the time of the health check is OutOfService. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The load balancer performs health checks on all registered instances, whether the instance is in a healthy state or an unhealthy state. The load balancer routes requests only to the healthy instances. When the load balancer determines that an instance is unhealthy, it stops routing requests to that instance. The load balancer resumes routing requests to the instance when it has been restored to a healthy state 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Ensure availability of back-end EC2 instances associated with an Amazon ELB through application layer health check (ex: http) instead of TCP health checks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified CLI: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a JSON file containing the attributes you want to modify and save it locally as /tmp/ELBhealthcheck.json:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     { 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; "Target": "&amp;lt;string&amp;gt;", 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; "Interval": &amp;lt;integer&amp;gt;, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; "Timeout": &amp;lt;integer&amp;gt;, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; "UnhealthyThreshold": &amp;lt;integer&amp;gt;, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; "HealthyThreshold": &amp;lt;integer&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     } 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Modify Web tier ELB to include appropriate health check:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb configure-health-check --load-balancer-name &amp;lt;web_tier_elb&amp;gt; --health-check file:///tmp/ELBhealthcheck.json 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: configure health check" url="https://docs.aws.amazon.com/cli/latest/reference/elb/configure-health-check.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Describe autoscaling groups" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html"/>
          </references>
          <standards>
            <standard ref="3.9" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.9" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Identify if health check is in place on the Web tier ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-names &amp;lt;web_tier_elb&amp;gt; --query 'LoadBalancerDescriptions[*].{ELBName:LoadBalancerName,HealthCheck:HealthCheck}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.762">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.13" name="Configure the latest SSL Security Policies for App Tier ELB" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Elastic Load Balancing uses an Secure Socket Layer (SSL) negotiation configuration, known as a security policy, to negotiate SSL/TLS connections between a client and the load balancer. A security policy is a combination of SSL/TLS protocols, ciphers, and the Server Order Preference option. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Elastic Load Balancing supports configuring your load balancer to use either predefined or custom security policies. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Secure Sockets Layer (SSL) and Transport Layer Security (TLS) are cryptographic protocols that are used to encrypt confidential data over insecure networks such as the Internet. The TLS protocol is a newer version of the SSL protocol. In the Elastic Load Balancing documentation, we refer to both SSL and TLS protocols as the SSL protocol. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Note: an SSL certificate configured on the ELB and an SSL Security Policy is not mandatory if you are terminating SSL connections directly on the App Tier EC2 instances, and using a TCP listener on the ELB (TCP pass-through) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Making sure the latest ELB SSL Security Policy is used will ensure the SSL/TLS connection will be negotiated using only the appropriate cryptographic protocols deemed safe with no proven vulnerabilities. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div style=""&gt; 
 &lt;ul&gt; 
  &lt;li&gt;(Note that you should replace &amp;lt;app\_tier\_elb&amp;gt; with your App-tier ELB name, and &amp;lt;latest\_ssl\_policy&amp;gt; with the proper policy name)&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb set-load-balancer-policies-of-listener --load-balancer-name &amp;lt;app_tier_elb&amp;gt; --load-balancer-port 443 --policy-names&amp;nbsp; &amp;lt;latest_ssl_policy&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: ELB listener policy" url="https://aws.amazon.com/premiumsupport/knowledge-center/elb-listener-policy-cli/"/>
            <reference name="Amazon docs: ELB security policy options" url="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-security-policy-options.html"/>
            <reference name="Amazon docs: describe load balancer policies" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancer-policies.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Amazon docs: set load balancer policies of listener" url="https://docs.aws.amazon.com/cli/latest/reference/elb/set-load-balancer-policies-of-listener.html"/>
          </references>
          <standards>
            <standard ref="1.13" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
  (Note that you should replace &amp;lt;app_tier_elb&amp;gt; with your App-tier ELB name) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Find all the SSL security policies associated with your load balancer listener:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancer-policies --load-balancer-name &amp;lt;app_tier_elb&amp;gt; --query 'PolicyDescriptions[?PolicyTypeName==`SSLNegotiationPolicyType`].{PolicyName:PolicyName,ReferenceSecurityPolicy:PolicyAttributeDescriptions[0].AttributeValue}' --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Find which of the above policies is currently active, and check on AWS documentation if it is the latest (note that for the TCP listeners the PolicyNames element will be empty, but the TCP listener is still compliant when using SSL certificates on the back-end EC2 instances):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-name &amp;lt;app_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].{CompliantListeners:ListenerDescriptions[?Listener.SSLCertificateId != null || Listener.Protocol == 'TCP']}&amp;quot; --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.761">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.10" name="Configure the latest SSL Security Policies for Web Tier ELB" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Elastic Load Balancing uses an Secure Socket Layer (SSL) negotiation configuration, known as a security policy, to negotiate SSL/TLS connections between a client and the load balancer. A security policy is a combination of SSL/TLS protocols, ciphers, and the Server Order Preference option. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Elastic Load Balancing supports configuring your load balancer to use either predefined or custom security policies. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Secure Sockets Layer (SSL) and Transport Layer Security (TLS) are cryptographic protocols that are used to encrypt confidential data over insecure networks such as the Internet. The TLS protocol is a newer version of the SSL protocol. In the Elastic Load Balancing documentation, we refer to both SSL and TLS protocols as the SSL protocol. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Note: an SSL certificate configured on the ELB and an SSL Security Policy is not mandatory if you are terminating SSL connections directly on the Web Tier EC2 instances, and using a TCP listener on the ELB (TCP pass-through) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Making sure the latest ELB SSL Security Policy is used will ensure the SSL/TLS connection will be negotiated using only the appropriate cryptographic protocols deemed safe with no proven vulnerabilities. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt;
   (Note that you should replace &amp;lt;web\_tier\_elb&amp;gt; with your Web-tier ELB name, and _&amp;lt;latest\_ssl\_policy&amp;gt;_ with the proper policy name) 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;div&gt; 
  &lt;div style=""&gt;
    aws elb set-load-balancer-policies-of-listener --load-balancer-name &amp;lt;web_tier_elb&amp;gt; --load-balancer-port 443 --policy-names&amp;nbsp; &amp;lt;latest_ssl_policy&amp;gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: ELB listener policy" url="https://aws.amazon.com/premiumsupport/knowledge-center/elb-listener-policy-cli/"/>
            <reference name="Amazon docs: ELB security policy options" url="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-security-policy-options.html"/>
            <reference name="Amazon docs: describe load balancer policies" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancer-policies.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Amazon docs: set load balancer policies of listener" url="https://docs.aws.amazon.com/cli/latest/reference/elb/set-load-balancer-policies-of-listener.html"/>
          </references>
          <standards>
            <standard ref="1.10" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.10" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
  (Note that you should replace &amp;lt;web_tier_elb&amp;gt; with your Web-tier ELB name) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Find all the SSL security policies associated with your load balancer listener:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancer-policies --load-balancer-name &amp;lt;web_tier_elb&amp;gt; --query 'PolicyDescriptions[?PolicyTypeName==`SSLNegotiationPolicyType`].{PolicyName:PolicyName,ReferenceSecurityPolicy:PolicyAttributeDescriptions[0].AttributeValue}' --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Find which of the above policies is currently active, and check on AWS documentation if it is the latest (note that for the TCP listeners the PolicyNames element will be empty, but the TCP listener is still compliant when using SSL certificates on the back-end EC2 instances):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-name &amp;lt;web_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].{CompliantListeners:ListenerDescriptions[?Listener.SSLCertificateId != null || Listener.Protocol == 'TCP']}&amp;quot; --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.761">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.5" name="Create subnets for the Web Tier ELB" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        You can create a VPC that spans multiple Availability Zones. After creating a VPC, you can add
                        one or more subnets in each Availability Zone. Each subnet must reside entirely within one
                        Availability Zone and cannot span zones. Availability Zones are distinct locations that are
                        engineered to be isolated from failures in other Availability Zones. By launching instances in
                        separate Availability Zones, you can protect your applications from the failure of a single
                        location. AWS assigns a unique ID to each subnet.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        When you create a subnet, you specify the CIDR block for the subnet. The CIDR block of a subnet
                        shouldn't be the same as the CIDR block for the VPC (for a single subnet in the VPC). The
                        allowed block size is between a /28 netmask and /16 netmask. If you create more than one subnet
                        in a VPC, the CIDR blocks of the subnets must not overlap.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Some AWS regions have more than 2 availability zones and it is recommended to use more than 2
                        where possible.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        At least 2 subnets in 2 different availability zones (AZ) should be created in order to have
                        fault tolerance and high availability from the perspective of resource deployment.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        Using the Amazon unified command line interface:
                        &lt;/div&gt;
                        &lt;div style=""&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create subnets for Web tier ELB, and note the subnet id:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        aws ec2 create-subnet --vpc-id application_vpc
                        --cidr-block desired_cidr
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Tag the above subnets with the Web tier ELB tags:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        aws ec2 create-tags --resources web_tier_elb_subnet1
                        web_tier_elb_subnet2 --tags Key=public_tier_tag,Value=public_tier_tag_value
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: create subnet" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-subnet.html"/>
            <reference name="Amazon docs: create tags" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-tags.html"/>
            <reference name="Describe subnets" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-subnets.html"/>
          </references>
          <standards>
            <standard ref="6.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the subnets associated with the Web tier ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-name &amp;lt;web_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].Subnets&amp;quot; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  OR 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the subnets created for the Web tier ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-subnets --filters Name=tag:public_tier_tag,Values=public_tier_tag_value --query &amp;quot;Subnets[*].SubnetId&amp;quot; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.763">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.26" name="Create the App tier ELB as Internal" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  An internal load balancer routes traffic to your EC2 instances in private subnets using private IP addresses. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Create an internal load balancer and register the database servers with it. The web servers receive requests from the Internet-facing load balancer and send requests for the database servers to the internal load balancer. The database servers receive requests from the internal load balancer. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  When an internal load balancer is created, it receives a public DNS name with the following form: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;div&gt;
   internal-name-123456789.region.elb.amazonaws.com 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br /&gt; 
 &lt;/div&gt; 
&lt;/blockquote&gt; 
&lt;div&gt;
  The DNS servers resolve the DNS name of your load balancer to the private IP addresses of the load balancer nodes for your internal load balancer. Each load balancer node is connected to the private IP addresses of the back-end instances that are in its Availability Zone using elastic network interfaces. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Creating the App tier ELB as internal will prevent access to the app tier from the Internet and will allow access from the Web tier instances. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create new internal ELB for your App tier:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb create-load-balancer --load-balancer-name app_tier_elb --scheme internal --listeners listener_config --subnets app_tier_subnet1 app_tier_subnet2 --security-groups app_tier_elb_security_group 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Register App tier instances with the new App tier ELB:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb register-instances-with-load-balancer --load-balancer-name app_tier_elb --instances &amp;lt;app_tier_instance1&amp;gt; &amp;lt;app_tier_instance2&amp;gt; &amp;lt;app_tier_instance3&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: ELB internal load balancers" url="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-internal-load-balancers.html"/>
            <reference name="Amazon docs: create load balancer" url="https://docs.aws.amazon.com/cli/latest/reference/elb/create-load-balancer.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Amazon docs: register instances with load balancer" url="https://docs.aws.amazon.com/cli/latest/reference/elb/register-instances-with-load-balancer.html"/>
          </references>
          <standards>
            <standard ref="6.26" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.26" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check the Scheme of your App tier ELB, and make sure it is &amp;quot;internal&amp;quot;:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-name &amp;lt;app_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName, Scheme:Scheme}&amp;quot; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.763">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.21" name="Create the App tier ELB Security Group to only accept HTTP/HTTPS" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        A security group acts as a virtual firewall for your instance to control inbound and outbound
                        traffic. When you launch an instance in the AWS Virtual Private Cloud (VPC), you can assign the
                        instance to up to five security groups. Security groups act at the instance level, not the
                        subnet level. Therefore, each instance in a subnet in your VPC could be assigned to a different
                        set of security groups. If you don't specify a particular group at launch time, the instance is
                        automatically assigned to the default security group for the VPC.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        For each security group, you add rules that control the inbound traffic to instances, and a
                        separate set of rules that control the outbound traffic.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        The SG associated with the App tier ELB should allow connectivity from the security group
                        associated with Web tier instances only for the HTTP (TCP 80) and HTTPS (TCP 443) ports.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        The defaults for HTTP and HTTPS are used as an example, any other ports would apply depending on
                        the application design.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        Using the Amazon unified command line interface:
                        &lt;/div&gt;
                        &lt;div style=""&gt;
                        &lt;ul&gt;
                        &lt;li&gt;First remove all the ingress rules for the security group associated with the App tier
                        ELB:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        aws ec2 describe-security-groups --group-id app_tier_elb_security_group
                        --query &amp;quot;SecurityGroups[0].IpPermissions&amp;quot; &amp;gt; /tmp/IpPermissions.json
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div style=""&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        aws ec2 revoke-security-group-ingress --group-id app_tier_elb_security_group
                        --ip-permissions file:///tmp/IpPermissions.json
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &lt;ul&gt;
                        &lt;li&gt;create locally the below json file containing ingress rules for HTTP (TCP 80) and
                        HTTPS (TCP 443) ports only from and name it IpPermissions.json:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        [
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; {
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;PrefixListIds&amp;quot;: [],
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;FromPort&amp;quot;: 80,
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;IpRanges&amp;quot;: [],
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;ToPort&amp;quot;: 80,
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;IpProtocol&amp;quot;: &amp;quot;tcp&amp;quot;,
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;UserIdGroupPairs&amp;quot;: [
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;UserId&amp;quot;:
                        &amp;quot;&amp;lt;&amp;lt;em&amp;gt;aws_account_number&amp;gt;&amp;lt;/em&amp;gt;&amp;quot;,
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;GroupId&amp;quot;:
                        &amp;quot;&amp;lt;span style=&amp;quot;font-style: italic;&amp;quot;&amp;gt;&amp;lt;&amp;lt;/span&amp;gt;&amp;lt;span
                        style=&amp;quot;font-style: italic;&amp;quot;&amp;gt;web_tier_security_group&amp;quot;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ]
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; },
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; {
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;PrefixListIds&amp;quot;: [],
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;FromPort&amp;quot;: 443,
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;IpRanges&amp;quot;: [],
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;ToPort&amp;quot;: 443,
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;IpProtocol&amp;quot;: &amp;quot;tcp&amp;quot;,
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;UserIdGroupPairs&amp;quot;: [
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;UserId&amp;quot;:
                        &amp;quot;&amp;lt;&amp;lt;em&amp;gt;aws_account_number&amp;gt;&amp;lt;/em&amp;gt;&amp;quot;,
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;GroupId&amp;quot;:
                        &amp;quot;&amp;lt;span style=&amp;quot;font-style: italic;&amp;quot;&amp;gt;&amp;lt;&amp;lt;/span&amp;gt;&amp;lt;span
                        style=&amp;quot;font-style: italic;&amp;quot;&amp;gt;web_tier_security_group&amp;lt;/span&amp;gt;&amp;gt;&amp;quot;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ]
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &amp;nbsp; &amp;nbsp; }
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        ]
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Add to the security group associated with the App tier ELB the above ingress rules:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        aws ec2 authorize-security-group-ingress --group-id app_tier_elb_security_group&amp;nbsp;
                        --ip-permissions file:///PathTo/IpPermissions.json
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: authorize security group ingress" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/authorize-security-group-ingress.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Amazon docs: describe security groups" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-security-groups.html"/>
            <reference name="Revoke security group ingress" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/revoke-security-group-ingress.html"/>
          </references>
          <standards>
            <standard ref="6.21" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.21" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the security group associated with the App tier ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-name &amp;lt;app_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].{DNSName:DNSName, AppTierELBSecurityGroups:SecurityGroups, SourceSecurityGroup:SourceSecurityGroup}&amp;quot; --output table&amp;nbsp; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;br /&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt;
  note the &amp;quot;AppTierELBSecurityGroups&amp;quot; from the output 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the ingress rules for the above security group, and make sure that only HTTP (TCP 80) and HTTPS (TCP 443) traffic is allowed from Web tier Security Group:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-security-groups --group-ids&amp;nbsp; &amp;lt;app_tier_elb_security_group&amp;gt; --query &amp;quot;SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions}&amp;quot; --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.762">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.22" name="Create the App tier Security Group to allow inbound connections from App tier ELB Security Group for explicit ports" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        A security group acts as a virtual firewall for your instance to control inbound and outbound
                        traffic. When you launch an instance in the AWS Virtual Private Cloud (VPC), you can assign the
                        instance to up to five security groups. Security groups act at the instance level, not the
                        subnet level. Therefore, each instance in a subnet in your VPC could be assigned to a different
                        set of security groups. If you don't specify a particular group at launch time, the instance is
                        automatically assigned to the default security group for the VPC.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        For each security group, you add rules that control the inbound traffic to instances, and a
                        separate set of rules that control the outbound traffic.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        This is required for both the configured port and protocol for the listener on the back-end
                        instance and the port and protocol used for the health check.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        This protects the App-server tier from unauthorized access, it is recommended to add inbound
                        security group rules that allow traffic for the specific application protocol and ports by
                        referencing as source the security group associated with the App tier ELB.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        Using the Amazon unified command line interface:
                        &lt;/div&gt;
                        &lt;div style=""&gt;
                        &lt;ul&gt;
                        &lt;li&gt;First remove all the ingress rules for the App tier security group (use the &amp;quot;AppTierSecurityGroup&amp;quot;
                        element from Audit procedure):&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        aws ec2 describe-security-groups --group-id app_tier_security_group
                        --query &amp;quot;SecurityGroups[0].IpPermissions&amp;quot; &amp;gt; /tmp/IpPermissions.json
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div style=""&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        aws ec2 revoke-security-group-ingress --group-id app_tier_security_group
                        --ip-permissions file:///tmp/IpPermissions.json
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Add an ingress rule for a specific port, using --source-group option to specify the
                        App tier ELB security group as the source of the connections:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div style=""&gt;
                        aws ec2 authorize-security-group-ingress --group-id app_tier_security_group
                        --protocol tcp --port specific_port
                        --source-group app_tier_elb_security_group
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: authorize security group ingress" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/authorize-security-group-ingress.html"/>
            <reference name="Amazon docs: describe launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-launch-configurations.html"/>
            <reference name="Amazon docs: describe security groups" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-security-groups.html"/>
            <reference name="Revoke security group ingress" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/revoke-security-group-ingress.html"/>
          </references>
          <standards>
            <standard ref="6.22" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.22" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;List the ingress rules for the above security group, and make sure that allows
                            connections only from App tier ELB security group on specific ports:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws ec2 describe-security-groups --filters Name=tag:app_tier_tag,Values=app_tier_tag_value
                            --query &amp;quot;SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions,
                            AppTierSecurityGroup:GroupId}&amp;quot; --output table
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.763">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.19" name="Create the Web tier Security Group to allow inbound connections from Web tier ELB Security Group for explicit ports" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A security group acts as a virtual firewall for your instance to control inbound and 
  outbound traffic. When you launch an instance in the AWS Virtual Private Cloud (VPC), you can assign the instance to up to five security groups. Security groups act at the instance level, not the subnet level. Therefore, each instance in a subnet in your VPC could be assigned to a different set of security groups. If you don't specify a particular group at launch time, the instance is automatically assigned to the default security group for the VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  For each security group, you add rules that control the inbound traffic to instances, and a separate set of rules that control the outbound traffic. This is required for both the configured port and protocol for the listener on the back-end instance and the port and protocol used for the health check. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;First remove all the ingress rules for the Web tier security group (use the "WebTierSecurityGroup" element from Audit procedure):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-security-groups --group-id &amp;lt;web_tier_security_group&amp;gt; --query "SecurityGroups[0].IpPermissions" &amp;gt; /tmp/IpPermissions.json 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 revoke-security-group-ingress --group-id &amp;lt;web_tier_security_group&amp;gt; --ippermissions file:///tmp/IpPermissions.json 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Add an ingress rule for a specific port, using --source-group option to specify the Web tier ELB security group as the source of the connections:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 authorize-security-group-ingress --group-id &amp;lt;web_tier_security_group&amp;gt; -- protocol tcp --port &amp;lt;specific_port&amp;gt; --source-group &amp;lt;web_tier_elb_security_group&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: authorize security group ingress" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/authorize-security-group-ingress.html"/>
            <reference name="Amazon docs: describe launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-launch-configurations.html"/>
            <reference name="Amazon docs: describe security groups" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-security-groups.html"/>
            <reference name="Revoke security group ingress" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/revoke-security-group-ingress.html"/>
          </references>
          <standards>
            <standard ref="6.19" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.19" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the ingress rules for the Web tier security group, and make sure that allows connections only from Web tier ELB security group on specific ports:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-security-groups --filters Name=tag:&amp;lt;web_tier_tag&amp;gt;,Values=&amp;lt;web_tier_tag_value&amp;gt; --query "SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions, WebTierSecurityGroup:GroupId}" --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.762">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-SRA-9" name="Deploy AWS WAF policies to protect the ALB" issueId="" issueLink="" platform="" cost="0" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;For additional layers of defense, you can deploy AWS WAF policies to protect the Application Load Balancer. Having edge policies, application policies, and even private or internal policy enforcement layers adds to the visibility of communication requests and provides unified policy enforcement. For more information, see the blog post Deploying defense in depth using AWS Managed Rules for AWS WAF.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS Security Reference Architecture" url="https://docs.aws.amazon.com/prescriptive-guidance/latest/security-reference-architecture/welcome.html"/>
            <reference name="Deploying defense in depth using AWS Managed Rules for AWS WAF" url="https://aws.amazon.com/blogs/security/deploying-defense-in-depth-using-aws-managed-rules-for-aws-waf-part-2/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that AWS WAF is blocking potentially dangerous requests.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.760">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.18" name="Do not use Web tier ELB Security Group in the Auto Scaling launch configuration of any other tier (Web, App)" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  When you use the AWS Management Console to create a load balancer in a VPC, you can choose an existing security group for the VPC or create a new security group for the VPC. If you choose an existing security group, it must allow traffic in both directions to the listener and health check ports for the load balancer. If you choose to create a security group, the console automatically adds rules to allow all traffic on these ports. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Be sure to review the security group rules to ensure that they allow traffic on the listener and health check ports for the new load balancer. When you delete your load balancer, this security group is not deleted automatically. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  If you add a listener to an existing load balancer, you must review your security groups to ensure they allow traffic on the new listener port in both directions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  The web-tier ELB is the only one that is public facing and should have rules to allow inbound traffic to the application ports (ex: HTTP and HTTPS) from any IP source (0.0.0.0/0). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  The outbound security group rules for the web-tier ELB should be restricted to only the backend web-server instances for the appropriate application ports. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Associating the web-tier ELB security group to any other instances that shouldn't be publicly accessible exposes them to unauthorized access. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create new launch configuration using the correct security groups for Web and/or App tier:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws autoscaling create-launch-configuration --launch-configuration-name &amp;lt;web_tier_launch_config&amp;gt; --image-id &amp;lt;web_tier_ami&amp;gt; --key-name &amp;lt;your_key_pair&amp;gt; --security-groups &amp;lt;web_tier_security_group&amp;gt;/&amp;lt;app_tier_security_group --instance-type &amp;lt;desired_instance_type&amp;gt; --iam-instance-profile &amp;lt;web_tier_instance_profile&amp;gt;/&amp;lt;app_tier_instance_profile&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-launch-configurations.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Create launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/create-launch-configuration.html"/>
          </references>
          <standards>
            <standard ref="6.18" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.18" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the security group associated with the Web tier ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-name &amp;lt;web_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].{DNSName:DNSName, WebTierELBSecurityGroups:SecurityGroups, SourceSecurityGroup:SourceSecurityGroup}&amp;quot; --output table 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;br /&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt;
  note the &amp;quot;WebTierELBSecurityGroups&amp;quot; from the output 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the security groups associated with all Autoscaling launch configurations and make sure that the above Web tier ELB security group is not present:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-launch-configurations --query &amp;quot;LaunchConfigurations[*].{SecurityGroups:SecurityGroups, LaunchConfigurationName:LaunchConfigurationName}&amp;quot; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.762">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.2" name="Enable the ELB logging" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Elastic Load Balancing automatically distributes incoming application traffic across multiple Amazon EC2 instances in the a VPC. It enables you to achieve greater levels of fault tolerance in your applications, seamlessly providing the required amount of load balancing capacity needed to distribute application traffic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  AWS Elastic Load Balancers (ELBs) can record all incoming requests sent to the load balancer and store within logs on S3. This allows for diagnosing application failures and analyzing web traffic and security analysis of incoming traffic 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified CLI: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a JSON file containing the attributes you want to modify and save it locally as /tmp/ElbLogs.json:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     { 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;quot;AccessLog&amp;quot;: { 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;quot;Enabled&amp;quot;: true, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;quot;S3BucketName&amp;quot;: &amp;quot;string&amp;quot;, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;quot;EmitInterval&amp;quot;: integer, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;quot;S3BucketPrefix&amp;quot;: &amp;quot;string&amp;quot; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; } 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     } 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Update the Load Balancer attributes:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb modify-load-balancer-attributes --load-balancer-name &amp;lt;elb_name&amp;gt; --load-balancer-attributes file:///tmp/ElbLogs.json 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe load balancer attributes" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancer-attributes.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
            <reference name="Amazon docs: elb describe tags" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-tags.html"/>
            <reference name="Amazon docs: enable access logs" url="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/enable-access-logs.html"/>
            <reference name="Amazon docs: modify load balancer attributes" url="https://docs.aws.amazon.com/cli/latest/reference/elb/modify-load-balancer-attributes.html"/>
          </references>
          <standards>
            <standard ref="5.2" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.2" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Via Amazon unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List all ELB's:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --query 'LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Confirm correct ELB is selected by review ELB tags:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-tags --load-balancer-names &amp;lt;elb_name&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Review selected ELB attributes and ensure Access Log is enabled:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancer-attributes --load-balancer-name &amp;lt;elb_name&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.762">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.15" name="Implement mechanism to check that Public Web Tier SSL\TLS certificates are &gt;30 days from expiration" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;Public SSL\TLS certificates that are used for AWS resources such as the ELB or CloudFront should always be renewed prior to expiration both as a security best practice and to ensure the reputation of the web application is not impacted by an expired certificate. 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation&lt;/b&gt;: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Request a certificate renewal from your CA, and upload the new certificate in IAM:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws iam upload-server-certificate --server-certificate-name &amp;lt;ssl_certificate_name&amp;gt; --certificate-body file://public_key_cert_file.pem --private-key file://my_private_key.pem --certificate-chain file://my_certificate_chain_file.pem 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;For Amazon Certificate Manager users the renewal is managed by ACM service&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Describe certificate" url="https://docs.aws.amazon.com/cli/latest/reference/acm/describe-certificate.html"/>
            <reference name="Id credentials server certs" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html"/>
            <reference name="Id credentials server certs manage" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs_manage.html"/>
            <reference name="List certificates" url="https://docs.aws.amazon.com/cli/latest/reference/acm/list-certificates.html"/>
            <reference name="List server certificates" url="https://docs.aws.amazon.com/cli/latest/reference/iam/list-server-certificates.html"/>
            <reference name="Upload server certs" url="https://docs.aws.amazon.com/cli/latest/reference/iam/upload-server-certificate.html"/>
          </references>
          <standards>
            <standard ref="1.15" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List all SSL\TLS certificates stored in IAM and check the Expiration field&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws iam list-server-certificates 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  For Amazon Certificate Manager users: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List ACM certificates and note the CertificateArnvalue of the certificates used by the app:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws acm list-certificates 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Get the details of the desired certificate and check the ExpirationDatevalue (the certificate expiration time as an Epoch timestamp):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws acm describe-certificate --certificate-arn &amp;lt;ssl_certificate_arn&amp;gt; --query "Certificate.{ExpirationDate:NotAfter, Status:Status, SubjectAlternativeNames:SubjectAlternativeNames, DomainName:DomainName}"&amp;nbsp; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.761">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-ELB-02" name="Select the Server Order Preference option" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Within Elastic Load Balancing ensure the use of newer and stronger cipher suites when
                        establishing a new connection supporting the Server Order Preference option. When this option is
                        selected, the load balancer selects the first cipher in its list that is in the client's list of
                        ciphers.
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;b&gt; &lt;b&gt;Remediation:&lt;/b&gt; &lt;/b&gt;
                        &lt;br /&gt;To enable Server Order Preference:
                        &lt;br /&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Open the Amazon EC2 console.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Under LOAD BALANCING, choose Load Balancers.&lt;br /&gt;&lt;/li&gt;
                        &lt;li&gt;Select your Load Balancer.&lt;br /&gt;&lt;/li&gt;
                        &lt;li&gt;On the Listeners tab, for Cipher, choose Change.&lt;br /&gt;&lt;/li&gt;
                        &lt;li&gt;On the Select a Cipher page, select Custom Security Policy.&lt;br /&gt;&lt;/li&gt;
                        &lt;li&gt;For SSL Options, select Server Order Preference.&lt;br /&gt;&lt;/li&gt;
                        &lt;li&gt;Click Save. &lt;/li&gt;
                        &lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
                            &lt;li&gt;Open the Amazon EC2 console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Under LOAD BALANCING, choose Load Balancers.&lt;br /&gt;&lt;/li&gt;
                            &lt;li&gt;Select your Load Balancer.&lt;br /&gt;&lt;/li&gt;
                            &lt;li&gt;On the Listeners tab, for Cipher, choose Change.&lt;br /&gt;&lt;/li&gt;
                            &lt;li&gt;On the Select a Cipher page, select Custom Security Policy.&lt;br /&gt;&lt;/li&gt;
                            &lt;li&gt;For SSL Options, check that the option Server Order Preference is selected. &lt;/li&gt;
                            &lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.760">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.13" name="Set a HTTPS connection from all CloudFront Distributions to the Web Tier ELB origin" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Configure the Origin Protocol Policy for the Web tier ELB origin either to require that CloudFront fetches objects from your origin by using HTTPS or to require that CloudFront uses the protocol that the viewer used to request the objects. For example, if you choose Match Viewer for the Origin Protocol Policy and the viewer uses HTTPS to request an object from CloudFront, CloudFront also uses HTTPS to forward the request to your origin. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  In order to use HTTPS, an SSL\TLS certificate must be attached. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  To ensure that objects are encrypted from edge locations to the Web-Tier ELB origin according to the data classification policy, use Match Viewer. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;For configuring "OriginProtocolPolicy"first save locally the current distribution config:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws cloudfront get-distribution-config --id application_cfn_distribution_id&amp;nbsp; --query "DistributionConfig" &amp;gt; /tmp/cf-distribution.json 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div style=""&gt;
   Edit and replace "OriginProtocolPolicy"element in /tmp/cf-distribution.json with the below section: 
 &lt;/div&gt; 
 &lt;div style=""&gt;
   "OriginProtocolPolicy": "https-only", 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Retrieve the current ETag of your CloudFront distribution:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws cloudfront get-distribution-config --id &amp;lt;application_cfn_distribution_id&amp;gt;&amp;nbsp; --query "ETag" 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Update the CloudFront distribution using the edited config and the above Etag:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws cloudfront update-distribution --id &amp;lt;application_cfn_distribution_id&amp;gt; --distribution-config file:///tmp/cf-distribution.json --if-match &amp;lt;application_cfn_distribution_etag&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Get streaming distribution config" url="https://docs.aws.amazon.com/cli/latest/reference/cloudfront/get-streaming-distribution-config.html"/>
            <reference name="List distributions" url="https://docs.aws.amazon.com/cli/latest/reference/cloudfront/list-distributions.html"/>
            <reference name="Secure Connections" url="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html"/>
            <reference name="Update distribution" url="https://docs.aws.amazon.com/cli/latest/reference/cloudfront/update-distribution.html"/>
          </references>
          <standards>
            <standard ref="3.13" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check the &amp;quot;OriginProtocolPolicy&amp;quot; used by application Cloudfront
                            distributions (it should be set as https-only):&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws cloudfront list-distributions --query &amp;quot;DistributionList.Items[*].{Id:Id,
                            OriginProtocolPolicy:Origins.Items[*].CustomOriginConfig.OriginProtocolPolicy}&amp;quot;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.761">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.1" name="Tag all resources" issueId="" issueLink="" platform="" cost="0" risk="43" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
 &lt;b&gt;Description&lt;/b&gt;:
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Tags enable customers to categorize AWS resources in different ways, for example, by purpose, owner, or environment.
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Each tag consists of a key and an optional value, both of which customer's define.
  You should define a set of tags for the following items to help you track each instance's owner and operating environment, cost center, and other items.
&lt;/div&gt;
&lt;div&gt;
 &lt;ol&gt;
  &lt;li&gt;Amazon EC2 instances&lt;/li&gt;
  &lt;li&gt;ELB&lt;/li&gt;
  &lt;li&gt;EBS Volumes&lt;/li&gt;
  &lt;li&gt;S3 Buckets&lt;/li&gt;
 &lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  A resource may have up to 10 tags associated with key &amp;amp; value such as:
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Key=tier, Value=app&lt;/li&gt;
  &lt;li&gt;Key=environment, Value=production&lt;/li&gt;
  &lt;li&gt;Key=costcenter, Value=sales&lt;/li&gt;
 &lt;/ul&gt;
 &lt;div&gt;
  &lt;b&gt;Remediation:&lt;/b&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;&lt;br&gt;&lt;/b&gt;
  Tag all your 3 tier Web Application resources based on their tier membership (Web, App, Data), and your organizational requirements.
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Cloud Compliance" url="https://d0.awsstatic.com/whitepapers/compliance/AWS_Anitian_Wookbook_PCI_Cloud_Compliance.pdf"/>
            <reference name="Resource groups and tagging" url="https://aws.amazon.com/blogs/aws/resource-groups-and-tagging/"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify tags are being used.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.762">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.17" name="Use a Web-Tier ELB Security Group to accept only HTTP/HTTPS" issueId="" issueLink="" platform="" cost="1" risk="43" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  A security group acts as a virtual firewall for your instance to control inbound and outbound traffic. When you launch an instance in the AWS Virtual Private Cloud (VPC), you can assign the instance up to five security groups. Security groups act at the instance level, not the subnet level. Therefore, each instance in a subnet in your VPC could be assigned to a different set of security groups. If you don't specify a particular group at launch time, the instance is automatically assigned to the default security group for the VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  For each security group, you add rules that control the inbound traffic to instances, and a separate set of rules that control the outbound traffic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  The SG associated with the Web tier ELB should allow connectivity from any source IP (0.0.0.0/0) only for the HTTP (TCP 80) and HTTPS (TCP 443) ports. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;First remove all the ingress rules for the security group associated with the Web tier ELB:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws ec2 describe-security-groups --group-id &amp;lt;security_group_id&amp;gt; --query &amp;quot;SecurityGroups[0].IpPermissions&amp;quot; &amp;gt; /tmp/IpPermissions.json 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div style=""&gt; 
   &lt;br /&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws ec2 revoke-security-group-ingress --group-id &amp;lt;security_group_id&amp;gt; --ip-permissions file:///tmp/IpPermissions.json 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;create locally the below json file containing ingress rules for any source IP (0.0.0.0/0) only for the HTTP (TCP 80) and HTTPS (TCP 443) ports and name it IpPermissions.json:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     [ 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; { 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;PrefixListIds&amp;quot;: [], 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;FromPort&amp;quot;: 80, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;IpRanges&amp;quot;: [ 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; { 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;CidrIp&amp;quot;: &amp;quot;0.0.0.0/0&amp;quot; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ], 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;ToPort&amp;quot;: 80, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;IpProtocol&amp;quot;: &amp;quot;tcp&amp;quot;, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;UserIdGroupPairs&amp;quot;: [] 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; }, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; { 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;PrefixListIds&amp;quot;: [], 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;FromPort&amp;quot;: 443, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;IpRanges&amp;quot;: [ 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; { 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;CidrIp&amp;quot;: &amp;quot;0.0.0.0/0&amp;quot; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ], 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;ToPort&amp;quot;: 443, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;IpProtocol&amp;quot;: &amp;quot;tcp&amp;quot;, 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;UserIdGroupPairs&amp;quot;: [] 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     &amp;nbsp; &amp;nbsp; } 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     ] 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Add to the security group associated with the Web tier ELB the above ingress rules:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws ec2 authorize-security-group-ingress --group-id &amp;lt;security_group_id&amp;gt;&amp;nbsp; --ip-permissions file:///PathTo/IpPermissions.json 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.17" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.17" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the security group associated with the Web tier ELB:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-name &amp;lt;your_web_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].{DNSName:DNSName, SecurityGroups:SecurityGroups, SourceSecurityGroup:SourceSecurityGroup}&amp;quot; --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;div&gt; 
  &lt;br /&gt; 
 &lt;/div&gt; 
&lt;/blockquote&gt; 
&lt;div&gt;
  note the security group id from the output 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the ingress rules for the above security group, and make sure that only HTTP (TCP 80) and HTTPS (TCP 443) traffic is allowed from any source IP (0.0.0.0/0)any source IP (0.0.0.0/0):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-security-groups --group-ids&amp;nbsp; &amp;lt;security_group_id&amp;gt; --query &amp;quot;SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions}&amp;quot; --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.762">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.3" name="Use Cloudfront CDN" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Amazon CloudFront can be used to deliver either the entire website, including dynamic, 
  static, streaming, and interactive content using a global network of edge locations. 
  Requests for your content are automatically routed to the nearest edge location, so content 
  is delivered with the best possible performance. Amazon CloudFront is optimized to work 
  with other Amazon Web Services, like Amazon Simple Storage Service (Amazon S3), 
  Amazon Elastic Compute Cloud (Amazon EC2), Amazon Elastic Load Balancing, and 
  Amazon Route 53. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Amazon CloudFront gives you three options for accelerating your entire website while 
  delivering your content securely over HTTPS from all of CloudFront's edge locations. In 
  addition to delivering securely from the edge, you can also configure CloudFront to use 
  HTTPS connections for origin fetches so that your data is encrypted end-to-end from your 
  origin to your end users. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;You can either create a Cloudfront distribution only by specifying the origin domain name (ELB, S3 bucket or web server):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudfront create-distribution --origin-domain-name &amp;lt;your_original_domain_name&amp;gt; -- default-root-object index.html 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Or by creating locally a distribution config file distconfig.json with all the Cloudfront distribution parameters:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudfront create-distribution --distribution-config file://distconfig.json 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create distribution" url="https://docs.aws.amazon.com/cli/latest/reference/cloudfront/create-distribution.html"/>
            <reference name="List distributions" url="https://docs.aws.amazon.com/cli/latest/reference/cloudfront/list-distributions.html"/>
            <reference name="Working with distributions" url="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-working-with.html"/>
          </references>
          <standards>
            <standard ref="6.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the Cloudfront distributions present in the AWS account, and check in the aliases field for the presence of the domain name used by the application:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudfront list-distributions --query "DistributionList.Items[*].{Id:Id, Status:Status, DomainName:DomainName, Aliases:Aliases.Items}" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.763">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.14" name="Use HTTPS listener for App Tier ELB" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  A load balancer takes requests from clients and distributes them across the EC2 instances that are registered with the load balancer (also known as back-end instances). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A listener is a process that checks for connection requests. It is configured with a protocol and a port for front-end (client to load balancer) connections. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Note: an HTTPS listener configured on the ELB is not mandatory if you are terminating SSL connections directly on the App Tier EC2 instances, and using a TCP listener on the ELB (TCP pass-through) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using an HTTPS Elastic Load Balancer listener will make sure the application traffic between the client and the App Tier ELB is encrypted over the SSL\TLS channel. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If the ListenerDescription field is missing, add a new HTTPS listener configured with a SSL\TLS certificate (the listener forwards traffic to the backend instances on port 80, but this can be modified by editing InstancePort=80):&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws elb create-load-balancer-listeners --load-balancer-name &amp;lt;app_tier_elb&amp;gt; --listeners Protocol=HTTPS,LoadBalancerPort=443,InstanceProtocol=HTTP,InstancePort=80, SSLCertificateId=ssl_certificate_arn 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: ELB listener configuration" url="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-listener-config.html"/>
            <reference name="Amazon docs: create load balancer listeners" url="https://docs.aws.amazon.com/cli/latest/reference/elb/create-load-balancer-listeners.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
          </references>
          <standards>
            <standard ref="1.14" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
  (Note that you should replace &amp;lt;app_tier_elb&amp;gt; with your App tier ELB name) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check if the App Tier ELB is using an HTTPS or TCP listener. Note if the ListenerDescription field is missing or not:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-names &amp;lt;app_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName, DNSName:DNSName, Scheme:Scheme, ListenerDescriptions:ListenerDescriptions[?Listener.Protocol == 'HTTPS' || Listener.Protocol == 'TCP']}&amp;quot; --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.761">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.11" name="Use HTTPS listener for Web Tier ELB" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  A load balancer takes requests from clients and distributes them across the EC2 instances that are registered with the load balancer (also known as back-end instances). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A listener is a process that checks for connection requests. It is configured with a protocol and a port for front-end (client to load balancer) connections 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Note: an HTTPS listener configured on the ELB is not mandatory if you are terminating SSL connections directly on the Web Tier EC2 instances, and using a TCP listener on the ELB (TCP pass-through) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using an HTTPS Elastic Load Balancer listener will make sure the application traffic between the client and the Web Tier ELB is encrypted over the SSL\TLS channel. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;div&gt;
    Using the Amazon unified command line interface: 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;ul&gt; 
    &lt;li&gt;If the ListenerDescription field is missing, add a new HTTPS listener configured with a SSL\TLS certificate (the listener forwards traffic to the backend instances on port 80, but this can be modified by editing InstancePort=80):&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt; 
    &lt;div&gt;
      aws elb create-load-balancer-listeners --load-balancer-name &amp;lt;web_tier_elb&amp;gt; --listeners Protocol=HTTPS,LoadBalancerPort=443,InstanceProtocol=HTTP,InstancePort=80, SSLCertificateId=ssl_certificate_arn 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: ELB listener configuration" url="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-listener-config.html"/>
            <reference name="Amazon docs: create load balancer listeners" url="https://docs.aws.amazon.com/cli/latest/reference/elb/create-load-balancer-listeners.html"/>
            <reference name="Amazon docs: describe load balancers" url="https://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html"/>
          </references>
          <standards>
            <standard ref="1.11" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
  (Note that you should replace &amp;lt;web_tier_elb&amp;gt; with your Web-tier ELB name) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check if the Web Tier ELB is using an HTTPS or TCP listener. Note if the ListenerDescription field is missing or not:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws elb describe-load-balancers --load-balancer-names &amp;lt;web_tier_elb&amp;gt; --query &amp;quot;LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName, DNSName:DNSName, Scheme:Scheme, ListenerDescriptions:ListenerDescriptions[?Listener.Protocol == 'HTTPS' || Listener.Protocol = 'TCP']}&amp;quot; --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.761">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-ELB-01" name="Use the Perfect Forward Secrecy feature" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>For greater communication privacy Elastic Load Balancing allows the use of Perfect Forward
                        Secrecy. This feature provides additional safeguards against eavesdropping on encrypted data,
                        through the use of a unique random session key, and therefore prevents the decoding of captured
                        data, even if the secret long-term key is compromised.
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;b&gt;To begin using Perfect Forward Secrecy: &lt;br /&gt;&lt;/b&gt;Configure your load
                        balancer with the newly added Elliptic Curve Cryptography (ECDHE) cipher suites.</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that your load balancer is configured with the newly added Elliptic Curve
                            Cryptography (ECDHE) cipher suites.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.760">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AMAZON WEB SERVICES" name="Amazon Web Services" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-CF-DOS" issueId="" issueLink="" name="Attackers perform a denial of service" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;A Denial of Service (DoS) attack is a deliberate attempt to make your website unavailable. Attackers use a variety of techniques that consume large amount of resources.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="SYSTEM-VUL-DOS">
                  <countermeasures>
                    <countermeasure ref="aws-tier-6.3" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-6.3" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="EAVESDROPPING-COMMUNICATIONS" issueId="" issueLink="" name="An attacker eavesdrops on the communication between the client and server and decrypts the data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Eavesdropping on communication is a network attack that captures network packets transmitted by other computers and reads the data content. This type of network attack is most effective when weak encryption services are used. An attacker could eavesdrop on the communication between the client and server and decrypt the encrypted data.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-295">
                  <countermeasures>
                    <countermeasure ref="aws-tier-1.12" mitigation="10"/>
                    <countermeasure ref="aws-tier-1.15" mitigation="10"/>
                    <countermeasure ref="aws-tier-1.9" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="aws-tier-1.11" mitigation="10"/>
                    <countermeasure ref="aws-tier-1.14" mitigation="10"/>
                    <countermeasure ref="aws-tier-3.13" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-326">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-ELB-01" mitigation="10"/>
                    <countermeasure ref="Hydras-AWS-ELB-02" mitigation="10"/>
                    <countermeasure ref="aws-tier-1.10" mitigation="10"/>
                    <countermeasure ref="aws-tier-1.13" mitigation="10"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-ELB-01" mitigation="10"/>
                <countermeasure ref="Hydras-AWS-ELB-02" mitigation="10"/>
                <countermeasure ref="aws-tier-1.10" mitigation="10"/>
                <countermeasure ref="aws-tier-1.11" mitigation="10"/>
                <countermeasure ref="aws-tier-1.12" mitigation="10"/>
                <countermeasure ref="aws-tier-1.13" mitigation="10"/>
                <countermeasure ref="aws-tier-1.14" mitigation="10"/>
                <countermeasure ref="aws-tier-1.15" mitigation="10"/>
                <countermeasure ref="aws-tier-1.9" mitigation="10"/>
                <countermeasure ref="aws-tier-3.13" mitigation="10"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="UNAUDITABLE-CHANGES-RESOURCES-AWS" issueId="" issueLink="" name="Attackers make undetected and unaudited changes in the resources" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;div&gt;
                                If audit trails in the resources are not enabled or not protected, attackers could gain
                                access to the system and modify or delete data from the resources and the changes are
                                not detected.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Logging-3.4">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.2" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="unknown-resource-status">
                  <countermeasures>
                    <countermeasure ref="aws-tier-3.10" mitigation="34"/>
                    <countermeasure ref="aws-tier-3.9" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-3.10" mitigation="34"/>
                <countermeasure ref="aws-tier-3.9" mitigation="33"/>
                <countermeasure ref="aws-tier-5.2" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-NET-01">
                  <countermeasures>
                    <countermeasure ref="aws-tier-6.13" mitigation="9"/>
                    <countermeasure ref="aws-tier-6.17" mitigation="7"/>
                    <countermeasure ref="aws-tier-6.19" mitigation="7"/>
                    <countermeasure ref="aws-tier-6.21" mitigation="7"/>
                    <countermeasure ref="aws-tier-6.22" mitigation="7"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.1" mitigation="7"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.2">
                  <countermeasures>
                    <countermeasure ref="C-AWS-ELB1" mitigation="7"/>
                    <countermeasure ref="aws-tier-3.1" mitigation="7"/>
                    <countermeasure ref="aws-tier-3.14" mitigation="7"/>
                    <countermeasure ref="aws-tier-3.15" mitigation="7"/>
                    <countermeasure ref="aws-tier-6.18" mitigation="7"/>
                    <countermeasure ref="aws-tier-6.26" mitigation="7"/>
                    <countermeasure ref="aws-tier-6.5" mitigation="7"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="C-AWS-SRA-9" mitigation="7"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-ELB1" mitigation="7"/>
                <countermeasure ref="C-AWS-SRA-9" mitigation="7"/>
                <countermeasure ref="aws-tier-3.1" mitigation="7"/>
                <countermeasure ref="aws-tier-3.14" mitigation="7"/>
                <countermeasure ref="aws-tier-3.15" mitigation="7"/>
                <countermeasure ref="aws-tier-5.1" mitigation="7"/>
                <countermeasure ref="aws-tier-6.13" mitigation="9"/>
                <countermeasure ref="aws-tier-6.17" mitigation="7"/>
                <countermeasure ref="aws-tier-6.18" mitigation="7"/>
                <countermeasure ref="aws-tier-6.19" mitigation="7"/>
                <countermeasure ref="aws-tier-6.21" mitigation="7"/>
                <countermeasure ref="aws-tier-6.22" mitigation="7"/>
                <countermeasure ref="aws-tier-6.26" mitigation="7"/>
                <countermeasure ref="aws-tier-6.5" mitigation="7"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="c7093345-1454-4b8b-9799-23a029c7253a" diagramComponentId="4ef91be7-896c-4657-8090-ad10c13eeee4" ref="9e826bff-c7f6-4d79-911a-cf5799c67490" name="AWS Global Accelerator" desc="" library="Hydras-AWS-Foundation" parentComponentRef="fced5fe5-ffd5-4996-acf4-781167c3cbad" componentDefinitionRef="CD-GLOBAL-ACC" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:18:25.793">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:18:25.793">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-GLOBAL-ACC1" name="Control access to AWS Global Accelerator" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Control access to AWS Global Accelerator&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Policies let an administrator specify who has access to AWS resources and what actions they can perform on those resources. Every IAM entity (user or role) starts with no permissions. In other words, by default, users can do nothing, not even view their own access keys. To give a user permission to do something, an administrator must attach a permissions policy to a user. Or they can add the user to a group that has the intended permissions. When an administrator then gives permissions to a group, all users in that group get those permissions.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; The following are two examples of policies that you could use with Global Accelerator The first example policy grants a user programmatic access to all List and Describe actions for accelerators in your AWS account:&lt;/p&gt; 
&lt;p&gt;{ "Version": "2012-10-17", "Statement": [ { "Effect": "Allow", "Action": [ "globalaccelerator:List*", "globalaccelerator:Describe*" ], "Resource": "*" } ]&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;The following example grants programmatic access to the ListAccelerators operation:&lt;/p&gt; 
&lt;p&gt;{ "Version": "2012-10-17", "Statement": [ { "Effect": "Allow", "Action": [ "globalaccelerator:ListAccelerators", ], "Resource": "*" } ]&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Identity and access management for AWS Global Accelerator" url="https://docs.aws.amazon.com/global-accelerator/latest/dg/auth-and-access-control.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:18:25.731">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.1" name="Tag all resources" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
 &lt;b&gt;Description&lt;/b&gt;:
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Tags enable customers to categorize AWS resources in different ways, for example, by purpose, owner, or environment.
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Each tag consists of a key and an optional value, both of which customer's define.
  You should define a set of tags for the following items to help you track each instance's owner and operating environment, cost center, and other items.
&lt;/div&gt;
&lt;div&gt;
 &lt;ol&gt;
  &lt;li&gt;Amazon EC2 instances&lt;/li&gt;
  &lt;li&gt;ELB&lt;/li&gt;
  &lt;li&gt;EBS Volumes&lt;/li&gt;
  &lt;li&gt;S3 Buckets&lt;/li&gt;
 &lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  A resource may have up to 10 tags associated with key &amp;amp; value such as:
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Key=tier, Value=app&lt;/li&gt;
  &lt;li&gt;Key=environment, Value=production&lt;/li&gt;
  &lt;li&gt;Key=costcenter, Value=sales&lt;/li&gt;
 &lt;/ul&gt;
 &lt;div&gt;
  &lt;b&gt;Remediation:&lt;/b&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;&lt;br&gt;&lt;/b&gt;
  Tag all your 3 tier Web Application resources based on their tier membership (Web, App, Data), and your organizational requirements.
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Cloud Compliance" url="https://d0.awsstatic.com/whitepapers/compliance/AWS_Anitian_Wookbook_PCI_Cloud_Compliance.pdf"/>
            <reference name="Resource groups and tagging" url="https://aws.amazon.com/blogs/aws/resource-groups-and-tagging/"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify tags are being used.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:18:25.732">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="C-AWS-GLOBAL-ACC1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-GLOBAL-ACC1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-5.1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="4f663c9f-d8be-43c7-ae95-b78155ac5f5d" diagramComponentId="6e3b85ee-a484-471c-8095-36fc4ada4bb4" ref="f881c161-9a52-4808-8a67-f19292f93e96" name="AWS Route 53 DNS Service" desc="" library="Hydras-AWS-Foundation" parentComponentRef="fced5fe5-ffd5-4996-acf4-781167c3cbad" componentDefinitionRef="route-53" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.165">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.164">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="aws-tier-6.2" name="Create a DNS alias record for the root domain" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  While ordinary Amazon Route 53 resource record sets are standard DNS resource record 
  sets, alias resource record sets provide an Amazon Route 53-specific extension to DNS 
  functionality. Instead of an IP address or a domain name, an alias resource record set 
  contains a pointer to a CloudFront distribution or an ELB load balancer. 
  Alias resource record sets can save you time because Amazon Route 53 automatically 
  recognizes changes in the resource record sets that the alias resource record set refers to. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  First create a json file that represents the alias record that you want to add, and save it 
  locally as "alias.json". Below you can find a simple alias record representation: 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;div&gt;
   { 
 &lt;/div&gt; 
 &lt;div&gt;
   "Changes": [ 
 &lt;/div&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    { 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt;
     "Action": "CREATE", 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt;
     "ResourceRecordSet": { 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt;
      "Name": "&amp;lt;your_root_domain&amp;gt;", 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt;
      "Type": "A", 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt;
      "AliasTarget": { 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;blockquote&gt; 
     &lt;div&gt;
       "HostedZoneId": "hosted zone ID for your CloudFront distribution, Amazon S3 bucket, Elastic Load Balancing load balancer, or Amazon Route 53 hosted zone", 
     &lt;/div&gt; 
    &lt;/blockquote&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;blockquote&gt; 
     &lt;div&gt;
       "DNSName": "DNS domain name for your CloudFront distribution, Amazon S3 bucket, Elastic Load Balancing load balancer, or another resource record set in this hosted zone", 
     &lt;/div&gt; 
    &lt;/blockquote&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;blockquote&gt; 
     &lt;div&gt;
       "EvaluateTargetHealth": false 
     &lt;/div&gt; 
    &lt;/blockquote&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt;
      } 
    &lt;/div&gt; 
   &lt;/blockquote&gt;} 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    } 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;div&gt;
   ] 
 &lt;/div&gt; 
 &lt;div&gt;
   } 
 &lt;/div&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create an Alias records in your hosted zone: &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws route53 change-resource-record-sets --hosted-zone-id &amp;lt;your_hosted_zone_id&amp;gt; -- change-batch file:///PathTo/alias.json 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Change resource record sets" url="https://docs.aws.amazon.com/cli/latest/reference/route53/change-resource-record-sets.html"/>
            <reference name="List resource record sets" url="https://docs.aws.amazon.com/cli/latest/reference/route53/list-resource-record-sets.html"/>
            <reference name="Resource record sets: choosing alias/non alias" url="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resource-record-sets-choosing-alias-non-alias.html"/>
          </references>
          <standards>
            <standard ref="6.2" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List only the Alias records of the hosted zone used by the application. Use the hosted zone id from the previous recommendation. Check if an Alias record is created for the root domain:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws route53 list-resource-record-sets --hosted-zone-id &amp;lt;your_hosted_zone_id&amp;gt; --query 'ResourceRecordSets[?AliasTarget != null]' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.094">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-CLOUDTRAIL2" name="Log to a dedicated and centralized Amazon S3 bucket" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Log to a dedicated and centralized Amazon S3 bucket&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; CloudTrail log files are an audit log of actions taken by a user, role or an AWS service. The integrity, completeness and availability of these logs is crucial for forensic and auditing purposes. By logging to a dedicated and centralized Amazon S3 bucket, you can enforce strict security controls, access, and segregation of duties.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; The following are some steps you can take:&lt;/p&gt; 
&lt;p&gt;- Create a separate AWS account as a log archive account. If you use AWS Organizations, enroll this account in the organization, and consider creating an organization trail to log data for all AWS accounts in your organization.&lt;/p&gt; 
&lt;p&gt;- If you do not use Organizations but want to log data for multiple AWS accounts, create a trail to log activity in this log archive account. Restrict access to this account to only trusted administrative users who should have access to account and auditing data.&lt;/p&gt; 
&lt;p&gt;- As part of creating a trail, whether it is an organization trail or a trail for a single AWS account, create a dedicated Amazon S3 bucket to store log files for this trail.&lt;/p&gt; 
&lt;p&gt;- If you want to log activity for more than one AWS account, modify the bucket policy to allow logging and storing log files for all AWS accounts that you want to log AWS account activity.&lt;/p&gt; 
&lt;p&gt;- If you are not using an organization trail, create trails in all of your AWS accounts, specifying the Amazon S3 bucket in the log archive account.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security Best Practices in AWS CloudTrail" url="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/best-practices-security.html"/>
            <reference name="Security OU - Log Archive account" url="https://docs.aws.amazon.com/prescriptive-guidance/latest/security-reference-architecture/log-archive.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you are using a dedicated and centralized Amazon S3 bucket for CloudTrail log files.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.093">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.1" name="Set Root Domain Alias Record to ELB" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Amazon Route 53 translates friendly domains names like www.example.com into IP addresses like 192.0.2.1. Amazon Route 53 responds to DNS queries using a global network of authoritative DNS servers, which reduces latency. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  When someone enters your domain name in a browser, a DNS request is forwarded to the nearest Amazon Route 53 DNS server in a global network of authoritative DNS servers. Amazon Route 53 responds with the IP address that you specified. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Each domain has an associated hosted zone which contains the resource records pointing to each layer of the application. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  A private hosted zone is a container that holds information about how you want to route traffic for a domain and its subdomains within the Amazon Virtual Private Cloud (Amazon VPC). To begin, you create a private hosted zone and specify the Amazon VPCs that you want to associate with the hosted zone. You then create resource record sets that determine how Amazon Route 53 responds to queries for your domain and subdomains within and among your Amazon VPCs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Route53 provides special record type called Alias that allows creation of an A record for the root domain and points it to the fully qualified domain of the Elastic Load Balancer (ELB) associated with the web-server layer or Amazon CloudFront. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  In the same way records for all other layers should be created in order to allow flexibility in the application design and not hard-code the FQDN of a resource. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a hosted zone for YourDomain.com:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws route53 create-hosted-zone --name &amp;lt;your_domain.com&amp;gt; --caller-reference &amp;lt;any_string&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: about hosted zones" url="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/AboutHostedZones.html"/>
            <reference name="Amazon docs: create hosted zones" url="https://docs.aws.amazon.com/cli/latest/reference/route53/create-hosted-zone.html"/>
            <reference name="Amazon docs: list hosted zones" url="https://docs.aws.amazon.com/cli/latest/reference/route53/list-hosted-zones.html"/>
          </references>
          <standards>
            <standard ref="6.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;List all the hosted zones and check if the domain name used by the application is
                            present among them:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws route53 list-hosted-zones --query 'HostedZones[*].{Name:Name, Id:Id}' --output table
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:21.094">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AMAZON-WEB-SERVICES" name="Amazon Web Services" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="aws-tier-6.1" mitigation="50"/>
                    <countermeasure ref="aws-tier-6.2" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-6.1" mitigation="50"/>
                <countermeasure ref="aws-tier-6.2" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="AWS-CLOUDTRAIL2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-CLOUDTRAIL2" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="964422a0-fa11-4cd9-8014-71db0242fd54" diagramComponentId="dbdcb554-9ec4-47d0-9938-a4561f82e362" ref="4a4a219e-8333-4c8e-b0c4-6d1b7ebec874" name="AWS Systems Manager" desc="" library="Hydras-AWS-Foundation" parentComponentRef="fced5fe5-ffd5-4996-acf4-781167c3cbad" componentDefinitionRef="CD-SYSTEMS-MANAGER" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:49.669">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.4" name="Sensitive data is accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data is not encrypted and is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:49.873">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-EC2-6.2" name="The instances are not patched with the latest vendor updates or are misconfigured" state="0" impact="100" issueId="" issueLink="">
          <desc>The latest vendor updates that ensure that the systems are not vulnerable have not been applied to the systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:49.873">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-SYSTEMS-MANAGER2" name="Ensure that the compliance status of the AWS EC2 Systems Manager patch compliance is COMPLIANT or NON_COMPLIANT" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Patches released by the vendor for systems that are in-scope for PCI DSS should be tested and validated before installation in production environment. Once deployed, security settings and controls should be validated to ensure that deployed patches have not impacted the security of the cardholder data environment (CDE).&lt;/p&gt;&lt;p&gt;If you use Amazon EC2 instances managed by AWS Systems Manager Patch Manager to patch managed instances in your CDE, ensure that the patches are successfully applied. To do this, check that the compliance status of the Amazon EC2 Systems Manager patch compliance is "COMPLIANT". Patch Manager can apply both operating systems and applications applicable patches.&lt;/p&gt;&lt;p&gt;This is a method used to protect system components and software from known vulnerabilities.&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;To remediate noncompliant patches&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;This rule checks whether the compliance status of the Amazon EC2 Systems Manager patch compliance is COMPLIANT or NON_COMPLIANT. To find out more about patch compliance states, see the &lt;i&gt;AWS Systems Manager User Guide&lt;/i&gt;.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Open the AWS Systems Manager console at https://console.aws.amazon.com/systems-manager/.&lt;/li&gt;&lt;li&gt;In the navigation pane, under &lt;strong&gt;Node Management&lt;/strong&gt;, choose &lt;strong&gt;Run Command&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Choose &lt;strong&gt;Run command&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Choose the radio button next to AWS-RunPatchBaseline and then change the &lt;strong&gt;Operation&lt;/strong&gt; to &lt;strong&gt;Install&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Choose &lt;strong&gt;Choose instances manually&lt;/strong&gt; and then choose the noncompliant instance(s).&lt;/li&gt;&lt;li&gt;Scroll to the bottom and then choose &lt;strong&gt;Run&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;After the command has completed, to monitor the new compliance status of your patched instances, in the navigation pane, choose &lt;strong&gt;Compliance&lt;/strong&gt;.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS PCI-DSS Controls" url="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-pci-controls.html"/>
          </references>
          <standards>
            <standard ref="6.3.3" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:49.802">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-SYSTEMS-MANAGER3" name="Ensure that the managed instances have an association compliance status of COMPLIANT" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A State Manager association is a configuration that is assigned to your managed instances. The configuration defines the state that you want to maintain on your instances. For example, an association can specify that antivirus software must be installed and running on your instances, or that certain ports must be closed.&lt;/p&gt;&lt;p&gt;After you create one or more State Manager associations, compliance status information is immediately available to you in the console or in response to AWS CLI commands or corresponding Systems Manager API operations. For associations, &lt;strong&gt;Configuration Compliance&lt;/strong&gt; shows statuses of &lt;strong&gt;Compliant&lt;/strong&gt; or &lt;strong&gt;Non-compliant&lt;/strong&gt; and the severity level assigned to the association, such as &lt;strong&gt;Critical&lt;/strong&gt; or &lt;strong&gt;Medium&lt;/strong&gt;. To learn more about State Manager association compliance, see About State Manager association compliance in the &lt;i&gt;AWS Systems Manager User Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;If you use EC2 instances managed by Systems Manager to collect inventory for your cardholder data environment (CDE), make sure that the instances are successfully associated. To do this, check whether the compliance status of the Systems Manager association compliance is COMPLIANT. Using Systems Manager can help to maintain an inventory of system components that are in scope for PCI DSS.&amp;nbsp;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;A failed association can be related to different things, including targets and SSM document names. To remediate this issue, you must first identify and investigate the association. You can then update the association to correct the specific issue.&lt;/p&gt;&lt;p&gt;You can edit an association to specify a new name, schedule, severity level, or targets. After you edit an association, Systems Manager creates a new version.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;To investigate and update a failed association&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Open the AWS Systems Manager console at https://console.aws.amazon.com/systems-manager/.&lt;/li&gt;&lt;li&gt;In the navigation pane, under &lt;strong&gt;Node Management&lt;/strong&gt;, choose &lt;strong&gt;Fleet Manager&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Choose the instance ID that has an &lt;strong&gt;Association status&lt;/strong&gt; of &lt;strong&gt;Failed&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Choose &lt;strong&gt;View details&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Choose &lt;strong&gt;Associations&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Note the name of the association that has an &lt;strong&gt;Association status &lt;/strong&gt;of &lt;strong&gt;Failed&lt;/strong&gt;. This is the association that you need to investigate. You need to use the association name in the next step.&lt;/li&gt;&lt;li&gt;In the navigation pane,under &lt;strong&gt;Node Management&lt;/strong&gt;, choose &lt;strong&gt;State Manager&lt;/strong&gt;. Search for the association name, then select the association.&lt;/li&gt;&lt;li&gt;After you determine the issue, edit the failed association to correct the problem. For information on how to edit an association, see Edit an association.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS PCI-DSS Controls" url="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-pci-controls.html"/>
          </references>
          <standards>
            <standard ref="12.5.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:49.802">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.1" name="Tag all resources" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
 &lt;b&gt;Description&lt;/b&gt;:
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Tags enable customers to categorize AWS resources in different ways, for example, by purpose, owner, or environment.
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Each tag consists of a key and an optional value, both of which customer's define.
  You should define a set of tags for the following items to help you track each instance's owner and operating environment, cost center, and other items.
&lt;/div&gt;
&lt;div&gt;
 &lt;ol&gt;
  &lt;li&gt;Amazon EC2 instances&lt;/li&gt;
  &lt;li&gt;ELB&lt;/li&gt;
  &lt;li&gt;EBS Volumes&lt;/li&gt;
  &lt;li&gt;S3 Buckets&lt;/li&gt;
 &lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  A resource may have up to 10 tags associated with key &amp;amp; value such as:
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Key=tier, Value=app&lt;/li&gt;
  &lt;li&gt;Key=environment, Value=production&lt;/li&gt;
  &lt;li&gt;Key=costcenter, Value=sales&lt;/li&gt;
 &lt;/ul&gt;
 &lt;div&gt;
  &lt;b&gt;Remediation:&lt;/b&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;&lt;br&gt;&lt;/b&gt;
  Tag all your 3 tier Web Application resources based on their tier membership (Web, App, Data), and your organizational requirements.
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Cloud Compliance" url="https://d0.awsstatic.com/whitepapers/compliance/AWS_Anitian_Wookbook_PCI_Cloud_Compliance.pdf"/>
            <reference name="Resource groups and tagging" url="https://aws.amazon.com/blogs/aws/resource-groups-and-tagging/"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify tags are being used.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:49.607">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-SYSTEMS-MANAGER1" name="Use only the SecureString parameter type for sensitive data" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use only the SecureString parameter type for sensitive data&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Parameter Store, a capability of AWS Systems Manager, provides secure, hierarchical storage for configuration data management and secrets management. You can store data such as passwords, database strings, Amazon Machine Image (AMI) IDs, and license codes as parameter values.&lt;br&gt; A SecureString parameter is any sensitive data that needs to be stored and referenced in a secure manner. If you have data that you don't want users to alter or reference in plaintext, such as passwords or license keys, create those parameters using the SecureString datatype.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Do not store sensitive data in a String or StringList parameter. For all sensitive data that must remain encrypted, use only the SecureString parameter type.&lt;/p&gt; 
&lt;p&gt;How to create a parameter (console)&lt;/p&gt; 
&lt;p&gt;The following procedure walks you through the process of creating a parameter in the Parameter Store console. You can create String, StringList, and SecureString parameter types in the console.&lt;/p&gt; 
&lt;p&gt;To create a parameter&lt;/p&gt; 
&lt;p&gt;1. Open the AWS Systems Manager console.&lt;/p&gt; 
&lt;p&gt;2. In the navigation pane, choose Parameter Store.&lt;/p&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;p&gt;If the AWS Systems Manager home page opens first, choose the menu icon to open the navigation pane, and then choose Parameter Store.&lt;/p&gt; 
&lt;p&gt;3. Choose Create parameter.&lt;/p&gt; 
&lt;p&gt;4. In the Name box, enter a hierarchy and a name. For example, enter /Test/helloWorld.&lt;/p&gt; 
&lt;p&gt;5. In the Description box, type a description that identifies this parameter as a test parameter.&lt;/p&gt; 
&lt;p&gt;6. For Parameter tier choose either Standard or Advanced. For more information about advanced parameters, see Managing parameter tiers.&lt;/p&gt; 
&lt;p&gt;7. For Type, choose String, StringList, or SecureString.&lt;/p&gt; 
&lt;p&gt;- If you choose String, the Data type field appears. If you are creating a parameter to hold the resource ID for an Amazon Machine Image (AMI), select aws:ec2:image. Otherwise, keep the default text selected.&lt;/p&gt; 
&lt;p&gt;- If you choose SecureString, the KMS Key ID field appears. If you don't provide an AWS Key Management Service AWS KMS key ID, a AWS KMS key Amazon Resource Name (ARN), an alias name, or an alias ARN, then the system uses alias/aws/ssm, which is the AWS managed key for Systems Manager. If you don't want to use this key, then you can use a customer managed key. For more information about AWS managed and customer managed keys, see AWS Key Management Service Concepts in the AWS Key Management Service Developer Guide.&lt;/p&gt; 
&lt;p&gt;Important&lt;br&gt; Parameter Store supports only symmetric KMS keys. You cannot use an asymmetric KMS key to encrypt your parameters.&lt;/p&gt; 
&lt;p&gt;- When creating a SecureString parameter in the console by using the key-id parameter with either a customer managed key alias name or an alias ARN, you must specify the prefix alias/ before the alias. Following is an ARN example.&lt;/p&gt; 
&lt;p&gt;arn:aws:kms:us-east-2:123456789012:alias/MyAliasName&lt;/p&gt; 
&lt;p&gt;Following is an alias name example.&lt;/p&gt; 
&lt;p&gt;alias/MyAliasName&lt;/p&gt; 
&lt;p&gt;8. In the Value box, type a value. For example, type This is my first parameter or ami-0dbf5ea29aEXAMPLE.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; Parameters can't be referenced or nested in the values of other parameters. You can't include {{}} or {{ssm:parameter-name}} in a parameter value.&lt;br&gt; If you chose SecureString, the value of the parameter is masked by default ("******") when you view it later on the parameter Overview tab. Choose Show to display the parameter value.&lt;/p&gt; 
&lt;p&gt;9. (Optional) In the Tags area, apply one or more tag key-value pairs to the parameter.&lt;/p&gt; 
&lt;p&gt;Tags are optional metadata that you assign to a resource. Tags allow you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a Systems Manager parameter to identify the type of resource to which it applies, the environment, or the type of configuration data referenced by the parameter. In this case, you could specify the following key-value pairs:&lt;/p&gt; 
&lt;p&gt;- Key=Resource,Value=S3bucket&lt;/p&gt; 
&lt;p&gt;- Key=OS,Value=Windows&lt;/p&gt; 
&lt;p&gt;- Key=ParameterType,Value=LicenseKey&lt;/p&gt; 
&lt;p&gt;10. Choose Create parameter.&lt;/p&gt; 
&lt;p&gt;11. In the parameters list, choose the name of the parameter you just created. Verify the details on the Overview tab. If you created a SecureString parameter, choose Show to view the unencrypted value.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; You can't change an advanced parameter to a standard parameter. If you no longer need an advanced parameter, or if you no longer want to incur charges for an advanced parameter, you must delete it and recreate it as a new standard parameter.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS Systems Manager Parameter Store" url="https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-parameter-store.html"/>
            <reference name="Create a Systems Manager parameter (console)" url="https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-create-console.html"/>
            <reference name="Data protection in AWS Systems Manager" url="https://docs.aws.amazon.com/systems-manager/latest/userguide/data-protection.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Run the following command to verify the details of the parameter.&lt;/p&gt;

	&lt;p&gt;aws ssm get-parameters \
    -name "the-parameter-name-you-specified" \
    -with-decryption&lt;/p&gt;

	&lt;p&gt;Note&lt;br /&gt;
If you don't specify the with-decryption parameter, or if you specify the no-with-decryption parameter, the command returns an encrypted GUID.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T10:26:49.801">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-5.1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-EC2-6.2">
                  <countermeasures>
                    <countermeasure ref="C-AWS-SYSTEMS-MANAGER2" mitigation="33"/>
                    <countermeasure ref="C-AWS-SYSTEMS-MANAGER3" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-S3-7.4">
                  <countermeasures>
                    <countermeasure ref="C-AWS-SYSTEMS-MANAGER1" mitigation="34"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-SYSTEMS-MANAGER1" mitigation="34"/>
                <countermeasure ref="C-AWS-SYSTEMS-MANAGER2" mitigation="33"/>
                <countermeasure ref="C-AWS-SYSTEMS-MANAGER3" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="48008936-07c0-488b-bc61-4936de2a8f18" diagramComponentId="258100a0-9f20-43e5-a103-f04f084ea961" ref="010dfedc-7ef1-48b5-bed8-3c139b9cd3c1" name="AWS VPC (Virtual Private Cloud)" desc="" library="Hydras-AWS-Foundation" parentComponentRef="0a4c9891-20e3-4027-a074-077337be7c97" componentDefinitionRef="vpc" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-319" name="Cleartext Transmission of Sensitive Information" state="0" impact="100" issueId="" issueLink="">
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.

Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.741">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.741">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.741">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.740">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.2" name="Networks for Amazon resources are not properly segmented" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.741">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.4" name="Sensitive data is accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data is not encrypted and is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.741">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.8" name="The access to the routing tables are not restricted" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Being highly selective in peering routing tables is a very effective way of minimizing the
                        impact of breach as resources outside of these routes are inaccessible to the peered VPC.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.741">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-01" name="Unauthorized connection attempts are allowed on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To avoid this, access to network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.740">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AWS-VPC2" name="Connect to VPC using an AWS Site-to-Site VPN connection" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Connect to VPC using an AWS Site-to-Site VPN connection&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  By default, instances that you launch into an Amazon VPC can't communicate with your own (remote) network. You can enable access to your remote network from your VPC by creating an AWS Site-to-Site VPN (Site-to-Site VPN) connection, and configuring routing to pass traffic through the connection. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  You can create, access, and manage your Site-to-Site VPN resources using any of the following interfaces: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Management Console- Provides a web interface that you can use to access your Site-to-Site VPN resources. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Command Line Interface (AWS CLI) - Provides commands for a broad set of AWS services, including Amazon VPC, and is supported on Windows, macOS, and Linux. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS SDKs - Provide language-specific APIs and takes care of many of the connection details, such as calculating signatures, handling request retries, and error handling. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Query API- Provides low-level API actions that you call using HTTPS requests. Using the Query API is the most direct way to access Amazon VPC, but it requires that your application handle low-level details such as generating the hash to sign the request, and error handling. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS VPC - VPN connections" url="https://docs.aws.amazon.com/vpc/latest/userguide/vpn-connections.html"/>
            <reference name="What is AWS Site-to-Site VPN?" url="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  After you create the AWS Site-to-Site VPN connection and configure the customer gateway, you can launch an instance and test the connection by pinging the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Before you begin, make sure of the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use an AMI that responds to ping requests. AWS recommends that you use one of the Amazon Linux AMIs.&lt;/li&gt; 
  &lt;li&gt;Configure any security group or network ACL in your VPC that filters traffic to the instance to allow inbound and outbound ICMP traffic.&lt;/li&gt; 
  &lt;li&gt;If you are using instances running Windows Server, connect to the instance and enable inbound ICMPv4 on the Windows firewall in order to ping the instance.&lt;/li&gt; 
  &lt;li&gt;(Static routing) Ensure that the customer gateway device has a static route to your VPC, and that your VPN connection has a VPN connection has a static route so that traffic can get back to your customer gateway device.&lt;/li&gt; 
  &lt;li&gt;(Dynamic routing) Ensure that the BGP status on your customer gateway device is established. It takes approximately 30 seconds for a BGP peering session to be established. Ensure that routes are advertised with BGP correctly and showing in the subnet route table, so that traffic can get back to your customer gateway. Make sure that both tunnels are configured with BGP routing.&lt;/li&gt; 
  &lt;li&gt;Ensure that you have configured routing in your subnet route tables for the VPN connection.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To test end-to-end connectivity 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Open the Amazon EC2 console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. On the dashboard, choose Launch Instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. On the Choose an Amazon Machine Image (AMI) page, choose an AMI, and then choose Select. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Choose an instance type, and then choose Next: Configure Instance Details. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. On the Configure Instance Details page, for Network, select your VPC. For Subnet, select your subnet. Choose Next until you reach the Configure Security Group page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. Select the Select an existing security group option, and then select the group that you configured earlier. Choose Review and Launch. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Review the settings that you've chosen. Make any changes that you need, and then choose Launch to select a key pair and launch the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  8. After the instance is running, get its private IP address (for example, 10.0.0.4). The Amazon EC2 console displays the address as part of the instance's details. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  9. From a computer in your network that is behind the customer gateway device, use the ping command with the instance's private IP address. A successful response is similar to the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  ping 10.0.0.4 
&lt;/div&gt; 
&lt;div&gt;
  Pinging 10.0.0.4 with 32 bytes of data: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Reply from 10.0.0.4: bytes=32 time&amp;lt;1ms TTL=128 
&lt;/div&gt; 
&lt;div&gt;
  Reply from 10.0.0.4: bytes=32 time&amp;lt;1ms TTL=128 
&lt;/div&gt; 
&lt;div&gt;
  Reply from 10.0.0.4: bytes=32 time&amp;lt;1ms TTL=128 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ping statistics for 10.0.0.4: 
&lt;/div&gt; 
&lt;div&gt;
  Packets: Sent = 3, Received = 3, Lost = 0 (0% loss), 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Approximate round trip times in milliseconds: 
&lt;/div&gt; 
&lt;div&gt;
  Minimum = 0ms, Maximum = 0ms, Average = 0ms 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To test tunnel failover, you can temporarily disable one of the tunnels on your customer gateway device, and repeat the above step. You cannot disable a tunnel on the AWS side of the VPN connection. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can use SSH or RDP to connect to your instances in the VPC. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.613">
              <output/>
            </source>
            <references>
              <reference name="Testing the Site-to-Site VPN connection" url="https://docs.aws.amazon.com/vpn/latest/s2svpn/HowToTestEndToEnd_Linux.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC1" name="Control access to VPC resources with IAM identities and policies" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
  Control access to VPC resources with IAM identities and policies 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  AWS Identity and Access Management (IAM) is an AWS service that helps an administrator securely control access to AWS resources. IAM administrators control who can be authenticated (signed in) and authorized (have permissions) to use Amazon VPC resources. IAM is an AWS service that you can use with no additional charge. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Control access to VPC resources by using: 
&lt;/div&gt; 
&lt;div&gt;
  1. Identities: 
&lt;/div&gt; 
&lt;div&gt;
  Authentication is how you sign in to AWS using your identity credentials. 
&lt;/div&gt; 
&lt;div&gt;
  You must be authenticated (signed in to AWS) as the AWS account root user, an IAM user, or by assuming an IAM role. You can also use your company's single sign-on authentication, or even sign in using Google or Facebook. In these cases, your administrator previously set up identity federation using IAM roles. When you access AWS using credentials from another company, you are assuming a role indirectly. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Identity-based policies: 
&lt;/div&gt; 
&lt;div&gt;
  Identity-based policies are JSON permissions policy documents that you can attach to an identity, such as an IAM user, role, or group. These policies control what actions that identity can perform, on which resources, and under what conditions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Resource-based policies: 
&lt;/div&gt; 
&lt;div&gt;
  Resource-based policies are JSON policy documents that you attach to a resource such as an Amazon S3 bucket. Service administrators can use these policies to define what actions a specified principal (account member, user, or role) can perform on that resource and under what conditions. Resource-based policies are inline policies. There are no managed resource-based policies. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Access control lists (ACLs): 
&lt;/div&gt; 
&lt;div&gt;
  Access control lists (ACLs) are a type of policy that controls which principals (account members, users, or roles) have permissions to access a resource. ACLs are similar to resource-based policies, although they do not use the JSON policy document format. Amazon S3, AWS WAF, and Amazon VPC are examples of services that support ACLs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Identity and access management for Amazon VPC" url="https://docs.aws.amazon.com/vpc/latest/userguide/security-iam.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.613">
              <output/>
            </source>
            <references>
              <reference name="Testing IAM policies with the IAM policy simulator" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC8" name="Create CloudWatch alarms to monitor a NAT gateway" issueId="" issueLink="" platform="" cost="0" risk="29" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Creating CloudWatch alarms to monitor a NAT gateway 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  You can monitor your NAT gateway using CloudWatch, which collects information from your NAT gateway and creates readable, near real-time metrics. You can use this information to monitor and troubleshoot your NAT gateway. NAT gateway metric data is provided at 1-minute intervals, and statistics are recorded for a period of 15 months. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  You can create a CloudWatch alarm that sends an Amazon SNS message when the alarm changes state. An alarm watches a single metric over a time period that you specify. It sends a notification to an Amazon SNS topic based on the value of the metric relative to a given threshold over a number of time periods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For example, you can create an alarm that monitors the amount of traffic coming in or leaving the NAT gateway. The following alarm monitors the amount of outbound traffic from clients in your VPC through the NAT gateway to the internet. It sends a notification when the number of bytes reaches a threshold of 5,000,000 during a 15-minute period. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To create an alarm for outbound traffic through the NAT gateway 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Open the CloudWatch console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the navigation pane, choose Alarms, Create Alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Choose NAT gateway. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Select the NAT gateway and the BytesOutToDestination metric and choose Next. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Configure the alarm as follows, and choose Create Alarm when you are done: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Under Alarm Threshold, enter a name and description for your alarm. For Whenever, choose &amp;gt;= and enter 5000000. Enter 1 for the consecutive periods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Under Actions, select an existing notification list or choose New list to create a new one. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Under Alarm Preview, select a period of 15 minutes and specify a statistic of Sum. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can create an alarm that monitors the ErrorPortAllocation metric and sends a notification when the value is greater than zero (0) for three consecutive 5-minute periods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To create an alarm to monitor port allocation errors 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Open the CloudWatch console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the navigation pane, choose Alarms, Create Alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Choose NAT Gateway. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Select the NAT gateway and the ErrorPortAllocation metric and choose Next. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Configure the alarm as follows, and choose Create Alarm when you are done: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Under Alarm Threshold, enter a name and description for your alarm. For Whenever, choose &amp;gt; and enter 0. Enter 3 for the consecutive periods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Under Actions, select an existing notification list or choose New list to create a new one. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Under Alarm Preview, select a period of 5 minutes and specify a statistic of Maximum. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring NAT gateways using Amazon CloudWatch" url="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway-cloudwatch.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  You can test an alarm by setting it to any state using the SetAlarmState API action or the set-alarm-state command in the AWS CLI. This temporary state change lasts only until the next alarm comparison occurs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.614">
              <output/>
            </source>
            <references>
              <reference name="Using Amazon CloudWatch Alarms" url="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC3" name="Create Route 53 alias records for VPC endpoints" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create Route 53 alias records for VPC endpoints 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Attackers sometimes hijack traffic to internet endpoints such as web servers by intercepting DNS queries and returning their own IP addresses to DNS resolvers in place of the actual IP addresses for those endpoints. Users are then routed to the IP addresses provided by the attackers in the spoofed response, for example, to fake websites. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can protect your domain from this type of attack, known as DNS spoofing or a man-in-the-middle attack, by configuring Domain Name System Security Extensions (DNSSEC), a protocol for securing DNS traffic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  An Amazon Virtual Private Cloud (Amazon VPC) interface endpoint lets you use AWS PrivateLink to access selected services. These services include some AWS services, services that are hosted by other AWS customers and partners in their own VPCs, and supported AWS Marketplace partner services. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To route domain traffic to an interface endpoint, use Amazon Route 53 to create an alias record. An alias record is a Route 53 extension to DNS. It's similar to a CNAME record, but you can create an alias record both for the root domain, such as example.com, and for subdomains, such as www.example.com. (You can create CNAME records only for subdomains.) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To route traffic to an Amazon VPC interface endpoint 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you created the Route 53 hosted zone and the Amazon VPC interface endpoint using the same account, skip to step 2. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you created the hosted zone and the interface endpoint using different accounts, get the service name for the interface endpoint: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Sign in to the AWS Management Console and open the Amazon VPC console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the navigation pane, choose Endpoints. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the right pane, choose the endpoint that you want to route internet traffic to. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the bottom pane, get the value of DNS name, for example, vpce-0fd00dd593example-dexample.cloudtrail.us-west-2.vpce.amazonaws.com. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Open the Route 53 console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the navigation pane, choose Hosted Zones. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Choose the name of the hosted zone that has the domain name that you want to use to route traffic to your interface endpoint. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Choose Create Record Set. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Specify the following values: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Name 
&lt;/div&gt; 
&lt;div&gt;
  Enter the domain name that you want to use to route traffic to your Amazon VPC interface endpoint. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Type 
&lt;/div&gt; 
&lt;div&gt;
  Choose A - IPv4 address. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Alias 
&lt;/div&gt; 
&lt;div&gt;
  Choose Yes. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Alias Target 
&lt;/div&gt; 
&lt;div&gt;
  How you specify the value for Alias Target depends on whether you created the hosted zone and the interface endpoint using the same AWS account or different accounts: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Same account - Choose the list, and find the category Amazon VPC Endpoints. Then choose the DNS name of the interface endpoint that you want to route internet traffic to. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Different accounts - Enter the value that you got in step 1 of this procedure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Routing Policy 
&lt;/div&gt; 
&lt;div&gt;
  Choose the applicable routing policy. For more information, see Choosing a routing policy. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Evaluate Target Health 
&lt;/div&gt; 
&lt;div&gt;
  Accept the default value of No. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Choose Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Changes generally propagate to all Route 53 servers within 60 seconds. When propagation is done, you'll be able to route traffic to your interface endpoint by using the name of the alias record that you created in this procedure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Routing traffic to an Amazon Virtual Private Cloud interface endpoint by using your domain name" url="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-vpc-interface-endpoint.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Changes generally propagate to all Route 53 servers within 60 seconds. When propagation is done, you'll be able to route traffic to your interface endpoint by using the name of the alias record that you created in this procedure.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.613">
              <output/>
            </source>
            <references>
              <reference name="Routing traffic to an Amazon Virtual Private Cloud interface endpoint by using your domain name" url="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-vpc-interface-endpoint.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC7" name="Do not put sensitive data into VPC free-form fields" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Do not put sensitive identifying information, such as your customers' account numbers, into free-form fields such as a Name field. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  AWS strongly recommends that you never put sensitive identifying information, such as your customers' account numbers, into free-form fields such as a Name field. This includes when you work with Amazon VPC or other AWS services using the console, API, AWS CLI, or AWS SDKs. Any data that you enter into Amazon VPC or other services might get picked up for inclusion in diagnostic logs. When you provide a URL to an external server, don't include credentials information in the URL to validate your request to that server. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that free-form fields do not contain sensitive data. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Data protection in Amazon Virtual Private Cloud" url="https://docs.aws.amazon.com/vpc/latest/userguide/data-protection.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.614">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.7" name="Enable VPC flow logs" issueId="" issueLink="" platform="" cost="1" risk="29" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>VPC Flow logs enable the capture of IP traffic that traverses the network interfaces within a
                        VPC. These logs are captured and sent to cloudtrail logs enabling you to detect security
                        incidents that may be occurring across the network.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Sign into the management console.&lt;/li&gt;
                        &lt;li&gt;Select VPC from the services menu.&lt;/li&gt;
                        &lt;li&gt;In the left pane click &amp;quot;Your VPCs&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Select a VPC.&lt;/li&gt;
                        &lt;li&gt;Select the Flow Logs tab from the preview panel.&lt;/li&gt;
                        &lt;li&gt;Select &amp;quot;Create Flow Log&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Choose a role (note this must be pre-created. Follow the link provided in the text
                        underneath &amp;quot;Role&amp;quot; for help).&lt;/li&gt;
                        &lt;li&gt;Select a &amp;quot;Destination Log Group&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;Create flow Log&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.9" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Sign into the management console.&lt;/li&gt;
                            &lt;li&gt;Select VPC from the services menu.&lt;/li&gt;
                            &lt;li&gt;In the left pane click &amp;quot;Your VPCs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select a VPC.&lt;/li&gt;
                            &lt;li&gt;Select the Flow Logs tab from the preview panel.&lt;/li&gt;
                            &lt;li&gt;Ensure a Log Flow exists that has Active in the Status column.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.615">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC9" name="Enable VPC Traffic Mirroring" issueId="" issueLink="" platform="" cost="0" risk="29" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable VPC Traffic Mirroring 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Traffic Mirroring is an Amazon VPC feature that you can use to copy network traffic from an elastic network interface of Amazon EC2 instances. You can then send the traffic to out-of-band security and monitoring appliances for: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Content inspection 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Threat monitoring 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Troubleshooting 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The security and monitoring appliances can be deployed as individual instances, or as a fleet of instances behind a Network Load Balancer with a UDP listener. Traffic Mirroring supports filters and packet truncation, so that you only extract the traffic of interest to monitor by using monitoring tools of your choice. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  You can create, access, and manage your traffic mirror resources using any of the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Management Console- Provides a web interface that you can use to access your traffic mirror resources. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Command Line Interface (AWS CLI) - Provides commands for a broad set of AWS services, including Amazon VPC. The AWS CLI is supported on Windows, macOS, and Linux. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS SDKs - Provide language-specific APIs. The AWS SDKs take care of many of the connection details, such as calculating signatures, handling request retries, and handling errors. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Query API- Provides low-level API actions that you call using HTTPS requests. Using the Query API is the most direct way to access Amazon VPC. However, it requires that your application handle low-level details such as generating the hash to sign the request and handling errors. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="What is Traffic Mirroring?" url="https://docs.aws.amazon.com/vpc/latest/mirroring/what-is-traffic-mirroring.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  You can review your traffic mirror targets, filters and sessions from Amazon VPC console:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Open the Amazon VPC console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the Region selector, choose the AWS Region that you used when you created the VPCs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. On the navigation pane, choose Traffic Mirroring, Mirror Targets/Mirror Filters/Mirror Sessions. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.615">
              <output/>
            </source>
            <references>
              <reference name="Getting started with Traffic Mirroring" url="https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-getting-started.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-CLOUDTRAIL2" name="Log to a dedicated and centralized Amazon S3 bucket" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Log to a dedicated and centralized Amazon S3 bucket&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; CloudTrail log files are an audit log of actions taken by a user, role or an AWS service. The integrity, completeness and availability of these logs is crucial for forensic and auditing purposes. By logging to a dedicated and centralized Amazon S3 bucket, you can enforce strict security controls, access, and segregation of duties.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; The following are some steps you can take:&lt;/p&gt; 
&lt;p&gt;- Create a separate AWS account as a log archive account. If you use AWS Organizations, enroll this account in the organization, and consider creating an organization trail to log data for all AWS accounts in your organization.&lt;/p&gt; 
&lt;p&gt;- If you do not use Organizations but want to log data for multiple AWS accounts, create a trail to log activity in this log archive account. Restrict access to this account to only trusted administrative users who should have access to account and auditing data.&lt;/p&gt; 
&lt;p&gt;- As part of creating a trail, whether it is an organization trail or a trail for a single AWS account, create a dedicated Amazon S3 bucket to store log files for this trail.&lt;/p&gt; 
&lt;p&gt;- If you want to log activity for more than one AWS account, modify the bucket policy to allow logging and storing log files for all AWS accounts that you want to log AWS account activity.&lt;/p&gt; 
&lt;p&gt;- If you are not using an organization trail, create trails in all of your AWS accounts, specifying the Amazon S3 bucket in the log archive account.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security Best Practices in AWS CloudTrail" url="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/best-practices-security.html"/>
            <reference name="Security OU - Log Archive account" url="https://docs.aws.amazon.com/prescriptive-guidance/latest/security-reference-architecture/log-archive.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you are using a dedicated and centralized Amazon S3 bucket for CloudTrail log files.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.612">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.8" name="Reduce routing tables entries for VPC peering" issueId="" issueLink="" platform="" cost="1" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Once a VPC peering connection is established, routing tables must be updated to establish any connections between the peered VPCs. These routes can be as specific as desired - even peering a VPC to only a single host on the other side of the connection. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
  Being highly selective in peering routing tables is a very effective way of minimizing the impact of breach as resources outside of these routes are inaccessible to the peered VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation: &lt;/b&gt; 
  Remove and add route table entries to ensure that the least number of subnets or hosts as is required to accomplish the purpose for peering are routable. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Via CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;For each &amp;lt;route_table_id&amp;gt; containing routes non compliant with your routing policy (which grants more than desired ""least access""), delete the non compliant route:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 delete-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidr-block &amp;lt;non_compliant_destination_CIDR&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a new compliant route:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidr-block &amp;lt;compliant_destination_CIDR&amp;gt; --vpc-peering-connection-id &amp;lt;peering_connection_id&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configurations with Specific Routes" url="https://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/peering-configurations-partial-access.html"/>
          </references>
          <standards>
            <standard ref="5.4" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review routing tables of peered VPCs for whether they route
                            all subnets of each VPC and whether that is necessary to accomplish the intended purposes
                            for peering the VPCs.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Via CLI:&lt;/b&gt;&lt;br /&gt;List all
                            the route tables from a VPC and check if &amp;quot;GatewayId&amp;quot; is pointing to a
                            &amp;lt;peering_connection_id&amp;gt; (e.g. pcx-1a2b3c4d) and if &amp;quot;DestinationCidrBlock&amp;quot;
                            is as specific as desired.&lt;br /&gt;
                            &lt;blockquote&gt;
                            aws ec2 describe-route-tables --filter &amp;quot;Name=vpc-id,Values=&amp;lt;vpc_id&amp;gt;&amp;quot;
                            --query &amp;quot;RouteTables[*].{RouteTableId:RouteTableId, VpcId:VpcId, Routes:Routes,
                            AssociatedSubnets:Associations[*].SubnetId}&amp;quot;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.615">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.2" name="Separate VPC into zones by function" issueId="" issueLink="" platform="" cost="1" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>AWS virtual private cloud is the de-facto standard for networking AWS as it provides additional security controls such as Security Groups, Network Access Control Lists (NACL's) and routing. It is recommended that resources be placed into VPC's according to use case (ie dev/test/prod) and that appropriate security levels be set on these VPC's. Placing such resources accordingly ensures that a resource of a higher security level is not exposed by the security settings of a lower labeled VPC.&amp;nbsp; 
&lt;div&gt;
  &amp;nbsp; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Identify the resources that exist within an incorrect VPC.&lt;/li&gt; 
  &lt;li&gt;Migrate or move them to the correct VPC.&lt;/li&gt; 
 &lt;/ol&gt; 
   &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that each AWS resource added to a VPC is isolated according to its designation (ie
                            test/dev/prod).</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.615">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC6" name="Use Network ACLs for VPC" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network ACLs for VPC as an additional layer of security 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  A network access control list (ACL) is an optional layer of security for your VPC that acts as a firewall for controlling traffic in and out of one or more subnets. You might set up network ACLs with rules similar to your security groups in order to add an additional layer of security to your VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  You can add or remove rules from the default network ACL, or create additional network ACLs for your VPC. When you add or remove rules from a network ACL, the changes are automatically applied to the subnets that it's associated with. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The following are the parts of a network ACL rule: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rule number. Rules are evaluated starting with the lowest numbered rule. As soon as a rule matches traffic, it's applied regardless of any higher-numbered rule that might contradict it. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Type. The type of traffic; for example, SSH. You can also specify all traffic or a custom range. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Protocol. You can specify any protocol that has a standard protocol number. For more information, see Protocol Numbers. If you specify ICMP as the protocol, you can specify any or all of the ICMP types and codes. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Port range. The listening port or port range for the traffic. For example, 80 for HTTP traffic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Source. [Inbound rules only] The source of the traffic (CIDR range). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Destination. [Outbound rules only] The destination for the traffic (CIDR range). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Allow/Deny. Whether to allow or deny the specified traffic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Network ACLs" url="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt; 
 &lt;b&gt;Review your Network ACLs using the console:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Open the Amazon VPC console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the navigation pane, choose Network ACLs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Select a Network ACL to see details. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.614">
              <output/>
            </source>
            <references>
              <reference name="Network ACLs" url="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC4" name="Use VPC endpoint policies" issueId="" issueLink="" platform="" cost="0" risk="31" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
  Use VPC endpoint policies 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  When you create an endpoint, you can attach an endpoint policy to it that controls access to the service to which you are connecting. Endpoint policies must be written in JSON format. Not all services support endpoint policies. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  A VPC endpoint policy is an IAM resource policy that you attach to an endpoint when you create or modify the endpoint. If you do not attach a policy when you create an endpoint, AWS attaches a default policy for you that allows full access to the service. If a service does not support endpoint policies, the endpoint allows full access to the service. An endpoint policy does not override or replace IAM user policies or service-specific policies (such as S3 bucket policies). It is a separate policy for controlling access from the endpoint to the specified service. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You cannot attach more than one policy to an endpoint. However, you can modify the policy at any time. If you do modify a policy, it can take a few minutes for the changes to take effect. For more information about writing policies, see Overview of IAM Policies in the IAM User Guide. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Your endpoint policy can be like any IAM policy; however, take note of the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Only the parts of the policy that relate to the specified service will work. You cannot use an endpoint policy to allow resources in your VPC to perform other actions; for example, if you add EC2 actions to an endpoint policy for an endpoint to Amazon S3, they will have no effect. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Your policy must contain a Principal element. For additional information related gateway endpoints, see Endpoint policies for gateway endpoints. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The size of an endpoint policy cannot exceed 20,480 characters (including white space). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Controlling access to services with VPC endpoints" url="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-access.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.613">
              <output/>
            </source>
            <references>
              <reference name="Testing IAM policies with the IAM policy simulator" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC5" name="Use VPC security groups" issueId="" issueLink="" platform="" cost="0" risk="31" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Use VPC security groups&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;A security group acts as a virtual firewall for your instance to control inbound and outbound traffic. When you launch an instance in a VPC, you can assign up to five security groups to the instance. Security groups act at the instance level, not the subnet level. Therefore, each instance in a subnet in your VPC can be assigned to a different set of security groups.&lt;/p&gt;&lt;p&gt;If you launch an instance using the Amazon EC2 API or a command line tool and you don't specify a security group, the instance is automatically assigned to the default security group for the VPC. If you launch an instance using the Amazon EC2 console, you have an option to create a new security group for the instance.&lt;/p&gt;&lt;p&gt;For each security group, you add rules that control the inbound traffic to instances, and a separate set of rules that control the outbound traffic.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;To create a security group using the console&lt;/p&gt;&lt;p&gt;Open the Amazon VPC console.&lt;/p&gt;&lt;p&gt;In the navigation pane, choose Security Groups.&lt;/p&gt;&lt;p&gt;Choose Create Security Group.&lt;/p&gt;&lt;p&gt;Enter a name for the security group (for example, my-security-group) and provide a description. Select the ID of your VPC from the VPC menu and choose Yes, Create.&lt;/p&gt;&lt;p&gt;To create a security group use the command line&lt;/p&gt;&lt;p&gt;create-security-group (AWS CLI)&lt;/p&gt;&lt;p&gt;New-EC2SecurityGroup (AWS Tools for Windows PowerShell)&lt;/p&gt;&lt;p&gt;Describe one or more security groups using the command line&lt;/p&gt;&lt;p&gt;describe-security-groups (AWS CLI)&lt;/p&gt;&lt;p&gt;Get-EC2SecurityGroup (AWS Tools for Windows PowerShell)&lt;/p&gt;&lt;p&gt;By default, new security groups start with only an outbound rule that allows all traffic to leave the instances. You must add rules to enable any inbound traffic or to restrict the outbound traffic.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security groups for your VPC" url="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;Review your security groups using the console:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1. Open the Amazon VPC console.&lt;/p&gt;&lt;p&gt;2. In the navigation pane, choose Security Groups.&lt;/p&gt;&lt;p&gt;3. Select a security group to see the details.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:22.613">
              <output/>
            </source>
            <references>
              <reference name="Security groups for your VPC" url="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AMAZON-WEB-SERVICES" name="Amazon Web Services" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="AWS-CLOUDTRAIL2" mitigation="50"/>
                    <countermeasure ref="AWS-VPC1" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-CLOUDTRAIL2" mitigation="50"/>
                <countermeasure ref="AWS-VPC1" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.4">
                  <countermeasures>
                    <countermeasure ref="AWS-VPC7" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-VPC7" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="OWASP A10:2017" issueId="" issueLink="" name="Exploitation of insufficient logging and monitoring" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AWS-VPC8" mitigation="33"/>
                    <countermeasure ref="AWS-VPC9" mitigation="33"/>
                    <countermeasure ref="Hydras-AWS-Logging-3.7" mitigation="34"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-VPC8" mitigation="33"/>
                <countermeasure ref="AWS-VPC9" mitigation="33"/>
                <countermeasure ref="Hydras-AWS-Logging-3.7" mitigation="34"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="EAVESDROPPING-COMMUNICATIONS" issueId="" issueLink="" name="An attacker eavesdrops on the communication between the client and server and decrypts the data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Eavesdropping on communication is a network attack that captures network packets transmitted by other computers and reads the data content. This type of network attack is most effective when weak encryption services are used. An attacker could eavesdrop on the communication between the client and server and decrypt the encrypted data.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-319">
                  <countermeasures>
                    <countermeasure ref="AWS-VPC2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-VPC2" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-NET-01">
                  <countermeasures>
                    <countermeasure ref="AWS-VPC4" mitigation="17"/>
                    <countermeasure ref="AWS-VPC5" mitigation="17"/>
                    <countermeasure ref="AWS-VPC6" mitigation="17"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="AWS-VPC3" mitigation="17"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.2">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Network-5.2" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.8">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Network-5.8" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-VPC3" mitigation="17"/>
                <countermeasure ref="AWS-VPC4" mitigation="17"/>
                <countermeasure ref="AWS-VPC5" mitigation="17"/>
                <countermeasure ref="AWS-VPC6" mitigation="17"/>
                <countermeasure ref="Hydras-AWS-Network-5.2" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-Network-5.8" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="4747642a-1478-4af6-ad0c-146811eadc6a" diagramComponentId="e2d9d926-644c-43a2-b292-250c6365a18f" ref="ade2b1c6-8bd1-4ccb-a9eb-4ca92d553182" name="AWS VPC (Virtual Private Cloud)" desc="" library="Hydras-AWS-Foundation" parentComponentRef="c50d2813-e2cc-40f2-b4e9-4363485a5dbb" componentDefinitionRef="vpc" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-319" name="Cleartext Transmission of Sensitive Information" state="0" impact="100" issueId="" issueLink="">
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.

Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.109">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.109">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.108">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.107">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.2" name="Networks for Amazon resources are not properly segmented" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.109">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.4" name="Sensitive data is accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data is not encrypted and is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.109">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.8" name="The access to the routing tables are not restricted" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Being highly selective in peering routing tables is a very effective way of minimizing the
                        impact of breach as resources outside of these routes are inaccessible to the peered VPC.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.109">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-01" name="Unauthorized connection attempts are allowed on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To avoid this, access to network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:16.108">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AWS-VPC2" name="Connect to VPC using an AWS Site-to-Site VPN connection" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Connect to VPC using an AWS Site-to-Site VPN connection&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  By default, instances that you launch into an Amazon VPC can't communicate with your own (remote) network. You can enable access to your remote network from your VPC by creating an AWS Site-to-Site VPN (Site-to-Site VPN) connection, and configuring routing to pass traffic through the connection. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  You can create, access, and manage your Site-to-Site VPN resources using any of the following interfaces: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Management Console- Provides a web interface that you can use to access your Site-to-Site VPN resources. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Command Line Interface (AWS CLI) - Provides commands for a broad set of AWS services, including Amazon VPC, and is supported on Windows, macOS, and Linux. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS SDKs - Provide language-specific APIs and takes care of many of the connection details, such as calculating signatures, handling request retries, and error handling. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Query API- Provides low-level API actions that you call using HTTPS requests. Using the Query API is the most direct way to access Amazon VPC, but it requires that your application handle low-level details such as generating the hash to sign the request, and error handling. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS VPC - VPN connections" url="https://docs.aws.amazon.com/vpc/latest/userguide/vpn-connections.html"/>
            <reference name="What is AWS Site-to-Site VPN?" url="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  After you create the AWS Site-to-Site VPN connection and configure the customer gateway, you can launch an instance and test the connection by pinging the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Before you begin, make sure of the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use an AMI that responds to ping requests. AWS recommends that you use one of the Amazon Linux AMIs.&lt;/li&gt; 
  &lt;li&gt;Configure any security group or network ACL in your VPC that filters traffic to the instance to allow inbound and outbound ICMP traffic.&lt;/li&gt; 
  &lt;li&gt;If you are using instances running Windows Server, connect to the instance and enable inbound ICMPv4 on the Windows firewall in order to ping the instance.&lt;/li&gt; 
  &lt;li&gt;(Static routing) Ensure that the customer gateway device has a static route to your VPC, and that your VPN connection has a VPN connection has a static route so that traffic can get back to your customer gateway device.&lt;/li&gt; 
  &lt;li&gt;(Dynamic routing) Ensure that the BGP status on your customer gateway device is established. It takes approximately 30 seconds for a BGP peering session to be established. Ensure that routes are advertised with BGP correctly and showing in the subnet route table, so that traffic can get back to your customer gateway. Make sure that both tunnels are configured with BGP routing.&lt;/li&gt; 
  &lt;li&gt;Ensure that you have configured routing in your subnet route tables for the VPN connection.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To test end-to-end connectivity 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Open the Amazon EC2 console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. On the dashboard, choose Launch Instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. On the Choose an Amazon Machine Image (AMI) page, choose an AMI, and then choose Select. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Choose an instance type, and then choose Next: Configure Instance Details. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. On the Configure Instance Details page, for Network, select your VPC. For Subnet, select your subnet. Choose Next until you reach the Configure Security Group page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. Select the Select an existing security group option, and then select the group that you configured earlier. Choose Review and Launch. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Review the settings that you've chosen. Make any changes that you need, and then choose Launch to select a key pair and launch the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  8. After the instance is running, get its private IP address (for example, 10.0.0.4). The Amazon EC2 console displays the address as part of the instance's details. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  9. From a computer in your network that is behind the customer gateway device, use the ping command with the instance's private IP address. A successful response is similar to the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  ping 10.0.0.4 
&lt;/div&gt; 
&lt;div&gt;
  Pinging 10.0.0.4 with 32 bytes of data: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Reply from 10.0.0.4: bytes=32 time&amp;lt;1ms TTL=128 
&lt;/div&gt; 
&lt;div&gt;
  Reply from 10.0.0.4: bytes=32 time&amp;lt;1ms TTL=128 
&lt;/div&gt; 
&lt;div&gt;
  Reply from 10.0.0.4: bytes=32 time&amp;lt;1ms TTL=128 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ping statistics for 10.0.0.4: 
&lt;/div&gt; 
&lt;div&gt;
  Packets: Sent = 3, Received = 3, Lost = 0 (0% loss), 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Approximate round trip times in milliseconds: 
&lt;/div&gt; 
&lt;div&gt;
  Minimum = 0ms, Maximum = 0ms, Average = 0ms 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To test tunnel failover, you can temporarily disable one of the tunnels on your customer gateway device, and repeat the above step. You cannot disable a tunnel on the AWS side of the VPN connection. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can use SSH or RDP to connect to your instances in the VPC. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.968">
              <output/>
            </source>
            <references>
              <reference name="Testing the Site-to-Site VPN connection" url="https://docs.aws.amazon.com/vpn/latest/s2svpn/HowToTestEndToEnd_Linux.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC1" name="Control access to VPC resources with IAM identities and policies" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
  Control access to VPC resources with IAM identities and policies 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  AWS Identity and Access Management (IAM) is an AWS service that helps an administrator securely control access to AWS resources. IAM administrators control who can be authenticated (signed in) and authorized (have permissions) to use Amazon VPC resources. IAM is an AWS service that you can use with no additional charge. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Control access to VPC resources by using: 
&lt;/div&gt; 
&lt;div&gt;
  1. Identities: 
&lt;/div&gt; 
&lt;div&gt;
  Authentication is how you sign in to AWS using your identity credentials. 
&lt;/div&gt; 
&lt;div&gt;
  You must be authenticated (signed in to AWS) as the AWS account root user, an IAM user, or by assuming an IAM role. You can also use your company's single sign-on authentication, or even sign in using Google or Facebook. In these cases, your administrator previously set up identity federation using IAM roles. When you access AWS using credentials from another company, you are assuming a role indirectly. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Identity-based policies: 
&lt;/div&gt; 
&lt;div&gt;
  Identity-based policies are JSON permissions policy documents that you can attach to an identity, such as an IAM user, role, or group. These policies control what actions that identity can perform, on which resources, and under what conditions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Resource-based policies: 
&lt;/div&gt; 
&lt;div&gt;
  Resource-based policies are JSON policy documents that you attach to a resource such as an Amazon S3 bucket. Service administrators can use these policies to define what actions a specified principal (account member, user, or role) can perform on that resource and under what conditions. Resource-based policies are inline policies. There are no managed resource-based policies. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Access control lists (ACLs): 
&lt;/div&gt; 
&lt;div&gt;
  Access control lists (ACLs) are a type of policy that controls which principals (account members, users, or roles) have permissions to access a resource. ACLs are similar to resource-based policies, although they do not use the JSON policy document format. Amazon S3, AWS WAF, and Amazon VPC are examples of services that support ACLs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Identity and access management for Amazon VPC" url="https://docs.aws.amazon.com/vpc/latest/userguide/security-iam.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.968">
              <output/>
            </source>
            <references>
              <reference name="Testing IAM policies with the IAM policy simulator" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC8" name="Create CloudWatch alarms to monitor a NAT gateway" issueId="" issueLink="" platform="" cost="0" risk="29" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Creating CloudWatch alarms to monitor a NAT gateway 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  You can monitor your NAT gateway using CloudWatch, which collects information from your NAT gateway and creates readable, near real-time metrics. You can use this information to monitor and troubleshoot your NAT gateway. NAT gateway metric data is provided at 1-minute intervals, and statistics are recorded for a period of 15 months. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  You can create a CloudWatch alarm that sends an Amazon SNS message when the alarm changes state. An alarm watches a single metric over a time period that you specify. It sends a notification to an Amazon SNS topic based on the value of the metric relative to a given threshold over a number of time periods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For example, you can create an alarm that monitors the amount of traffic coming in or leaving the NAT gateway. The following alarm monitors the amount of outbound traffic from clients in your VPC through the NAT gateway to the internet. It sends a notification when the number of bytes reaches a threshold of 5,000,000 during a 15-minute period. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To create an alarm for outbound traffic through the NAT gateway 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Open the CloudWatch console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the navigation pane, choose Alarms, Create Alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Choose NAT gateway. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Select the NAT gateway and the BytesOutToDestination metric and choose Next. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Configure the alarm as follows, and choose Create Alarm when you are done: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Under Alarm Threshold, enter a name and description for your alarm. For Whenever, choose &amp;gt;= and enter 5000000. Enter 1 for the consecutive periods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Under Actions, select an existing notification list or choose New list to create a new one. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Under Alarm Preview, select a period of 15 minutes and specify a statistic of Sum. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can create an alarm that monitors the ErrorPortAllocation metric and sends a notification when the value is greater than zero (0) for three consecutive 5-minute periods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To create an alarm to monitor port allocation errors 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Open the CloudWatch console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the navigation pane, choose Alarms, Create Alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Choose NAT Gateway. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Select the NAT gateway and the ErrorPortAllocation metric and choose Next. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Configure the alarm as follows, and choose Create Alarm when you are done: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Under Alarm Threshold, enter a name and description for your alarm. For Whenever, choose &amp;gt; and enter 0. Enter 3 for the consecutive periods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Under Actions, select an existing notification list or choose New list to create a new one. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Under Alarm Preview, select a period of 5 minutes and specify a statistic of Maximum. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring NAT gateways using Amazon CloudWatch" url="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway-cloudwatch.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  You can test an alarm by setting it to any state using the SetAlarmState API action or the set-alarm-state command in the AWS CLI. This temporary state change lasts only until the next alarm comparison occurs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.969">
              <output/>
            </source>
            <references>
              <reference name="Using Amazon CloudWatch Alarms" url="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC3" name="Create Route 53 alias records for VPC endpoints" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create Route 53 alias records for VPC endpoints 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Attackers sometimes hijack traffic to internet endpoints such as web servers by intercepting DNS queries and returning their own IP addresses to DNS resolvers in place of the actual IP addresses for those endpoints. Users are then routed to the IP addresses provided by the attackers in the spoofed response, for example, to fake websites. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can protect your domain from this type of attack, known as DNS spoofing or a man-in-the-middle attack, by configuring Domain Name System Security Extensions (DNSSEC), a protocol for securing DNS traffic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  An Amazon Virtual Private Cloud (Amazon VPC) interface endpoint lets you use AWS PrivateLink to access selected services. These services include some AWS services, services that are hosted by other AWS customers and partners in their own VPCs, and supported AWS Marketplace partner services. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To route domain traffic to an interface endpoint, use Amazon Route 53 to create an alias record. An alias record is a Route 53 extension to DNS. It's similar to a CNAME record, but you can create an alias record both for the root domain, such as example.com, and for subdomains, such as www.example.com. (You can create CNAME records only for subdomains.) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To route traffic to an Amazon VPC interface endpoint 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you created the Route 53 hosted zone and the Amazon VPC interface endpoint using the same account, skip to step 2. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you created the hosted zone and the interface endpoint using different accounts, get the service name for the interface endpoint: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Sign in to the AWS Management Console and open the Amazon VPC console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the navigation pane, choose Endpoints. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the right pane, choose the endpoint that you want to route internet traffic to. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the bottom pane, get the value of DNS name, for example, vpce-0fd00dd593example-dexample.cloudtrail.us-west-2.vpce.amazonaws.com. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Open the Route 53 console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the navigation pane, choose Hosted Zones. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Choose the name of the hosted zone that has the domain name that you want to use to route traffic to your interface endpoint. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Choose Create Record Set. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Specify the following values: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Name 
&lt;/div&gt; 
&lt;div&gt;
  Enter the domain name that you want to use to route traffic to your Amazon VPC interface endpoint. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Type 
&lt;/div&gt; 
&lt;div&gt;
  Choose A - IPv4 address. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Alias 
&lt;/div&gt; 
&lt;div&gt;
  Choose Yes. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Alias Target 
&lt;/div&gt; 
&lt;div&gt;
  How you specify the value for Alias Target depends on whether you created the hosted zone and the interface endpoint using the same AWS account or different accounts: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Same account - Choose the list, and find the category Amazon VPC Endpoints. Then choose the DNS name of the interface endpoint that you want to route internet traffic to. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Different accounts - Enter the value that you got in step 1 of this procedure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Routing Policy 
&lt;/div&gt; 
&lt;div&gt;
  Choose the applicable routing policy. For more information, see Choosing a routing policy. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Evaluate Target Health 
&lt;/div&gt; 
&lt;div&gt;
  Accept the default value of No. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Choose Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Changes generally propagate to all Route 53 servers within 60 seconds. When propagation is done, you'll be able to route traffic to your interface endpoint by using the name of the alias record that you created in this procedure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Routing traffic to an Amazon Virtual Private Cloud interface endpoint by using your domain name" url="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-vpc-interface-endpoint.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Changes generally propagate to all Route 53 servers within 60 seconds. When propagation is done, you'll be able to route traffic to your interface endpoint by using the name of the alias record that you created in this procedure.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.968">
              <output/>
            </source>
            <references>
              <reference name="Routing traffic to an Amazon Virtual Private Cloud interface endpoint by using your domain name" url="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-vpc-interface-endpoint.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC7" name="Do not put sensitive data into VPC free-form fields" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Do not put sensitive identifying information, such as your customers' account numbers, into free-form fields such as a Name field. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  AWS strongly recommends that you never put sensitive identifying information, such as your customers' account numbers, into free-form fields such as a Name field. This includes when you work with Amazon VPC or other AWS services using the console, API, AWS CLI, or AWS SDKs. Any data that you enter into Amazon VPC or other services might get picked up for inclusion in diagnostic logs. When you provide a URL to an external server, don't include credentials information in the URL to validate your request to that server. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that free-form fields do not contain sensitive data. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Data protection in Amazon Virtual Private Cloud" url="https://docs.aws.amazon.com/vpc/latest/userguide/data-protection.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.969">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.7" name="Enable VPC flow logs" issueId="" issueLink="" platform="" cost="1" risk="29" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>VPC Flow logs enable the capture of IP traffic that traverses the network interfaces within a
                        VPC. These logs are captured and sent to cloudtrail logs enabling you to detect security
                        incidents that may be occurring across the network.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Sign into the management console.&lt;/li&gt;
                        &lt;li&gt;Select VPC from the services menu.&lt;/li&gt;
                        &lt;li&gt;In the left pane click &amp;quot;Your VPCs&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Select a VPC.&lt;/li&gt;
                        &lt;li&gt;Select the Flow Logs tab from the preview panel.&lt;/li&gt;
                        &lt;li&gt;Select &amp;quot;Create Flow Log&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Choose a role (note this must be pre-created. Follow the link provided in the text
                        underneath &amp;quot;Role&amp;quot; for help).&lt;/li&gt;
                        &lt;li&gt;Select a &amp;quot;Destination Log Group&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;Create flow Log&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.9" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Sign into the management console.&lt;/li&gt;
                            &lt;li&gt;Select VPC from the services menu.&lt;/li&gt;
                            &lt;li&gt;In the left pane click &amp;quot;Your VPCs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select a VPC.&lt;/li&gt;
                            &lt;li&gt;Select the Flow Logs tab from the preview panel.&lt;/li&gt;
                            &lt;li&gt;Ensure a Log Flow exists that has Active in the Status column.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.969">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC9" name="Enable VPC Traffic Mirroring" issueId="" issueLink="" platform="" cost="0" risk="29" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable VPC Traffic Mirroring 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Traffic Mirroring is an Amazon VPC feature that you can use to copy network traffic from an elastic network interface of Amazon EC2 instances. You can then send the traffic to out-of-band security and monitoring appliances for: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Content inspection 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Threat monitoring 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Troubleshooting 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The security and monitoring appliances can be deployed as individual instances, or as a fleet of instances behind a Network Load Balancer with a UDP listener. Traffic Mirroring supports filters and packet truncation, so that you only extract the traffic of interest to monitor by using monitoring tools of your choice. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  You can create, access, and manage your traffic mirror resources using any of the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Management Console- Provides a web interface that you can use to access your traffic mirror resources. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Command Line Interface (AWS CLI) - Provides commands for a broad set of AWS services, including Amazon VPC. The AWS CLI is supported on Windows, macOS, and Linux. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS SDKs - Provide language-specific APIs. The AWS SDKs take care of many of the connection details, such as calculating signatures, handling request retries, and handling errors. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Query API- Provides low-level API actions that you call using HTTPS requests. Using the Query API is the most direct way to access Amazon VPC. However, it requires that your application handle low-level details such as generating the hash to sign the request and handling errors. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="What is Traffic Mirroring?" url="https://docs.aws.amazon.com/vpc/latest/mirroring/what-is-traffic-mirroring.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  You can review your traffic mirror targets, filters and sessions from Amazon VPC console:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Open the Amazon VPC console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the Region selector, choose the AWS Region that you used when you created the VPCs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. On the navigation pane, choose Traffic Mirroring, Mirror Targets/Mirror Filters/Mirror Sessions. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.969">
              <output/>
            </source>
            <references>
              <reference name="Getting started with Traffic Mirroring" url="https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-getting-started.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-CLOUDTRAIL2" name="Log to a dedicated and centralized Amazon S3 bucket" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Log to a dedicated and centralized Amazon S3 bucket&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; CloudTrail log files are an audit log of actions taken by a user, role or an AWS service. The integrity, completeness and availability of these logs is crucial for forensic and auditing purposes. By logging to a dedicated and centralized Amazon S3 bucket, you can enforce strict security controls, access, and segregation of duties.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; The following are some steps you can take:&lt;/p&gt; 
&lt;p&gt;- Create a separate AWS account as a log archive account. If you use AWS Organizations, enroll this account in the organization, and consider creating an organization trail to log data for all AWS accounts in your organization.&lt;/p&gt; 
&lt;p&gt;- If you do not use Organizations but want to log data for multiple AWS accounts, create a trail to log activity in this log archive account. Restrict access to this account to only trusted administrative users who should have access to account and auditing data.&lt;/p&gt; 
&lt;p&gt;- As part of creating a trail, whether it is an organization trail or a trail for a single AWS account, create a dedicated Amazon S3 bucket to store log files for this trail.&lt;/p&gt; 
&lt;p&gt;- If you want to log activity for more than one AWS account, modify the bucket policy to allow logging and storing log files for all AWS accounts that you want to log AWS account activity.&lt;/p&gt; 
&lt;p&gt;- If you are not using an organization trail, create trails in all of your AWS accounts, specifying the Amazon S3 bucket in the log archive account.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security Best Practices in AWS CloudTrail" url="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/best-practices-security.html"/>
            <reference name="Security OU - Log Archive account" url="https://docs.aws.amazon.com/prescriptive-guidance/latest/security-reference-architecture/log-archive.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you are using a dedicated and centralized Amazon S3 bucket for CloudTrail log files.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.967">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.8" name="Reduce routing tables entries for VPC peering" issueId="" issueLink="" platform="" cost="1" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Once a VPC peering connection is established, routing tables must be updated to establish any connections between the peered VPCs. These routes can be as specific as desired - even peering a VPC to only a single host on the other side of the connection. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
  Being highly selective in peering routing tables is a very effective way of minimizing the impact of breach as resources outside of these routes are inaccessible to the peered VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation: &lt;/b&gt; 
  Remove and add route table entries to ensure that the least number of subnets or hosts as is required to accomplish the purpose for peering are routable. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Via CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;For each &amp;lt;route_table_id&amp;gt; containing routes non compliant with your routing policy (which grants more than desired ""least access""), delete the non compliant route:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 delete-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidr-block &amp;lt;non_compliant_destination_CIDR&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a new compliant route:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidr-block &amp;lt;compliant_destination_CIDR&amp;gt; --vpc-peering-connection-id &amp;lt;peering_connection_id&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configurations with Specific Routes" url="https://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/peering-configurations-partial-access.html"/>
          </references>
          <standards>
            <standard ref="5.4" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review routing tables of peered VPCs for whether they route
                            all subnets of each VPC and whether that is necessary to accomplish the intended purposes
                            for peering the VPCs.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Via CLI:&lt;/b&gt;&lt;br /&gt;List all
                            the route tables from a VPC and check if &amp;quot;GatewayId&amp;quot; is pointing to a
                            &amp;lt;peering_connection_id&amp;gt; (e.g. pcx-1a2b3c4d) and if &amp;quot;DestinationCidrBlock&amp;quot;
                            is as specific as desired.&lt;br /&gt;
                            &lt;blockquote&gt;
                            aws ec2 describe-route-tables --filter &amp;quot;Name=vpc-id,Values=&amp;lt;vpc_id&amp;gt;&amp;quot;
                            --query &amp;quot;RouteTables[*].{RouteTableId:RouteTableId, VpcId:VpcId, Routes:Routes,
                            AssociatedSubnets:Associations[*].SubnetId}&amp;quot;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.969">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.2" name="Separate VPC into zones by function" issueId="" issueLink="" platform="" cost="1" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>AWS virtual private cloud is the de-facto standard for networking AWS as it provides additional security controls such as Security Groups, Network Access Control Lists (NACL's) and routing. It is recommended that resources be placed into VPC's according to use case (ie dev/test/prod) and that appropriate security levels be set on these VPC's. Placing such resources accordingly ensures that a resource of a higher security level is not exposed by the security settings of a lower labeled VPC.&amp;nbsp; 
&lt;div&gt;
  &amp;nbsp; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Identify the resources that exist within an incorrect VPC.&lt;/li&gt; 
  &lt;li&gt;Migrate or move them to the correct VPC.&lt;/li&gt; 
 &lt;/ol&gt; 
   &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that each AWS resource added to a VPC is isolated according to its designation (ie
                            test/dev/prod).</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.969">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC6" name="Use Network ACLs for VPC" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network ACLs for VPC as an additional layer of security 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  A network access control list (ACL) is an optional layer of security for your VPC that acts as a firewall for controlling traffic in and out of one or more subnets. You might set up network ACLs with rules similar to your security groups in order to add an additional layer of security to your VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  You can add or remove rules from the default network ACL, or create additional network ACLs for your VPC. When you add or remove rules from a network ACL, the changes are automatically applied to the subnets that it's associated with. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The following are the parts of a network ACL rule: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rule number. Rules are evaluated starting with the lowest numbered rule. As soon as a rule matches traffic, it's applied regardless of any higher-numbered rule that might contradict it. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Type. The type of traffic; for example, SSH. You can also specify all traffic or a custom range. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Protocol. You can specify any protocol that has a standard protocol number. For more information, see Protocol Numbers. If you specify ICMP as the protocol, you can specify any or all of the ICMP types and codes. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Port range. The listening port or port range for the traffic. For example, 80 for HTTP traffic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Source. [Inbound rules only] The source of the traffic (CIDR range). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Destination. [Outbound rules only] The destination for the traffic (CIDR range). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Allow/Deny. Whether to allow or deny the specified traffic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Network ACLs" url="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt; 
 &lt;b&gt;Review your Network ACLs using the console:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Open the Amazon VPC console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the navigation pane, choose Network ACLs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Select a Network ACL to see details. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.968">
              <output/>
            </source>
            <references>
              <reference name="Network ACLs" url="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC4" name="Use VPC endpoint policies" issueId="" issueLink="" platform="" cost="0" risk="31" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
  Use VPC endpoint policies 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  When you create an endpoint, you can attach an endpoint policy to it that controls access to the service to which you are connecting. Endpoint policies must be written in JSON format. Not all services support endpoint policies. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  A VPC endpoint policy is an IAM resource policy that you attach to an endpoint when you create or modify the endpoint. If you do not attach a policy when you create an endpoint, AWS attaches a default policy for you that allows full access to the service. If a service does not support endpoint policies, the endpoint allows full access to the service. An endpoint policy does not override or replace IAM user policies or service-specific policies (such as S3 bucket policies). It is a separate policy for controlling access from the endpoint to the specified service. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You cannot attach more than one policy to an endpoint. However, you can modify the policy at any time. If you do modify a policy, it can take a few minutes for the changes to take effect. For more information about writing policies, see Overview of IAM Policies in the IAM User Guide. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Your endpoint policy can be like any IAM policy; however, take note of the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Only the parts of the policy that relate to the specified service will work. You cannot use an endpoint policy to allow resources in your VPC to perform other actions; for example, if you add EC2 actions to an endpoint policy for an endpoint to Amazon S3, they will have no effect. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Your policy must contain a Principal element. For additional information related gateway endpoints, see Endpoint policies for gateway endpoints. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The size of an endpoint policy cannot exceed 20,480 characters (including white space). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Controlling access to services with VPC endpoints" url="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-access.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.968">
              <output/>
            </source>
            <references>
              <reference name="Testing IAM policies with the IAM policy simulator" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC5" name="Use VPC security groups" issueId="" issueLink="" platform="" cost="0" risk="31" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Use VPC security groups&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;A security group acts as a virtual firewall for your instance to control inbound and outbound traffic. When you launch an instance in a VPC, you can assign up to five security groups to the instance. Security groups act at the instance level, not the subnet level. Therefore, each instance in a subnet in your VPC can be assigned to a different set of security groups.&lt;/p&gt;&lt;p&gt;If you launch an instance using the Amazon EC2 API or a command line tool and you don't specify a security group, the instance is automatically assigned to the default security group for the VPC. If you launch an instance using the Amazon EC2 console, you have an option to create a new security group for the instance.&lt;/p&gt;&lt;p&gt;For each security group, you add rules that control the inbound traffic to instances, and a separate set of rules that control the outbound traffic.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;To create a security group using the console&lt;/p&gt;&lt;p&gt;Open the Amazon VPC console.&lt;/p&gt;&lt;p&gt;In the navigation pane, choose Security Groups.&lt;/p&gt;&lt;p&gt;Choose Create Security Group.&lt;/p&gt;&lt;p&gt;Enter a name for the security group (for example, my-security-group) and provide a description. Select the ID of your VPC from the VPC menu and choose Yes, Create.&lt;/p&gt;&lt;p&gt;To create a security group use the command line&lt;/p&gt;&lt;p&gt;create-security-group (AWS CLI)&lt;/p&gt;&lt;p&gt;New-EC2SecurityGroup (AWS Tools for Windows PowerShell)&lt;/p&gt;&lt;p&gt;Describe one or more security groups using the command line&lt;/p&gt;&lt;p&gt;describe-security-groups (AWS CLI)&lt;/p&gt;&lt;p&gt;Get-EC2SecurityGroup (AWS Tools for Windows PowerShell)&lt;/p&gt;&lt;p&gt;By default, new security groups start with only an outbound rule that allows all traffic to leave the instances. You must add rules to enable any inbound traffic or to restrict the outbound traffic.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security groups for your VPC" url="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="SF-C-MITRE" value=""/>
            <customField ref="SF-C-SCOPE" value=""/>
            <customField ref="SF-C-STANDARD-BASELINE" value=""/>
            <customField ref="SF-C-STANDARD-SECTION" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;Review your security groups using the console:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1. Open the Amazon VPC console.&lt;/p&gt;&lt;p&gt;2. In the navigation pane, choose Security Groups.&lt;/p&gt;&lt;p&gt;3. Select a security group to see the details.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-07-10T09:40:15.968">
              <output/>
            </source>
            <references>
              <reference name="Security groups for your VPC" url="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AMAZON-WEB-SERVICES" name="Amazon Web Services" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="AWS-CLOUDTRAIL2" mitigation="50"/>
                    <countermeasure ref="AWS-VPC1" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-CLOUDTRAIL2" mitigation="50"/>
                <countermeasure ref="AWS-VPC1" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.4">
                  <countermeasures>
                    <countermeasure ref="AWS-VPC7" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-VPC7" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="OWASP A10:2017" issueId="" issueLink="" name="Exploitation of insufficient logging and monitoring" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AWS-VPC8" mitigation="33"/>
                    <countermeasure ref="AWS-VPC9" mitigation="33"/>
                    <countermeasure ref="Hydras-AWS-Logging-3.7" mitigation="34"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-VPC8" mitigation="33"/>
                <countermeasure ref="AWS-VPC9" mitigation="33"/>
                <countermeasure ref="Hydras-AWS-Logging-3.7" mitigation="34"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="EAVESDROPPING-COMMUNICATIONS" issueId="" issueLink="" name="An attacker eavesdrops on the communication between the client and server and decrypts the data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Eavesdropping on communication is a network attack that captures network packets transmitted by other computers and reads the data content. This type of network attack is most effective when weak encryption services are used. An attacker could eavesdrop on the communication between the client and server and decrypt the encrypted data.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-319">
                  <countermeasures>
                    <countermeasure ref="AWS-VPC2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-VPC2" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-NET-01">
                  <countermeasures>
                    <countermeasure ref="AWS-VPC4" mitigation="17"/>
                    <countermeasure ref="AWS-VPC5" mitigation="17"/>
                    <countermeasure ref="AWS-VPC6" mitigation="17"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="AWS-VPC3" mitigation="17"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.2">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Network-5.2" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.8">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Network-5.8" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-VPC3" mitigation="17"/>
                <countermeasure ref="AWS-VPC4" mitigation="17"/>
                <countermeasure ref="AWS-VPC5" mitigation="17"/>
                <countermeasure ref="AWS-VPC6" mitigation="17"/>
                <countermeasure ref="Hydras-AWS-Network-5.2" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-Network-5.8" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="SF-T-MITRE" value=""/>
                <customField ref="SF-T-STRIDE-LM" value=""/>
                <customField ref="sbd-scope" value="FALSE"/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="9e071a72-6220-497d-a984-ed429057f9db" diagramComponentId="eb9fc5ef-3671-4c05-9284-ce62ddc60b7f" ref="19213ee7-f06a-4695-bea0-1fb7a3eabb16" name="DyanamoDB Continuous Backup" desc="" library="CS-Default" parentComponentRef="c50d2813-e2cc-40f2-b4e9-4363485a5dbb" componentDefinitionRef="empty-component" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="1040035b-7930-4ed4-9144-8e8bb05ea19c" diagramComponentId="aba3b29f-dc7e-4300-b443-83f20c3332b5" ref="b121bca7-af45-4dc7-9131-4105c0330af2" name="DyanamoDB Continuous Backup" desc="" library="CS-Default" parentComponentRef="0a4c9891-20e3-4027-a074-077337be7c97" componentDefinitionRef="empty-component" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="384edfb7-2981-486f-9efa-59823c47efb8" diagramComponentId="39decafd-f8bb-43a0-81a1-7474e445b334" ref="0a4c9891-20e3-4027-a074-077337be7c97" name="Region - US-east-1" desc="" library="CS-Default" parentComponentRef="fced5fe5-ffd5-4996-acf4-781167c3cbad" componentDefinitionRef="empty-component" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="28193416-916b-41ec-8c0c-6f2899256a40" diagramComponentId="fbca42e9-cf41-40ac-8487-341dfe52f1dc" ref="c50d2813-e2cc-40f2-b4e9-4363485a5dbb" name="Region - US-west-1" desc="" library="CS-Default" parentComponentRef="fced5fe5-ffd5-4996-acf4-781167c3cbad" componentDefinitionRef="empty-component" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
  </components>
  <threadFixScans/>
</project>
